\BOOKMARK [0][-]{toctarget.0}{Contents}{}% 1
\BOOKMARK [0][-]{chapter.1}{1 Scope}{}% 2
\BOOKMARK [0][-]{chapter.2}{2 Normative references}{}% 3
\BOOKMARK [0][-]{chapter.3}{3 Terms and definitions}{}% 4
\BOOKMARK [0][-]{chapter.4}{4 General principles}{}% 5
\BOOKMARK [1][-]{section.4.1}{4.1 Implementation compliance}{chapter.4}% 6
\BOOKMARK [2][-]{subsection.4.1.1}{4.1.1 General}{section.4.1}% 7
\BOOKMARK [2][-]{subsection.4.1.2}{4.1.2 Abstract machine}{section.4.1}% 8
\BOOKMARK [1][-]{section.4.2}{4.2 Structure of this document}{chapter.4}% 9
\BOOKMARK [1][-]{section.4.3}{4.3 Syntax notation}{chapter.4}% 10
\BOOKMARK [0][-]{chapter.5}{5 Lexical conventions}{}% 11
\BOOKMARK [1][-]{section.5.1}{5.1 Separate translation}{chapter.5}% 12
\BOOKMARK [1][-]{section.5.2}{5.2 Phases of translation}{chapter.5}% 13
\BOOKMARK [1][-]{section.5.3}{5.3 Character sets}{chapter.5}% 14
\BOOKMARK [1][-]{section.5.4}{5.4 Preprocessing tokens}{chapter.5}% 15
\BOOKMARK [1][-]{section.5.5}{5.5 Alternative tokens}{chapter.5}% 16
\BOOKMARK [1][-]{section.5.6}{5.6 Tokens}{chapter.5}% 17
\BOOKMARK [1][-]{section.5.7}{5.7 Comments}{chapter.5}% 18
\BOOKMARK [1][-]{section.5.8}{5.8 Header names}{chapter.5}% 19
\BOOKMARK [1][-]{section.5.9}{5.9 Preprocessing numbers}{chapter.5}% 20
\BOOKMARK [1][-]{section.5.10}{5.10 Identifiers}{chapter.5}% 21
\BOOKMARK [1][-]{section.5.11}{5.11 Keywords}{chapter.5}% 22
\BOOKMARK [1][-]{section.5.12}{5.12 Operators and punctuators}{chapter.5}% 23
\BOOKMARK [1][-]{section.5.13}{5.13 Literals}{chapter.5}% 24
\BOOKMARK [2][-]{subsection.5.13.1}{5.13.1 Kinds of literals}{section.5.13}% 25
\BOOKMARK [2][-]{subsection.5.13.2}{5.13.2 Integer literals}{section.5.13}% 26
\BOOKMARK [2][-]{subsection.5.13.3}{5.13.3 Character literals}{section.5.13}% 27
\BOOKMARK [2][-]{subsection.5.13.4}{5.13.4 Floating-point literals}{section.5.13}% 28
\BOOKMARK [2][-]{subsection.5.13.5}{5.13.5 String literals}{section.5.13}% 29
\BOOKMARK [2][-]{subsection.5.13.6}{5.13.6 Boolean literals}{section.5.13}% 30
\BOOKMARK [2][-]{subsection.5.13.7}{5.13.7 Pointer literals}{section.5.13}% 31
\BOOKMARK [2][-]{subsection.5.13.8}{5.13.8 User-defined literals}{section.5.13}% 32
\BOOKMARK [0][-]{chapter.6}{6 Basics}{}% 33
\BOOKMARK [1][-]{section.6.1}{6.1 Preamble}{chapter.6}% 34
\BOOKMARK [1][-]{section.6.2}{6.2 Declarations and definitions}{chapter.6}% 35
\BOOKMARK [1][-]{section.6.3}{6.3 One-definition rule}{chapter.6}% 36
\BOOKMARK [1][-]{section.6.4}{6.4 Scope}{chapter.6}% 37
\BOOKMARK [2][-]{subsection.6.4.1}{6.4.1 General}{section.6.4}% 38
\BOOKMARK [2][-]{subsection.6.4.2}{6.4.2 Point of declaration}{section.6.4}% 39
\BOOKMARK [2][-]{subsection.6.4.3}{6.4.3 Block scope}{section.6.4}% 40
\BOOKMARK [2][-]{subsection.6.4.4}{6.4.4 Function parameter scope}{section.6.4}% 41
\BOOKMARK [2][-]{subsection.6.4.5}{6.4.5 Namespace scope}{section.6.4}% 42
\BOOKMARK [2][-]{subsection.6.4.6}{6.4.6 Class scope}{section.6.4}% 43
\BOOKMARK [2][-]{subsection.6.4.7}{6.4.7 Enumeration scope}{section.6.4}% 44
\BOOKMARK [2][-]{subsection.6.4.8}{6.4.8 Template parameter scope}{section.6.4}% 45
\BOOKMARK [1][-]{section.6.5}{6.5 Name lookup}{chapter.6}% 46
\BOOKMARK [2][-]{subsection.6.5.1}{6.5.1 General}{section.6.5}% 47
\BOOKMARK [2][-]{subsection.6.5.2}{6.5.2 Member name lookup}{section.6.5}% 48
\BOOKMARK [2][-]{subsection.6.5.3}{6.5.3 Unqualified name lookup}{section.6.5}% 49
\BOOKMARK [2][-]{subsection.6.5.4}{6.5.4 Argument-dependent name lookup}{section.6.5}% 50
\BOOKMARK [2][-]{subsection.6.5.5}{6.5.5 Qualified name lookup}{section.6.5}% 51
\BOOKMARK [3][-]{subsubsection.6.5.5.1}{6.5.5.1 General}{subsection.6.5.5}% 52
\BOOKMARK [3][-]{subsubsection.6.5.5.2}{6.5.5.2 Class members}{subsection.6.5.5}% 53
\BOOKMARK [3][-]{subsubsection.6.5.5.3}{6.5.5.3 Namespace members}{subsection.6.5.5}% 54
\BOOKMARK [2][-]{subsection.6.5.6}{6.5.6 Elaborated type specifiers}{section.6.5}% 55
\BOOKMARK [2][-]{subsection.6.5.7}{6.5.7 Using-directives and namespace aliases}{section.6.5}% 56
\BOOKMARK [1][-]{section.6.6}{6.6 Program and linkage}{chapter.6}% 57
\BOOKMARK [1][-]{section.6.7}{6.7 Memory and objects}{chapter.6}% 58
\BOOKMARK [2][-]{subsection.6.7.1}{6.7.1 Memory model}{section.6.7}% 59
\BOOKMARK [2][-]{subsection.6.7.2}{6.7.2 Object model}{section.6.7}% 60
\BOOKMARK [2][-]{subsection.6.7.3}{6.7.3 Lifetime}{section.6.7}% 61
\BOOKMARK [2][-]{subsection.6.7.4}{6.7.4 Indeterminate values}{section.6.7}% 62
\BOOKMARK [2][-]{subsection.6.7.5}{6.7.5 Storage duration}{section.6.7}% 63
\BOOKMARK [3][-]{subsubsection.6.7.5.1}{6.7.5.1 General}{subsection.6.7.5}% 64
\BOOKMARK [3][-]{subsubsection.6.7.5.2}{6.7.5.2 Static storage duration}{subsection.6.7.5}% 65
\BOOKMARK [3][-]{subsubsection.6.7.5.3}{6.7.5.3 Thread storage duration}{subsection.6.7.5}% 66
\BOOKMARK [3][-]{subsubsection.6.7.5.4}{6.7.5.4 Automatic storage duration}{subsection.6.7.5}% 67
\BOOKMARK [3][-]{subsubsection.6.7.5.5}{6.7.5.5 Dynamic storage duration}{subsection.6.7.5}% 68
\BOOKMARK [4][-]{paragraph.6.7.5.5.1}{6.7.5.5.1 General}{subsubsection.6.7.5.5}% 69
\BOOKMARK [4][-]{paragraph.6.7.5.5.2}{6.7.5.5.2 Allocation functions}{subsubsection.6.7.5.5}% 70
\BOOKMARK [4][-]{paragraph.6.7.5.5.3}{6.7.5.5.3 Deallocation functions}{subsubsection.6.7.5.5}% 71
\BOOKMARK [3][-]{subsubsection.6.7.5.6}{6.7.5.6 Duration of subobjects}{subsection.6.7.5}% 72
\BOOKMARK [2][-]{subsection.6.7.6}{6.7.6 Alignment}{section.6.7}% 73
\BOOKMARK [2][-]{subsection.6.7.7}{6.7.7 Temporary objects}{section.6.7}% 74
\BOOKMARK [1][-]{section.6.8}{6.8 Types}{chapter.6}% 75
\BOOKMARK [2][-]{subsection.6.8.1}{6.8.1 General}{section.6.8}% 76
\BOOKMARK [2][-]{subsection.6.8.2}{6.8.2 Fundamental types}{section.6.8}% 77
\BOOKMARK [2][-]{subsection.6.8.3}{6.8.3 Compound types}{section.6.8}% 78
\BOOKMARK [2][-]{subsection.6.8.4}{6.8.4 CV-qualifiers}{section.6.8}% 79
\BOOKMARK [2][-]{subsection.6.8.5}{6.8.5 Integer conversion rank}{section.6.8}% 80
\BOOKMARK [1][-]{section.6.9}{6.9 Program execution}{chapter.6}% 81
\BOOKMARK [2][-]{subsection.6.9.1}{6.9.1 Sequential execution}{section.6.9}% 82
\BOOKMARK [2][-]{subsection.6.9.2}{6.9.2 Multi-threaded executions and data races}{section.6.9}% 83
\BOOKMARK [3][-]{subsubsection.6.9.2.1}{6.9.2.1 General}{subsection.6.9.2}% 84
\BOOKMARK [3][-]{subsubsection.6.9.2.2}{6.9.2.2 Data races}{subsection.6.9.2}% 85
\BOOKMARK [3][-]{subsubsection.6.9.2.3}{6.9.2.3 Forward progress}{subsection.6.9.2}% 86
\BOOKMARK [2][-]{subsection.6.9.3}{6.9.3 Start and termination}{section.6.9}% 87
\BOOKMARK [3][-]{subsubsection.6.9.3.1}{6.9.3.1 main function}{subsection.6.9.3}% 88
\BOOKMARK [3][-]{subsubsection.6.9.3.2}{6.9.3.2 Static initialization}{subsection.6.9.3}% 89
\BOOKMARK [3][-]{subsubsection.6.9.3.3}{6.9.3.3 Dynamic initialization of non-block variables}{subsection.6.9.3}% 90
\BOOKMARK [3][-]{subsubsection.6.9.3.4}{6.9.3.4 Termination}{subsection.6.9.3}% 91
\BOOKMARK [0][-]{chapter.7}{7 Expressions}{}% 92
\BOOKMARK [1][-]{section.7.1}{7.1 Preamble}{chapter.7}% 93
\BOOKMARK [1][-]{section.7.2}{7.2 Properties of expressions}{chapter.7}% 94
\BOOKMARK [2][-]{subsection.7.2.1}{7.2.1 Value category}{section.7.2}% 95
\BOOKMARK [2][-]{subsection.7.2.2}{7.2.2 Type}{section.7.2}% 96
\BOOKMARK [2][-]{subsection.7.2.3}{7.2.3 Context dependence}{section.7.2}% 97
\BOOKMARK [1][-]{section.7.3}{7.3 Standard conversions}{chapter.7}% 98
\BOOKMARK [2][-]{subsection.7.3.1}{7.3.1 General}{section.7.3}% 99
\BOOKMARK [2][-]{subsection.7.3.2}{7.3.2 Lvalue-to-rvalue conversion}{section.7.3}% 100
\BOOKMARK [2][-]{subsection.7.3.3}{7.3.3 Array-to-pointer conversion}{section.7.3}% 101
\BOOKMARK [2][-]{subsection.7.3.4}{7.3.4 Function-to-pointer conversion}{section.7.3}% 102
\BOOKMARK [2][-]{subsection.7.3.5}{7.3.5 Temporary materialization conversion}{section.7.3}% 103
\BOOKMARK [2][-]{subsection.7.3.6}{7.3.6 Qualification conversions}{section.7.3}% 104
\BOOKMARK [2][-]{subsection.7.3.7}{7.3.7 Integral promotions}{section.7.3}% 105
\BOOKMARK [2][-]{subsection.7.3.8}{7.3.8 Floating-point promotion}{section.7.3}% 106
\BOOKMARK [2][-]{subsection.7.3.9}{7.3.9 Integral conversions}{section.7.3}% 107
\BOOKMARK [2][-]{subsection.7.3.10}{7.3.10 Floating-point conversions}{section.7.3}% 108
\BOOKMARK [2][-]{subsection.7.3.11}{7.3.11 Floating-integral conversions}{section.7.3}% 109
\BOOKMARK [2][-]{subsection.7.3.12}{7.3.12 Pointer conversions}{section.7.3}% 110
\BOOKMARK [2][-]{subsection.7.3.13}{7.3.13 Pointer-to-member conversions}{section.7.3}% 111
\BOOKMARK [2][-]{subsection.7.3.14}{7.3.14 Function pointer conversions}{section.7.3}% 112
\BOOKMARK [2][-]{subsection.7.3.15}{7.3.15 Boolean conversions}{section.7.3}% 113
\BOOKMARK [1][-]{section.7.4}{7.4 Usual arithmetic conversions}{chapter.7}% 114
\BOOKMARK [1][-]{section.7.5}{7.5 Primary expressions}{chapter.7}% 115
\BOOKMARK [2][-]{subsection.7.5.1}{7.5.1 Literals}{section.7.5}% 116
\BOOKMARK [2][-]{subsection.7.5.2}{7.5.2 This}{section.7.5}% 117
\BOOKMARK [2][-]{subsection.7.5.3}{7.5.3 Parentheses}{section.7.5}% 118
\BOOKMARK [2][-]{subsection.7.5.4}{7.5.4 Names}{section.7.5}% 119
\BOOKMARK [3][-]{subsubsection.7.5.4.1}{7.5.4.1 General}{subsection.7.5.4}% 120
\BOOKMARK [3][-]{subsubsection.7.5.4.2}{7.5.4.2 Unqualified names}{subsection.7.5.4}% 121
\BOOKMARK [3][-]{subsubsection.7.5.4.3}{7.5.4.3 Qualified names}{subsection.7.5.4}% 122
\BOOKMARK [3][-]{subsubsection.7.5.4.4}{7.5.4.4 Destruction}{subsection.7.5.4}% 123
\BOOKMARK [2][-]{subsection.7.5.5}{7.5.5 Lambda expressions}{section.7.5}% 124
\BOOKMARK [3][-]{subsubsection.7.5.5.1}{7.5.5.1 General}{subsection.7.5.5}% 125
\BOOKMARK [3][-]{subsubsection.7.5.5.2}{7.5.5.2 Closure types}{subsection.7.5.5}% 126
\BOOKMARK [3][-]{subsubsection.7.5.5.3}{7.5.5.3 Captures}{subsection.7.5.5}% 127
\BOOKMARK [2][-]{subsection.7.5.6}{7.5.6 Fold expressions}{section.7.5}% 128
\BOOKMARK [2][-]{subsection.7.5.7}{7.5.7 Requires expressions}{section.7.5}% 129
\BOOKMARK [3][-]{subsubsection.7.5.7.1}{7.5.7.1 General}{subsection.7.5.7}% 130
\BOOKMARK [3][-]{subsubsection.7.5.7.2}{7.5.7.2 Simple requirements}{subsection.7.5.7}% 131
\BOOKMARK [3][-]{subsubsection.7.5.7.3}{7.5.7.3 Type requirements}{subsection.7.5.7}% 132
\BOOKMARK [3][-]{subsubsection.7.5.7.4}{7.5.7.4 Compound requirements}{subsection.7.5.7}% 133
\BOOKMARK [3][-]{subsubsection.7.5.7.5}{7.5.7.5 Nested requirements}{subsection.7.5.7}% 134
\BOOKMARK [1][-]{section.7.6}{7.6 Compound expressions}{chapter.7}% 135
\BOOKMARK [2][-]{subsection.7.6.1}{7.6.1 Postfix expressions}{section.7.6}% 136
\BOOKMARK [3][-]{subsubsection.7.6.1.1}{7.6.1.1 General}{subsection.7.6.1}% 137
\BOOKMARK [3][-]{subsubsection.7.6.1.2}{7.6.1.2 Subscripting}{subsection.7.6.1}% 138
\BOOKMARK [3][-]{subsubsection.7.6.1.3}{7.6.1.3 Function call}{subsection.7.6.1}% 139
\BOOKMARK [3][-]{subsubsection.7.6.1.4}{7.6.1.4 Explicit type conversion \(functional notation\)}{subsection.7.6.1}% 140
\BOOKMARK [3][-]{subsubsection.7.6.1.5}{7.6.1.5 Class member access}{subsection.7.6.1}% 141
\BOOKMARK [3][-]{subsubsection.7.6.1.6}{7.6.1.6 Increment and decrement}{subsection.7.6.1}% 142
\BOOKMARK [3][-]{subsubsection.7.6.1.7}{7.6.1.7 Dynamic cast}{subsection.7.6.1}% 143
\BOOKMARK [3][-]{subsubsection.7.6.1.8}{7.6.1.8 Type identification}{subsection.7.6.1}% 144
\BOOKMARK [3][-]{subsubsection.7.6.1.9}{7.6.1.9 Static cast}{subsection.7.6.1}% 145
\BOOKMARK [3][-]{subsubsection.7.6.1.10}{7.6.1.10 Reinterpret cast}{subsection.7.6.1}% 146
\BOOKMARK [3][-]{subsubsection.7.6.1.11}{7.6.1.11 Const cast}{subsection.7.6.1}% 147
\BOOKMARK [2][-]{subsection.7.6.2}{7.6.2 Unary expressions}{section.7.6}% 148
\BOOKMARK [3][-]{subsubsection.7.6.2.1}{7.6.2.1 General}{subsection.7.6.2}% 149
\BOOKMARK [3][-]{subsubsection.7.6.2.2}{7.6.2.2 Unary operators}{subsection.7.6.2}% 150
\BOOKMARK [3][-]{subsubsection.7.6.2.3}{7.6.2.3 Increment and decrement}{subsection.7.6.2}% 151
\BOOKMARK [3][-]{subsubsection.7.6.2.4}{7.6.2.4 Await}{subsection.7.6.2}% 152
\BOOKMARK [3][-]{subsubsection.7.6.2.5}{7.6.2.5 Sizeof}{subsection.7.6.2}% 153
\BOOKMARK [3][-]{subsubsection.7.6.2.6}{7.6.2.6 Alignof}{subsection.7.6.2}% 154
\BOOKMARK [3][-]{subsubsection.7.6.2.7}{7.6.2.7 noexcept operator}{subsection.7.6.2}% 155
\BOOKMARK [3][-]{subsubsection.7.6.2.8}{7.6.2.8 New}{subsection.7.6.2}% 156
\BOOKMARK [3][-]{subsubsection.7.6.2.9}{7.6.2.9 Delete}{subsection.7.6.2}% 157
\BOOKMARK [2][-]{subsection.7.6.3}{7.6.3 Explicit type conversion \(cast notation\)}{section.7.6}% 158
\BOOKMARK [2][-]{subsection.7.6.4}{7.6.4 Pointer-to-member operators}{section.7.6}% 159
\BOOKMARK [2][-]{subsection.7.6.5}{7.6.5 Multiplicative operators}{section.7.6}% 160
\BOOKMARK [2][-]{subsection.7.6.6}{7.6.6 Additive operators}{section.7.6}% 161
\BOOKMARK [2][-]{subsection.7.6.7}{7.6.7 Shift operators}{section.7.6}% 162
\BOOKMARK [2][-]{subsection.7.6.8}{7.6.8 Three-way comparison operator}{section.7.6}% 163
\BOOKMARK [2][-]{subsection.7.6.9}{7.6.9 Relational operators}{section.7.6}% 164
\BOOKMARK [2][-]{subsection.7.6.10}{7.6.10 Equality operators}{section.7.6}% 165
\BOOKMARK [2][-]{subsection.7.6.11}{7.6.11 Bitwise AND operator}{section.7.6}% 166
\BOOKMARK [2][-]{subsection.7.6.12}{7.6.12 Bitwise exclusive OR operator}{section.7.6}% 167
\BOOKMARK [2][-]{subsection.7.6.13}{7.6.13 Bitwise inclusive OR operator}{section.7.6}% 168
\BOOKMARK [2][-]{subsection.7.6.14}{7.6.14 Logical AND operator}{section.7.6}% 169
\BOOKMARK [2][-]{subsection.7.6.15}{7.6.15 Logical OR operator}{section.7.6}% 170
\BOOKMARK [2][-]{subsection.7.6.16}{7.6.16 Conditional operator}{section.7.6}% 171
\BOOKMARK [2][-]{subsection.7.6.17}{7.6.17 Yielding a value}{section.7.6}% 172
\BOOKMARK [2][-]{subsection.7.6.18}{7.6.18 Throwing an exception}{section.7.6}% 173
\BOOKMARK [2][-]{subsection.7.6.19}{7.6.19 Assignment and compound assignment operators}{section.7.6}% 174
\BOOKMARK [2][-]{subsection.7.6.20}{7.6.20 Comma operator}{section.7.6}% 175
\BOOKMARK [1][-]{section.7.7}{7.7 Constant expressions}{chapter.7}% 176
\BOOKMARK [0][-]{chapter.8}{8 Statements}{}% 177
\BOOKMARK [1][-]{section.8.1}{8.1 Preamble}{chapter.8}% 178
\BOOKMARK [1][-]{section.8.2}{8.2 Labeled statement}{chapter.8}% 179
\BOOKMARK [1][-]{section.8.3}{8.3 Expression statement}{chapter.8}% 180
\BOOKMARK [1][-]{section.8.4}{8.4 Compound statement or block}{chapter.8}% 181
\BOOKMARK [1][-]{section.8.5}{8.5 Selection statements}{chapter.8}% 182
\BOOKMARK [2][-]{subsection.8.5.1}{8.5.1 General}{section.8.5}% 183
\BOOKMARK [2][-]{subsection.8.5.2}{8.5.2 The if statement}{section.8.5}% 184
\BOOKMARK [2][-]{subsection.8.5.3}{8.5.3 The switch statement}{section.8.5}% 185
\BOOKMARK [1][-]{section.8.6}{8.6 Iteration statements}{chapter.8}% 186
\BOOKMARK [2][-]{subsection.8.6.1}{8.6.1 General}{section.8.6}% 187
\BOOKMARK [2][-]{subsection.8.6.2}{8.6.2 The while statement}{section.8.6}% 188
\BOOKMARK [2][-]{subsection.8.6.3}{8.6.3 The do statement}{section.8.6}% 189
\BOOKMARK [2][-]{subsection.8.6.4}{8.6.4 The for statement}{section.8.6}% 190
\BOOKMARK [2][-]{subsection.8.6.5}{8.6.5 The range-based for statement}{section.8.6}% 191
\BOOKMARK [1][-]{section.8.7}{8.7 Jump statements}{chapter.8}% 192
\BOOKMARK [2][-]{subsection.8.7.1}{8.7.1 General}{section.8.7}% 193
\BOOKMARK [2][-]{subsection.8.7.2}{8.7.2 The break statement}{section.8.7}% 194
\BOOKMARK [2][-]{subsection.8.7.3}{8.7.3 The continue statement}{section.8.7}% 195
\BOOKMARK [2][-]{subsection.8.7.4}{8.7.4 The return statement}{section.8.7}% 196
\BOOKMARK [2][-]{subsection.8.7.5}{8.7.5 The co\137return statement}{section.8.7}% 197
\BOOKMARK [2][-]{subsection.8.7.6}{8.7.6 The goto statement}{section.8.7}% 198
\BOOKMARK [1][-]{section.8.8}{8.8 Declaration statement}{chapter.8}% 199
\BOOKMARK [1][-]{section.8.9}{8.9 Ambiguity resolution}{chapter.8}% 200
\BOOKMARK [0][-]{chapter.9}{9 Declarations}{}% 201
\BOOKMARK [1][-]{section.9.1}{9.1 Preamble}{chapter.9}% 202
\BOOKMARK [1][-]{section.9.2}{9.2 Specifiers}{chapter.9}% 203
\BOOKMARK [2][-]{subsection.9.2.1}{9.2.1 General}{section.9.2}% 204
\BOOKMARK [2][-]{subsection.9.2.2}{9.2.2 Storage class specifiers}{section.9.2}% 205
\BOOKMARK [2][-]{subsection.9.2.3}{9.2.3 Function specifiers}{section.9.2}% 206
\BOOKMARK [2][-]{subsection.9.2.4}{9.2.4 The typedef specifier}{section.9.2}% 207
\BOOKMARK [2][-]{subsection.9.2.5}{9.2.5 The friend specifier}{section.9.2}% 208
\BOOKMARK [2][-]{subsection.9.2.6}{9.2.6 The constexpr and consteval specifiers}{section.9.2}% 209
\BOOKMARK [2][-]{subsection.9.2.7}{9.2.7 The constinit specifier}{section.9.2}% 210
\BOOKMARK [2][-]{subsection.9.2.8}{9.2.8 The inline specifier}{section.9.2}% 211
\BOOKMARK [2][-]{subsection.9.2.9}{9.2.9 Type specifiers}{section.9.2}% 212
\BOOKMARK [3][-]{subsubsection.9.2.9.1}{9.2.9.1 General}{subsection.9.2.9}% 213
\BOOKMARK [3][-]{subsubsection.9.2.9.2}{9.2.9.2 The cv-qualifiers}{subsection.9.2.9}% 214
\BOOKMARK [3][-]{subsubsection.9.2.9.3}{9.2.9.3 Simple type specifiers}{subsection.9.2.9}% 215
\BOOKMARK [3][-]{subsubsection.9.2.9.4}{9.2.9.4 Elaborated type specifiers}{subsection.9.2.9}% 216
\BOOKMARK [3][-]{subsubsection.9.2.9.5}{9.2.9.5 Decltype specifiers}{subsection.9.2.9}% 217
\BOOKMARK [3][-]{subsubsection.9.2.9.6}{9.2.9.6 Placeholder type specifiers}{subsection.9.2.9}% 218
\BOOKMARK [4][-]{paragraph.9.2.9.6.1}{9.2.9.6.1 General}{subsubsection.9.2.9.6}% 219
\BOOKMARK [4][-]{paragraph.9.2.9.6.2}{9.2.9.6.2 Placeholder type deduction}{subsubsection.9.2.9.6}% 220
\BOOKMARK [3][-]{subsubsection.9.2.9.7}{9.2.9.7 Deduced class template specialization types}{subsection.9.2.9}% 221
\BOOKMARK [1][-]{section.9.3}{9.3 Declarators}{chapter.9}% 222
\BOOKMARK [2][-]{subsection.9.3.1}{9.3.1 General}{section.9.3}% 223
\BOOKMARK [2][-]{subsection.9.3.2}{9.3.2 Type names}{section.9.3}% 224
\BOOKMARK [2][-]{subsection.9.3.3}{9.3.3 Ambiguity resolution}{section.9.3}% 225
\BOOKMARK [2][-]{subsection.9.3.4}{9.3.4 Meaning of declarators}{section.9.3}% 226
\BOOKMARK [3][-]{subsubsection.9.3.4.1}{9.3.4.1 General}{subsection.9.3.4}% 227
\BOOKMARK [3][-]{subsubsection.9.3.4.2}{9.3.4.2 Pointers}{subsection.9.3.4}% 228
\BOOKMARK [3][-]{subsubsection.9.3.4.3}{9.3.4.3 References}{subsection.9.3.4}% 229
\BOOKMARK [3][-]{subsubsection.9.3.4.4}{9.3.4.4 Pointers to members}{subsection.9.3.4}% 230
\BOOKMARK [3][-]{subsubsection.9.3.4.5}{9.3.4.5 Arrays}{subsection.9.3.4}% 231
\BOOKMARK [3][-]{subsubsection.9.3.4.6}{9.3.4.6 Functions}{subsection.9.3.4}% 232
\BOOKMARK [3][-]{subsubsection.9.3.4.7}{9.3.4.7 Default arguments}{subsection.9.3.4}% 233
\BOOKMARK [1][-]{section.9.4}{9.4 Initializers}{chapter.9}% 234
\BOOKMARK [2][-]{subsection.9.4.1}{9.4.1 General}{section.9.4}% 235
\BOOKMARK [2][-]{subsection.9.4.2}{9.4.2 Aggregates}{section.9.4}% 236
\BOOKMARK [2][-]{subsection.9.4.3}{9.4.3 Character arrays}{section.9.4}% 237
\BOOKMARK [2][-]{subsection.9.4.4}{9.4.4 References}{section.9.4}% 238
\BOOKMARK [2][-]{subsection.9.4.5}{9.4.5 List-initialization}{section.9.4}% 239
\BOOKMARK [1][-]{section.9.5}{9.5 Function definitions}{chapter.9}% 240
\BOOKMARK [2][-]{subsection.9.5.1}{9.5.1 In general}{section.9.5}% 241
\BOOKMARK [2][-]{subsection.9.5.2}{9.5.2 Explicitly-defaulted functions}{section.9.5}% 242
\BOOKMARK [2][-]{subsection.9.5.3}{9.5.3 Deleted definitions}{section.9.5}% 243
\BOOKMARK [2][-]{subsection.9.5.4}{9.5.4 Coroutine definitions}{section.9.5}% 244
\BOOKMARK [1][-]{section.9.6}{9.6 Structured binding declarations}{chapter.9}% 245
\BOOKMARK [1][-]{section.9.7}{9.7 Enumerations}{chapter.9}% 246
\BOOKMARK [2][-]{subsection.9.7.1}{9.7.1 Enumeration declarations}{section.9.7}% 247
\BOOKMARK [2][-]{subsection.9.7.2}{9.7.2 The using enum declaration}{section.9.7}% 248
\BOOKMARK [1][-]{section.9.8}{9.8 Namespaces}{chapter.9}% 249
\BOOKMARK [2][-]{subsection.9.8.1}{9.8.1 General}{section.9.8}% 250
\BOOKMARK [2][-]{subsection.9.8.2}{9.8.2 Namespace definition}{section.9.8}% 251
\BOOKMARK [3][-]{subsubsection.9.8.2.1}{9.8.2.1 General}{subsection.9.8.2}% 252
\BOOKMARK [3][-]{subsubsection.9.8.2.2}{9.8.2.2 Unnamed namespaces}{subsection.9.8.2}% 253
\BOOKMARK [2][-]{subsection.9.8.3}{9.8.3 Namespace alias}{section.9.8}% 254
\BOOKMARK [2][-]{subsection.9.8.4}{9.8.4 Using namespace directive}{section.9.8}% 255
\BOOKMARK [1][-]{section.9.9}{9.9 The using declaration}{chapter.9}% 256
\BOOKMARK [1][-]{section.9.10}{9.10 The asm declaration}{chapter.9}% 257
\BOOKMARK [1][-]{section.9.11}{9.11 Linkage specifications}{chapter.9}% 258
\BOOKMARK [1][-]{section.9.12}{9.12 Attributes}{chapter.9}% 259
\BOOKMARK [2][-]{subsection.9.12.1}{9.12.1 Attribute syntax and semantics}{section.9.12}% 260
\BOOKMARK [2][-]{subsection.9.12.2}{9.12.2 Alignment specifier}{section.9.12}% 261
\BOOKMARK [2][-]{subsection.9.12.3}{9.12.3 Carries dependency attribute}{section.9.12}% 262
\BOOKMARK [2][-]{subsection.9.12.4}{9.12.4 Deprecated attribute}{section.9.12}% 263
\BOOKMARK [2][-]{subsection.9.12.5}{9.12.5 Fallthrough attribute}{section.9.12}% 264
\BOOKMARK [2][-]{subsection.9.12.6}{9.12.6 Likelihood attributes}{section.9.12}% 265
\BOOKMARK [2][-]{subsection.9.12.7}{9.12.7 Maybe unused attribute}{section.9.12}% 266
\BOOKMARK [2][-]{subsection.9.12.8}{9.12.8 Nodiscard attribute}{section.9.12}% 267
\BOOKMARK [2][-]{subsection.9.12.9}{9.12.9 Noreturn attribute}{section.9.12}% 268
\BOOKMARK [2][-]{subsection.9.12.10}{9.12.10 No unique address attribute}{section.9.12}% 269
\BOOKMARK [0][-]{chapter.10}{10 Modules}{}% 270
\BOOKMARK [1][-]{section.10.1}{10.1 Module units and purviews}{chapter.10}% 271
\BOOKMARK [1][-]{section.10.2}{10.2 Export declaration}{chapter.10}% 272
\BOOKMARK [1][-]{section.10.3}{10.3 Import declaration}{chapter.10}% 273
\BOOKMARK [1][-]{section.10.4}{10.4 Global module fragment}{chapter.10}% 274
\BOOKMARK [1][-]{section.10.5}{10.5 Private module fragment}{chapter.10}% 275
\BOOKMARK [1][-]{section.10.6}{10.6 Instantiation context}{chapter.10}% 276
\BOOKMARK [1][-]{section.10.7}{10.7 Reachability}{chapter.10}% 277
\BOOKMARK [0][-]{chapter.11}{11 Classes}{}% 278
\BOOKMARK [1][-]{section.11.1}{11.1 Preamble}{chapter.11}% 279
\BOOKMARK [1][-]{section.11.2}{11.2 Properties of classes}{chapter.11}% 280
\BOOKMARK [1][-]{section.11.3}{11.3 Class names}{chapter.11}% 281
\BOOKMARK [1][-]{section.11.4}{11.4 Class members}{chapter.11}% 282
\BOOKMARK [2][-]{subsection.11.4.1}{11.4.1 General}{section.11.4}% 283
\BOOKMARK [2][-]{subsection.11.4.2}{11.4.2 Member functions}{section.11.4}% 284
\BOOKMARK [2][-]{subsection.11.4.3}{11.4.3 Non-static member functions}{section.11.4}% 285
\BOOKMARK [2][-]{subsection.11.4.4}{11.4.4 Special member functions}{section.11.4}% 286
\BOOKMARK [2][-]{subsection.11.4.5}{11.4.5 Constructors}{section.11.4}% 287
\BOOKMARK [3][-]{subsubsection.11.4.5.1}{11.4.5.1 General}{subsection.11.4.5}% 288
\BOOKMARK [3][-]{subsubsection.11.4.5.2}{11.4.5.2 Default constructors}{subsection.11.4.5}% 289
\BOOKMARK [3][-]{subsubsection.11.4.5.3}{11.4.5.3 Copy/move constructors}{subsection.11.4.5}% 290
\BOOKMARK [2][-]{subsection.11.4.6}{11.4.6 Copy/move assignment operator}{section.11.4}% 291
\BOOKMARK [2][-]{subsection.11.4.7}{11.4.7 Destructors}{section.11.4}% 292
\BOOKMARK [2][-]{subsection.11.4.8}{11.4.8 Conversions}{section.11.4}% 293
\BOOKMARK [3][-]{subsubsection.11.4.8.1}{11.4.8.1 General}{subsection.11.4.8}% 294
\BOOKMARK [3][-]{subsubsection.11.4.8.2}{11.4.8.2 Conversion by constructor}{subsection.11.4.8}% 295
\BOOKMARK [3][-]{subsubsection.11.4.8.3}{11.4.8.3 Conversion functions}{subsection.11.4.8}% 296
\BOOKMARK [2][-]{subsection.11.4.9}{11.4.9 Static members}{section.11.4}% 297
\BOOKMARK [3][-]{subsubsection.11.4.9.1}{11.4.9.1 General}{subsection.11.4.9}% 298
\BOOKMARK [3][-]{subsubsection.11.4.9.2}{11.4.9.2 Static member functions}{subsection.11.4.9}% 299
\BOOKMARK [3][-]{subsubsection.11.4.9.3}{11.4.9.3 Static data members}{subsection.11.4.9}% 300
\BOOKMARK [2][-]{subsection.11.4.10}{11.4.10 Bit-fields}{section.11.4}% 301
\BOOKMARK [2][-]{subsection.11.4.11}{11.4.11 Allocation and deallocation functions}{section.11.4}% 302
\BOOKMARK [2][-]{subsection.11.4.12}{11.4.12 Nested class declarations}{section.11.4}% 303
\BOOKMARK [1][-]{section.11.5}{11.5 Unions}{chapter.11}% 304
\BOOKMARK [2][-]{subsection.11.5.1}{11.5.1 General}{section.11.5}% 305
\BOOKMARK [2][-]{subsection.11.5.2}{11.5.2 Anonymous unions}{section.11.5}% 306
\BOOKMARK [1][-]{section.11.6}{11.6 Local class declarations}{chapter.11}% 307
\BOOKMARK [1][-]{section.11.7}{11.7 Derived classes}{chapter.11}% 308
\BOOKMARK [2][-]{subsection.11.7.1}{11.7.1 General}{section.11.7}% 309
\BOOKMARK [2][-]{subsection.11.7.2}{11.7.2 Multiple base classes}{section.11.7}% 310
\BOOKMARK [2][-]{subsection.11.7.3}{11.7.3 Virtual functions}{section.11.7}% 311
\BOOKMARK [2][-]{subsection.11.7.4}{11.7.4 Abstract classes}{section.11.7}% 312
\BOOKMARK [1][-]{section.11.8}{11.8 Member access control}{chapter.11}% 313
\BOOKMARK [2][-]{subsection.11.8.1}{11.8.1 General}{section.11.8}% 314
\BOOKMARK [2][-]{subsection.11.8.2}{11.8.2 Access specifiers}{section.11.8}% 315
\BOOKMARK [2][-]{subsection.11.8.3}{11.8.3 Accessibility of base classes and base class members}{section.11.8}% 316
\BOOKMARK [2][-]{subsection.11.8.4}{11.8.4 Friends}{section.11.8}% 317
\BOOKMARK [2][-]{subsection.11.8.5}{11.8.5 Protected member access}{section.11.8}% 318
\BOOKMARK [2][-]{subsection.11.8.6}{11.8.6 Access to virtual functions}{section.11.8}% 319
\BOOKMARK [2][-]{subsection.11.8.7}{11.8.7 Multiple access}{section.11.8}% 320
\BOOKMARK [2][-]{subsection.11.8.8}{11.8.8 Nested classes}{section.11.8}% 321
\BOOKMARK [1][-]{section.11.9}{11.9 Initialization}{chapter.11}% 322
\BOOKMARK [2][-]{subsection.11.9.1}{11.9.1 General}{section.11.9}% 323
\BOOKMARK [2][-]{subsection.11.9.2}{11.9.2 Explicit initialization}{section.11.9}% 324
\BOOKMARK [2][-]{subsection.11.9.3}{11.9.3 Initializing bases and members}{section.11.9}% 325
\BOOKMARK [2][-]{subsection.11.9.4}{11.9.4 Initialization by inherited constructor}{section.11.9}% 326
\BOOKMARK [2][-]{subsection.11.9.5}{11.9.5 Construction and destruction}{section.11.9}% 327
\BOOKMARK [2][-]{subsection.11.9.6}{11.9.6 Copy/move elision}{section.11.9}% 328
\BOOKMARK [1][-]{section.11.10}{11.10 Comparisons}{chapter.11}% 329
\BOOKMARK [2][-]{subsection.11.10.1}{11.10.1 Defaulted comparison operator functions}{section.11.10}% 330
\BOOKMARK [2][-]{subsection.11.10.2}{11.10.2 Equality operator}{section.11.10}% 331
\BOOKMARK [2][-]{subsection.11.10.3}{11.10.3 Three-way comparison}{section.11.10}% 332
\BOOKMARK [2][-]{subsection.11.10.4}{11.10.4 Secondary comparison operators}{section.11.10}% 333
\BOOKMARK [0][-]{chapter.12}{12 Overloading}{}% 334
\BOOKMARK [1][-]{section.12.1}{12.1 Preamble}{chapter.12}% 335
\BOOKMARK [1][-]{section.12.2}{12.2 Overload resolution}{chapter.12}% 336
\BOOKMARK [2][-]{subsection.12.2.1}{12.2.1 General}{section.12.2}% 337
\BOOKMARK [2][-]{subsection.12.2.2}{12.2.2 Candidate functions and argument lists}{section.12.2}% 338
\BOOKMARK [3][-]{subsubsection.12.2.2.1}{12.2.2.1 General}{subsection.12.2.2}% 339
\BOOKMARK [3][-]{subsubsection.12.2.2.2}{12.2.2.2 Function call syntax}{subsection.12.2.2}% 340
\BOOKMARK [4][-]{paragraph.12.2.2.2.1}{12.2.2.2.1 General}{subsubsection.12.2.2.2}% 341
\BOOKMARK [4][-]{paragraph.12.2.2.2.2}{12.2.2.2.2 Call to named function}{subsubsection.12.2.2.2}% 342
\BOOKMARK [4][-]{paragraph.12.2.2.2.3}{12.2.2.2.3 Call to object of class type}{subsubsection.12.2.2.2}% 343
\BOOKMARK [3][-]{subsubsection.12.2.2.3}{12.2.2.3 Operators in expressions}{subsection.12.2.2}% 344
\BOOKMARK [3][-]{subsubsection.12.2.2.4}{12.2.2.4 Initialization by constructor}{subsection.12.2.2}% 345
\BOOKMARK [3][-]{subsubsection.12.2.2.5}{12.2.2.5 Copy-initialization of class by user-defined conversion}{subsection.12.2.2}% 346
\BOOKMARK [3][-]{subsubsection.12.2.2.6}{12.2.2.6 Initialization by conversion function}{subsection.12.2.2}% 347
\BOOKMARK [3][-]{subsubsection.12.2.2.7}{12.2.2.7 Initialization by conversion function for direct reference binding}{subsection.12.2.2}% 348
\BOOKMARK [3][-]{subsubsection.12.2.2.8}{12.2.2.8 Initialization by list-initialization}{subsection.12.2.2}% 349
\BOOKMARK [3][-]{subsubsection.12.2.2.9}{12.2.2.9 Class template argument deduction}{subsection.12.2.2}% 350
\BOOKMARK [2][-]{subsection.12.2.3}{12.2.3 Viable functions}{section.12.2}% 351
\BOOKMARK [2][-]{subsection.12.2.4}{12.2.4 Best viable function}{section.12.2}% 352
\BOOKMARK [3][-]{subsubsection.12.2.4.1}{12.2.4.1 General}{subsection.12.2.4}% 353
\BOOKMARK [3][-]{subsubsection.12.2.4.2}{12.2.4.2 Implicit conversion sequences}{subsection.12.2.4}% 354
\BOOKMARK [4][-]{paragraph.12.2.4.2.1}{12.2.4.2.1 General}{subsubsection.12.2.4.2}% 355
\BOOKMARK [4][-]{paragraph.12.2.4.2.2}{12.2.4.2.2 Standard conversion sequences}{subsubsection.12.2.4.2}% 356
\BOOKMARK [4][-]{paragraph.12.2.4.2.3}{12.2.4.2.3 User-defined conversion sequences}{subsubsection.12.2.4.2}% 357
\BOOKMARK [4][-]{paragraph.12.2.4.2.4}{12.2.4.2.4 Ellipsis conversion sequences}{subsubsection.12.2.4.2}% 358
\BOOKMARK [4][-]{paragraph.12.2.4.2.5}{12.2.4.2.5 Reference binding}{subsubsection.12.2.4.2}% 359
\BOOKMARK [4][-]{paragraph.12.2.4.2.6}{12.2.4.2.6 List-initialization sequence}{subsubsection.12.2.4.2}% 360
\BOOKMARK [3][-]{subsubsection.12.2.4.3}{12.2.4.3 Ranking implicit conversion sequences}{subsection.12.2.4}% 361
\BOOKMARK [1][-]{section.12.3}{12.3 Address of an overload set}{chapter.12}% 362
\BOOKMARK [1][-]{section.12.4}{12.4 Overloaded operators}{chapter.12}% 363
\BOOKMARK [2][-]{subsection.12.4.1}{12.4.1 General}{section.12.4}% 364
\BOOKMARK [2][-]{subsection.12.4.2}{12.4.2 Unary operators}{section.12.4}% 365
\BOOKMARK [2][-]{subsection.12.4.3}{12.4.3 Binary operators}{section.12.4}% 366
\BOOKMARK [3][-]{subsubsection.12.4.3.1}{12.4.3.1 General}{subsection.12.4.3}% 367
\BOOKMARK [3][-]{subsubsection.12.4.3.2}{12.4.3.2 Simple assignment}{subsection.12.4.3}% 368
\BOOKMARK [2][-]{subsection.12.4.4}{12.4.4 Function call}{section.12.4}% 369
\BOOKMARK [2][-]{subsection.12.4.5}{12.4.5 Subscripting}{section.12.4}% 370
\BOOKMARK [2][-]{subsection.12.4.6}{12.4.6 Class member access}{section.12.4}% 371
\BOOKMARK [2][-]{subsection.12.4.7}{12.4.7 Increment and decrement}{section.12.4}% 372
\BOOKMARK [1][-]{section.12.5}{12.5 Built-in operators}{chapter.12}% 373
\BOOKMARK [1][-]{section.12.6}{12.6 User-defined literals}{chapter.12}% 374
\BOOKMARK [0][-]{chapter.13}{13 Templates}{}% 375
\BOOKMARK [1][-]{section.13.1}{13.1 Preamble}{chapter.13}% 376
\BOOKMARK [1][-]{section.13.2}{13.2 Template parameters}{chapter.13}% 377
\BOOKMARK [1][-]{section.13.3}{13.3 Names of template specializations}{chapter.13}% 378
\BOOKMARK [1][-]{section.13.4}{13.4 Template arguments}{chapter.13}% 379
\BOOKMARK [2][-]{subsection.13.4.1}{13.4.1 General}{section.13.4}% 380
\BOOKMARK [2][-]{subsection.13.4.2}{13.4.2 Template type arguments}{section.13.4}% 381
\BOOKMARK [2][-]{subsection.13.4.3}{13.4.3 Template non-type arguments}{section.13.4}% 382
\BOOKMARK [2][-]{subsection.13.4.4}{13.4.4 Template template arguments}{section.13.4}% 383
\BOOKMARK [1][-]{section.13.5}{13.5 Template constraints}{chapter.13}% 384
\BOOKMARK [2][-]{subsection.13.5.1}{13.5.1 General}{section.13.5}% 385
\BOOKMARK [2][-]{subsection.13.5.2}{13.5.2 Constraints}{section.13.5}% 386
\BOOKMARK [3][-]{subsubsection.13.5.2.1}{13.5.2.1 General}{subsection.13.5.2}% 387
\BOOKMARK [3][-]{subsubsection.13.5.2.2}{13.5.2.2 Logical operations}{subsection.13.5.2}% 388
\BOOKMARK [3][-]{subsubsection.13.5.2.3}{13.5.2.3 Atomic constraints}{subsection.13.5.2}% 389
\BOOKMARK [2][-]{subsection.13.5.3}{13.5.3 Constrained declarations}{section.13.5}% 390
\BOOKMARK [2][-]{subsection.13.5.4}{13.5.4 Constraint normalization}{section.13.5}% 391
\BOOKMARK [2][-]{subsection.13.5.5}{13.5.5 Partial ordering by constraints}{section.13.5}% 392
\BOOKMARK [1][-]{section.13.6}{13.6 Type equivalence}{chapter.13}% 393
\BOOKMARK [1][-]{section.13.7}{13.7 Template declarations}{chapter.13}% 394
\BOOKMARK [2][-]{subsection.13.7.1}{13.7.1 General}{section.13.7}% 395
\BOOKMARK [2][-]{subsection.13.7.2}{13.7.2 Class templates}{section.13.7}% 396
\BOOKMARK [3][-]{subsubsection.13.7.2.1}{13.7.2.1 General}{subsection.13.7.2}% 397
\BOOKMARK [3][-]{subsubsection.13.7.2.2}{13.7.2.2 Member functions of class templates}{subsection.13.7.2}% 398
\BOOKMARK [3][-]{subsubsection.13.7.2.3}{13.7.2.3 Deduction guides}{subsection.13.7.2}% 399
\BOOKMARK [3][-]{subsubsection.13.7.2.4}{13.7.2.4 Member classes of class templates}{subsection.13.7.2}% 400
\BOOKMARK [3][-]{subsubsection.13.7.2.5}{13.7.2.5 Static data members of class templates}{subsection.13.7.2}% 401
\BOOKMARK [3][-]{subsubsection.13.7.2.6}{13.7.2.6 Enumeration members of class templates}{subsection.13.7.2}% 402
\BOOKMARK [2][-]{subsection.13.7.3}{13.7.3 Member templates}{section.13.7}% 403
\BOOKMARK [2][-]{subsection.13.7.4}{13.7.4 Variadic templates}{section.13.7}% 404
\BOOKMARK [2][-]{subsection.13.7.5}{13.7.5 Friends}{section.13.7}% 405
\BOOKMARK [2][-]{subsection.13.7.6}{13.7.6 Partial specialization}{section.13.7}% 406
\BOOKMARK [3][-]{subsubsection.13.7.6.1}{13.7.6.1 General}{subsection.13.7.6}% 407
\BOOKMARK [3][-]{subsubsection.13.7.6.2}{13.7.6.2 Matching of partial specializations}{subsection.13.7.6}% 408
\BOOKMARK [3][-]{subsubsection.13.7.6.3}{13.7.6.3 Partial ordering of partial specializations}{subsection.13.7.6}% 409
\BOOKMARK [3][-]{subsubsection.13.7.6.4}{13.7.6.4 Members of class template partial specializations}{subsection.13.7.6}% 410
\BOOKMARK [2][-]{subsection.13.7.7}{13.7.7 Function templates}{section.13.7}% 411
\BOOKMARK [3][-]{subsubsection.13.7.7.1}{13.7.7.1 General}{subsection.13.7.7}% 412
\BOOKMARK [3][-]{subsubsection.13.7.7.2}{13.7.7.2 Function template overloading}{subsection.13.7.7}% 413
\BOOKMARK [3][-]{subsubsection.13.7.7.3}{13.7.7.3 Partial ordering of function templates}{subsection.13.7.7}% 414
\BOOKMARK [2][-]{subsection.13.7.8}{13.7.8 Alias templates}{section.13.7}% 415
\BOOKMARK [2][-]{subsection.13.7.9}{13.7.9 Concept definitions}{section.13.7}% 416
\BOOKMARK [1][-]{section.13.8}{13.8 Name resolution}{chapter.13}% 417
\BOOKMARK [2][-]{subsection.13.8.1}{13.8.1 General}{section.13.8}% 418
\BOOKMARK [2][-]{subsection.13.8.2}{13.8.2 Locally declared names}{section.13.8}% 419
\BOOKMARK [2][-]{subsection.13.8.3}{13.8.3 Dependent names}{section.13.8}% 420
\BOOKMARK [3][-]{subsubsection.13.8.3.1}{13.8.3.1 General}{subsection.13.8.3}% 421
\BOOKMARK [3][-]{subsubsection.13.8.3.2}{13.8.3.2 Dependent types}{subsection.13.8.3}% 422
\BOOKMARK [3][-]{subsubsection.13.8.3.3}{13.8.3.3 Type-dependent expressions}{subsection.13.8.3}% 423
\BOOKMARK [3][-]{subsubsection.13.8.3.4}{13.8.3.4 Value-dependent expressions}{subsection.13.8.3}% 424
\BOOKMARK [3][-]{subsubsection.13.8.3.5}{13.8.3.5 Dependent template arguments}{subsection.13.8.3}% 425
\BOOKMARK [2][-]{subsection.13.8.4}{13.8.4 Dependent name resolution}{section.13.8}% 426
\BOOKMARK [3][-]{subsubsection.13.8.4.1}{13.8.4.1 Point of instantiation}{subsection.13.8.4}% 427
\BOOKMARK [3][-]{subsubsection.13.8.4.2}{13.8.4.2 Candidate functions}{subsection.13.8.4}% 428
\BOOKMARK [1][-]{section.13.9}{13.9 Template instantiation and specialization}{chapter.13}% 429
\BOOKMARK [2][-]{subsection.13.9.1}{13.9.1 General}{section.13.9}% 430
\BOOKMARK [2][-]{subsection.13.9.2}{13.9.2 Implicit instantiation}{section.13.9}% 431
\BOOKMARK [2][-]{subsection.13.9.3}{13.9.3 Explicit instantiation}{section.13.9}% 432
\BOOKMARK [2][-]{subsection.13.9.4}{13.9.4 Explicit specialization}{section.13.9}% 433
\BOOKMARK [1][-]{section.13.10}{13.10 Function template specializations}{chapter.13}% 434
\BOOKMARK [2][-]{subsection.13.10.1}{13.10.1 General}{section.13.10}% 435
\BOOKMARK [2][-]{subsection.13.10.2}{13.10.2 Explicit template argument specification}{section.13.10}% 436
\BOOKMARK [2][-]{subsection.13.10.3}{13.10.3 Template argument deduction}{section.13.10}% 437
\BOOKMARK [3][-]{subsubsection.13.10.3.1}{13.10.3.1 General}{subsection.13.10.3}% 438
\BOOKMARK [3][-]{subsubsection.13.10.3.2}{13.10.3.2 Deducing template arguments from a function call}{subsection.13.10.3}% 439
\BOOKMARK [3][-]{subsubsection.13.10.3.3}{13.10.3.3 Deducing template arguments taking the address of a function template}{subsection.13.10.3}% 440
\BOOKMARK [3][-]{subsubsection.13.10.3.4}{13.10.3.4 Deducing conversion function template arguments}{subsection.13.10.3}% 441
\BOOKMARK [3][-]{subsubsection.13.10.3.5}{13.10.3.5 Deducing template arguments during partial ordering}{subsection.13.10.3}% 442
\BOOKMARK [3][-]{subsubsection.13.10.3.6}{13.10.3.6 Deducing template arguments from a type}{subsection.13.10.3}% 443
\BOOKMARK [3][-]{subsubsection.13.10.3.7}{13.10.3.7 Deducing template arguments from a function declaration}{subsection.13.10.3}% 444
\BOOKMARK [2][-]{subsection.13.10.4}{13.10.4 Overload resolution}{section.13.10}% 445
\BOOKMARK [0][-]{chapter.14}{14 Exception handling}{}% 446
\BOOKMARK [1][-]{section.14.1}{14.1 Preamble}{chapter.14}% 447
\BOOKMARK [1][-]{section.14.2}{14.2 Throwing an exception}{chapter.14}% 448
\BOOKMARK [1][-]{section.14.3}{14.3 Constructors and destructors}{chapter.14}% 449
\BOOKMARK [1][-]{section.14.4}{14.4 Handling an exception}{chapter.14}% 450
\BOOKMARK [1][-]{section.14.5}{14.5 Exception specifications}{chapter.14}% 451
\BOOKMARK [1][-]{section.14.6}{14.6 Special functions}{chapter.14}% 452
\BOOKMARK [2][-]{subsection.14.6.1}{14.6.1 General}{section.14.6}% 453
\BOOKMARK [2][-]{subsection.14.6.2}{14.6.2 The std::terminate function}{section.14.6}% 454
\BOOKMARK [2][-]{subsection.14.6.3}{14.6.3 The std::uncaught\137exceptions function}{section.14.6}% 455
\BOOKMARK [0][-]{chapter.15}{15 Preprocessing directives}{}% 456
\BOOKMARK [1][-]{section.15.1}{15.1 Preamble}{chapter.15}% 457
\BOOKMARK [1][-]{section.15.2}{15.2 Conditional inclusion}{chapter.15}% 458
\BOOKMARK [1][-]{section.15.3}{15.3 Source file inclusion}{chapter.15}% 459
\BOOKMARK [1][-]{section.15.4}{15.4 Module directive}{chapter.15}% 460
\BOOKMARK [1][-]{section.15.5}{15.5 Header unit importation}{chapter.15}% 461
\BOOKMARK [1][-]{section.15.6}{15.6 Macro replacement}{chapter.15}% 462
\BOOKMARK [2][-]{subsection.15.6.1}{15.6.1 General}{section.15.6}% 463
\BOOKMARK [2][-]{subsection.15.6.2}{15.6.2 Argument substitution}{section.15.6}% 464
\BOOKMARK [2][-]{subsection.15.6.3}{15.6.3 The \043 operator}{section.15.6}% 465
\BOOKMARK [2][-]{subsection.15.6.4}{15.6.4 The \043\043 operator}{section.15.6}% 466
\BOOKMARK [2][-]{subsection.15.6.5}{15.6.5 Rescanning and further replacement}{section.15.6}% 467
\BOOKMARK [2][-]{subsection.15.6.6}{15.6.6 Scope of macro definitions}{section.15.6}% 468
\BOOKMARK [1][-]{section.15.7}{15.7 Line control}{chapter.15}% 469
\BOOKMARK [1][-]{section.15.8}{15.8 Error directive}{chapter.15}% 470
\BOOKMARK [1][-]{section.15.9}{15.9 Pragma directive}{chapter.15}% 471
\BOOKMARK [1][-]{section.15.10}{15.10 Null directive}{chapter.15}% 472
\BOOKMARK [1][-]{section.15.11}{15.11 Predefined macro names}{chapter.15}% 473
\BOOKMARK [1][-]{section.15.12}{15.12 Pragma operator}{chapter.15}% 474
\BOOKMARK [0][-]{chapter.16}{16 Library introduction}{}% 475
\BOOKMARK [1][-]{section.16.1}{16.1 General}{chapter.16}% 476
\BOOKMARK [1][-]{section.16.2}{16.2 The C standard library}{chapter.16}% 477
\BOOKMARK [1][-]{section.16.3}{16.3 Method of description}{chapter.16}% 478
\BOOKMARK [2][-]{subsection.16.3.1}{16.3.1 General}{section.16.3}% 479
\BOOKMARK [2][-]{subsection.16.3.2}{16.3.2 Structure of each clause}{section.16.3}% 480
\BOOKMARK [3][-]{subsubsection.16.3.2.1}{16.3.2.1 Elements}{subsection.16.3.2}% 481
\BOOKMARK [3][-]{subsubsection.16.3.2.2}{16.3.2.2 Summary}{subsection.16.3.2}% 482
\BOOKMARK [3][-]{subsubsection.16.3.2.3}{16.3.2.3 Requirements}{subsection.16.3.2}% 483
\BOOKMARK [3][-]{subsubsection.16.3.2.4}{16.3.2.4 Detailed specifications}{subsection.16.3.2}% 484
\BOOKMARK [3][-]{subsubsection.16.3.2.5}{16.3.2.5 C library}{subsection.16.3.2}% 485
\BOOKMARK [2][-]{subsection.16.3.3}{16.3.3 Other conventions}{section.16.3}% 486
\BOOKMARK [3][-]{subsubsection.16.3.3.1}{16.3.3.1 General}{subsection.16.3.3}% 487
\BOOKMARK [3][-]{subsubsection.16.3.3.2}{16.3.3.2 Exposition-only functions}{subsection.16.3.3}% 488
\BOOKMARK [3][-]{subsubsection.16.3.3.3}{16.3.3.3 Type descriptions}{subsection.16.3.3}% 489
\BOOKMARK [4][-]{paragraph.16.3.3.3.1}{16.3.3.3.1 General}{subsubsection.16.3.3.3}% 490
\BOOKMARK [4][-]{paragraph.16.3.3.3.2}{16.3.3.3.2 Exposition-only types}{subsubsection.16.3.3.3}% 491
\BOOKMARK [4][-]{paragraph.16.3.3.3.3}{16.3.3.3.3 Enumerated types}{subsubsection.16.3.3.3}% 492
\BOOKMARK [4][-]{paragraph.16.3.3.3.4}{16.3.3.3.4 Bitmask types}{subsubsection.16.3.3.3}% 493
\BOOKMARK [4][-]{paragraph.16.3.3.3.5}{16.3.3.3.5 Character sequences}{subsubsection.16.3.3.3}% 494
\BOOKMARK [5][-]{subparagraph.16.3.3.3.5.1}{16.3.3.3.5.1 General}{paragraph.16.3.3.3.5}% 495
\BOOKMARK [5][-]{subparagraph.16.3.3.3.5.2}{16.3.3.3.5.2 Byte strings}{paragraph.16.3.3.3.5}% 496
\BOOKMARK [5][-]{subparagraph.16.3.3.3.5.3}{16.3.3.3.5.3 Multibyte strings}{paragraph.16.3.3.3.5}% 497
\BOOKMARK [4][-]{paragraph.16.3.3.3.6}{16.3.3.3.6 Customization Point Object types}{subsubsection.16.3.3.3}% 498
\BOOKMARK [3][-]{subsubsection.16.3.3.4}{16.3.3.4 Functions within classes}{subsection.16.3.3}% 499
\BOOKMARK [3][-]{subsubsection.16.3.3.5}{16.3.3.5 Private members}{subsection.16.3.3}% 500
\BOOKMARK [1][-]{section.16.4}{16.4 Library-wide requirements}{chapter.16}% 501
\BOOKMARK [2][-]{subsection.16.4.1}{16.4.1 General}{section.16.4}% 502
\BOOKMARK [2][-]{subsection.16.4.2}{16.4.2 Library contents and organization}{section.16.4}% 503
\BOOKMARK [3][-]{subsubsection.16.4.2.1}{16.4.2.1 General}{subsection.16.4.2}% 504
\BOOKMARK [3][-]{subsubsection.16.4.2.2}{16.4.2.2 Library contents}{subsection.16.4.2}% 505
\BOOKMARK [3][-]{subsubsection.16.4.2.3}{16.4.2.3 Headers}{subsection.16.4.2}% 506
\BOOKMARK [3][-]{subsubsection.16.4.2.4}{16.4.2.4 Freestanding implementations}{subsection.16.4.2}% 507
\BOOKMARK [2][-]{subsection.16.4.3}{16.4.3 Using the library}{section.16.4}% 508
\BOOKMARK [3][-]{subsubsection.16.4.3.1}{16.4.3.1 Overview}{subsection.16.4.3}% 509
\BOOKMARK [3][-]{subsubsection.16.4.3.2}{16.4.3.2 Headers}{subsection.16.4.3}% 510
\BOOKMARK [3][-]{subsubsection.16.4.3.3}{16.4.3.3 Linkage}{subsection.16.4.3}% 511
\BOOKMARK [2][-]{subsection.16.4.4}{16.4.4 Requirements on types and expressions}{section.16.4}% 512
\BOOKMARK [3][-]{subsubsection.16.4.4.1}{16.4.4.1 General}{subsection.16.4.4}% 513
\BOOKMARK [3][-]{subsubsection.16.4.4.2}{16.4.4.2 Template argument requirements}{subsection.16.4.4}% 514
\BOOKMARK [3][-]{subsubsection.16.4.4.3}{16.4.4.3 Swappable requirements}{subsection.16.4.4}% 515
\BOOKMARK [3][-]{subsubsection.16.4.4.4}{16.4.4.4 Cpp17NullablePointer requirements}{subsection.16.4.4}% 516
\BOOKMARK [3][-]{subsubsection.16.4.4.5}{16.4.4.5 Cpp17Hash requirements}{subsection.16.4.4}% 517
\BOOKMARK [3][-]{subsubsection.16.4.4.6}{16.4.4.6 Cpp17Allocator requirements}{subsection.16.4.4}% 518
\BOOKMARK [4][-]{paragraph.16.4.4.6.1}{16.4.4.6.1 General}{subsubsection.16.4.4.6}% 519
\BOOKMARK [4][-]{paragraph.16.4.4.6.2}{16.4.4.6.2 Allocator completeness requirements}{subsubsection.16.4.4.6}% 520
\BOOKMARK [2][-]{subsection.16.4.5}{16.4.5 Constraints on programs}{section.16.4}% 521
\BOOKMARK [3][-]{subsubsection.16.4.5.1}{16.4.5.1 Overview}{subsection.16.4.5}% 522
\BOOKMARK [3][-]{subsubsection.16.4.5.2}{16.4.5.2 Namespace use}{subsection.16.4.5}% 523
\BOOKMARK [4][-]{paragraph.16.4.5.2.1}{16.4.5.2.1 Namespace std}{subsubsection.16.4.5.2}% 524
\BOOKMARK [4][-]{paragraph.16.4.5.2.2}{16.4.5.2.2 Namespace posix}{subsubsection.16.4.5.2}% 525
\BOOKMARK [4][-]{paragraph.16.4.5.2.3}{16.4.5.2.3 Namespaces for future standardization}{subsubsection.16.4.5.2}% 526
\BOOKMARK [3][-]{subsubsection.16.4.5.3}{16.4.5.3 Reserved names}{subsection.16.4.5}% 527
\BOOKMARK [4][-]{paragraph.16.4.5.3.1}{16.4.5.3.1 General}{subsubsection.16.4.5.3}% 528
\BOOKMARK [4][-]{paragraph.16.4.5.3.2}{16.4.5.3.2 Zombie names}{subsubsection.16.4.5.3}% 529
\BOOKMARK [4][-]{paragraph.16.4.5.3.3}{16.4.5.3.3 Macro names}{subsubsection.16.4.5.3}% 530
\BOOKMARK [4][-]{paragraph.16.4.5.3.4}{16.4.5.3.4 External linkage}{subsubsection.16.4.5.3}% 531
\BOOKMARK [4][-]{paragraph.16.4.5.3.5}{16.4.5.3.5 Types}{subsubsection.16.4.5.3}% 532
\BOOKMARK [4][-]{paragraph.16.4.5.3.6}{16.4.5.3.6 User-defined literal suffixes}{subsubsection.16.4.5.3}% 533
\BOOKMARK [3][-]{subsubsection.16.4.5.4}{16.4.5.4 Headers}{subsection.16.4.5}% 534
\BOOKMARK [3][-]{subsubsection.16.4.5.5}{16.4.5.5 Derived classes}{subsection.16.4.5}% 535
\BOOKMARK [3][-]{subsubsection.16.4.5.6}{16.4.5.6 Replacement functions}{subsection.16.4.5}% 536
\BOOKMARK [3][-]{subsubsection.16.4.5.7}{16.4.5.7 Handler functions}{subsection.16.4.5}% 537
\BOOKMARK [3][-]{subsubsection.16.4.5.8}{16.4.5.8 Other functions}{subsection.16.4.5}% 538
\BOOKMARK [3][-]{subsubsection.16.4.5.9}{16.4.5.9 Function arguments}{subsection.16.4.5}% 539
\BOOKMARK [3][-]{subsubsection.16.4.5.10}{16.4.5.10 Library object access}{subsection.16.4.5}% 540
\BOOKMARK [3][-]{subsubsection.16.4.5.11}{16.4.5.11 Semantic requirements}{subsection.16.4.5}% 541
\BOOKMARK [2][-]{subsection.16.4.6}{16.4.6 Conforming implementations}{section.16.4}% 542
\BOOKMARK [3][-]{subsubsection.16.4.6.1}{16.4.6.1 Overview}{subsection.16.4.6}% 543
\BOOKMARK [3][-]{subsubsection.16.4.6.2}{16.4.6.2 Headers}{subsection.16.4.6}% 544
\BOOKMARK [3][-]{subsubsection.16.4.6.3}{16.4.6.3 Restrictions on macro definitions}{subsection.16.4.6}% 545
\BOOKMARK [3][-]{subsubsection.16.4.6.4}{16.4.6.4 Non-member functions}{subsection.16.4.6}% 546
\BOOKMARK [3][-]{subsubsection.16.4.6.5}{16.4.6.5 Member functions}{subsection.16.4.6}% 547
\BOOKMARK [3][-]{subsubsection.16.4.6.6}{16.4.6.6 Friend functions}{subsection.16.4.6}% 548
\BOOKMARK [3][-]{subsubsection.16.4.6.7}{16.4.6.7 Constexpr functions and constructors}{subsection.16.4.6}% 549
\BOOKMARK [3][-]{subsubsection.16.4.6.8}{16.4.6.8 Requirements for stable algorithms}{subsection.16.4.6}% 550
\BOOKMARK [3][-]{subsubsection.16.4.6.9}{16.4.6.9 Reentrancy}{subsection.16.4.6}% 551
\BOOKMARK [3][-]{subsubsection.16.4.6.10}{16.4.6.10 Data race avoidance}{subsection.16.4.6}% 552
\BOOKMARK [3][-]{subsubsection.16.4.6.11}{16.4.6.11 Protection within classes}{subsection.16.4.6}% 553
\BOOKMARK [3][-]{subsubsection.16.4.6.12}{16.4.6.12 Derived classes}{subsection.16.4.6}% 554
\BOOKMARK [3][-]{subsubsection.16.4.6.13}{16.4.6.13 Restrictions on exception handling}{subsection.16.4.6}% 555
\BOOKMARK [3][-]{subsubsection.16.4.6.14}{16.4.6.14 Value of error codes}{subsection.16.4.6}% 556
\BOOKMARK [3][-]{subsubsection.16.4.6.15}{16.4.6.15 Moved-from state of library types}{subsection.16.4.6}% 557
\BOOKMARK [0][-]{chapter.17}{17 Language support library}{}% 558
\BOOKMARK [1][-]{section.17.1}{17.1 General}{chapter.17}% 559
\BOOKMARK [1][-]{section.17.2}{17.2 Common definitions}{chapter.17}% 560
\BOOKMARK [2][-]{subsection.17.2.1}{17.2.1 Header <cstddef> synopsis}{section.17.2}% 561
\BOOKMARK [2][-]{subsection.17.2.2}{17.2.2 Header <cstdlib> synopsis}{section.17.2}% 562
\BOOKMARK [2][-]{subsection.17.2.3}{17.2.3 Null pointers}{section.17.2}% 563
\BOOKMARK [2][-]{subsection.17.2.4}{17.2.4 Sizes, alignments, and offsets}{section.17.2}% 564
\BOOKMARK [2][-]{subsection.17.2.5}{17.2.5 byte type operations}{section.17.2}% 565
\BOOKMARK [1][-]{section.17.3}{17.3 Implementation properties}{chapter.17}% 566
\BOOKMARK [2][-]{subsection.17.3.1}{17.3.1 General}{section.17.3}% 567
\BOOKMARK [2][-]{subsection.17.3.2}{17.3.2 Header <version> synopsis}{section.17.3}% 568
\BOOKMARK [2][-]{subsection.17.3.3}{17.3.3 Header <limits> synopsis}{section.17.3}% 569
\BOOKMARK [2][-]{subsection.17.3.4}{17.3.4 Floating-point type properties}{section.17.3}% 570
\BOOKMARK [3][-]{subsubsection.17.3.4.1}{17.3.4.1 Type float\137round\137style}{subsection.17.3.4}% 571
\BOOKMARK [3][-]{subsubsection.17.3.4.2}{17.3.4.2 Type float\137denorm\137style}{subsection.17.3.4}% 572
\BOOKMARK [2][-]{subsection.17.3.5}{17.3.5 Class template numeric\137limits}{section.17.3}% 573
\BOOKMARK [3][-]{subsubsection.17.3.5.1}{17.3.5.1 General}{subsection.17.3.5}% 574
\BOOKMARK [3][-]{subsubsection.17.3.5.2}{17.3.5.2 numeric\137limits members}{subsection.17.3.5}% 575
\BOOKMARK [3][-]{subsubsection.17.3.5.3}{17.3.5.3 numeric\137limits specializations}{subsection.17.3.5}% 576
\BOOKMARK [2][-]{subsection.17.3.6}{17.3.6 Header <climits> synopsis}{section.17.3}% 577
\BOOKMARK [2][-]{subsection.17.3.7}{17.3.7 Header <cfloat> synopsis}{section.17.3}% 578
\BOOKMARK [1][-]{section.17.4}{17.4 Integer types}{chapter.17}% 579
\BOOKMARK [2][-]{subsection.17.4.1}{17.4.1 General}{section.17.4}% 580
\BOOKMARK [2][-]{subsection.17.4.2}{17.4.2 Header <cstdint> synopsis}{section.17.4}% 581
\BOOKMARK [1][-]{section.17.5}{17.5 Startup and termination}{chapter.17}% 582
\BOOKMARK [1][-]{section.17.6}{17.6 Dynamic memory management}{chapter.17}% 583
\BOOKMARK [2][-]{subsection.17.6.1}{17.6.1 General}{section.17.6}% 584
\BOOKMARK [2][-]{subsection.17.6.2}{17.6.2 Header <new> synopsis}{section.17.6}% 585
\BOOKMARK [2][-]{subsection.17.6.3}{17.6.3 Storage allocation and deallocation}{section.17.6}% 586
\BOOKMARK [3][-]{subsubsection.17.6.3.1}{17.6.3.1 General}{subsection.17.6.3}% 587
\BOOKMARK [3][-]{subsubsection.17.6.3.2}{17.6.3.2 Single-object forms}{subsection.17.6.3}% 588
\BOOKMARK [3][-]{subsubsection.17.6.3.3}{17.6.3.3 Array forms}{subsection.17.6.3}% 589
\BOOKMARK [3][-]{subsubsection.17.6.3.4}{17.6.3.4 Non-allocating forms}{subsection.17.6.3}% 590
\BOOKMARK [3][-]{subsubsection.17.6.3.5}{17.6.3.5 Data races}{subsection.17.6.3}% 591
\BOOKMARK [2][-]{subsection.17.6.4}{17.6.4 Storage allocation errors}{section.17.6}% 592
\BOOKMARK [3][-]{subsubsection.17.6.4.1}{17.6.4.1 Class bad\137alloc}{subsection.17.6.4}% 593
\BOOKMARK [3][-]{subsubsection.17.6.4.2}{17.6.4.2 Class bad\137array\137new\137length}{subsection.17.6.4}% 594
\BOOKMARK [3][-]{subsubsection.17.6.4.3}{17.6.4.3 Type new\137handler}{subsection.17.6.4}% 595
\BOOKMARK [3][-]{subsubsection.17.6.4.4}{17.6.4.4 set\137new\137handler}{subsection.17.6.4}% 596
\BOOKMARK [3][-]{subsubsection.17.6.4.5}{17.6.4.5 get\137new\137handler}{subsection.17.6.4}% 597
\BOOKMARK [2][-]{subsection.17.6.5}{17.6.5 Pointer optimization barrier}{section.17.6}% 598
\BOOKMARK [2][-]{subsection.17.6.6}{17.6.6 Hardware interference size}{section.17.6}% 599
\BOOKMARK [1][-]{section.17.7}{17.7 Type identification}{chapter.17}% 600
\BOOKMARK [2][-]{subsection.17.7.1}{17.7.1 General}{section.17.7}% 601
\BOOKMARK [2][-]{subsection.17.7.2}{17.7.2 Header <typeinfo> synopsis}{section.17.7}% 602
\BOOKMARK [2][-]{subsection.17.7.3}{17.7.3 Class type\137info}{section.17.7}% 603
\BOOKMARK [2][-]{subsection.17.7.4}{17.7.4 Class bad\137cast}{section.17.7}% 604
\BOOKMARK [2][-]{subsection.17.7.5}{17.7.5 Class bad\137typeid}{section.17.7}% 605
\BOOKMARK [1][-]{section.17.8}{17.8 Source location}{chapter.17}% 606
\BOOKMARK [2][-]{subsection.17.8.1}{17.8.1 Header <source\137location> synopsis}{section.17.8}% 607
\BOOKMARK [2][-]{subsection.17.8.2}{17.8.2 Class source\137location}{section.17.8}% 608
\BOOKMARK [3][-]{subsubsection.17.8.2.1}{17.8.2.1 General}{subsection.17.8.2}% 609
\BOOKMARK [3][-]{subsubsection.17.8.2.2}{17.8.2.2 Creation}{subsection.17.8.2}% 610
\BOOKMARK [3][-]{subsubsection.17.8.2.3}{17.8.2.3 Observers}{subsection.17.8.2}% 611
\BOOKMARK [1][-]{section.17.9}{17.9 Exception handling}{chapter.17}% 612
\BOOKMARK [2][-]{subsection.17.9.1}{17.9.1 General}{section.17.9}% 613
\BOOKMARK [2][-]{subsection.17.9.2}{17.9.2 Header <exception> synopsis}{section.17.9}% 614
\BOOKMARK [2][-]{subsection.17.9.3}{17.9.3 Class exception}{section.17.9}% 615
\BOOKMARK [2][-]{subsection.17.9.4}{17.9.4 Class bad\137exception}{section.17.9}% 616
\BOOKMARK [2][-]{subsection.17.9.5}{17.9.5 Abnormal termination}{section.17.9}% 617
\BOOKMARK [3][-]{subsubsection.17.9.5.1}{17.9.5.1 Type terminate\137handler}{subsection.17.9.5}% 618
\BOOKMARK [3][-]{subsubsection.17.9.5.2}{17.9.5.2 set\137terminate}{subsection.17.9.5}% 619
\BOOKMARK [3][-]{subsubsection.17.9.5.3}{17.9.5.3 get\137terminate}{subsection.17.9.5}% 620
\BOOKMARK [3][-]{subsubsection.17.9.5.4}{17.9.5.4 terminate}{subsection.17.9.5}% 621
\BOOKMARK [2][-]{subsection.17.9.6}{17.9.6 uncaught\137exceptions}{section.17.9}% 622
\BOOKMARK [2][-]{subsection.17.9.7}{17.9.7 Exception propagation}{section.17.9}% 623
\BOOKMARK [2][-]{subsection.17.9.8}{17.9.8 nested\137exception}{section.17.9}% 624
\BOOKMARK [1][-]{section.17.10}{17.10 Initializer lists}{chapter.17}% 625
\BOOKMARK [2][-]{subsection.17.10.1}{17.10.1 General}{section.17.10}% 626
\BOOKMARK [2][-]{subsection.17.10.2}{17.10.2 Header <initializer\137list> synopsis}{section.17.10}% 627
\BOOKMARK [2][-]{subsection.17.10.3}{17.10.3 Initializer list constructors}{section.17.10}% 628
\BOOKMARK [2][-]{subsection.17.10.4}{17.10.4 Initializer list access}{section.17.10}% 629
\BOOKMARK [2][-]{subsection.17.10.5}{17.10.5 Initializer list range access}{section.17.10}% 630
\BOOKMARK [1][-]{section.17.11}{17.11 Comparisons}{chapter.17}% 631
\BOOKMARK [2][-]{subsection.17.11.1}{17.11.1 Header <compare> synopsis}{section.17.11}% 632
\BOOKMARK [2][-]{subsection.17.11.2}{17.11.2 Comparison category types}{section.17.11}% 633
\BOOKMARK [3][-]{subsubsection.17.11.2.1}{17.11.2.1 Preamble}{subsection.17.11.2}% 634
\BOOKMARK [3][-]{subsubsection.17.11.2.2}{17.11.2.2 Class partial\137ordering}{subsection.17.11.2}% 635
\BOOKMARK [3][-]{subsubsection.17.11.2.3}{17.11.2.3 Class weak\137ordering}{subsection.17.11.2}% 636
\BOOKMARK [3][-]{subsubsection.17.11.2.4}{17.11.2.4 Class strong\137ordering}{subsection.17.11.2}% 637
\BOOKMARK [2][-]{subsection.17.11.3}{17.11.3 Class template common\137comparison\137category}{section.17.11}% 638
\BOOKMARK [2][-]{subsection.17.11.4}{17.11.4 Concept three\137way\137comparable}{section.17.11}% 639
\BOOKMARK [2][-]{subsection.17.11.5}{17.11.5 Result of three-way comparison}{section.17.11}% 640
\BOOKMARK [2][-]{subsection.17.11.6}{17.11.6 Comparison algorithms}{section.17.11}% 641
\BOOKMARK [1][-]{section.17.12}{17.12 Coroutines}{chapter.17}% 642
\BOOKMARK [2][-]{subsection.17.12.1}{17.12.1 General}{section.17.12}% 643
\BOOKMARK [2][-]{subsection.17.12.2}{17.12.2 Header <coroutine> synopsis}{section.17.12}% 644
\BOOKMARK [2][-]{subsection.17.12.3}{17.12.3 Coroutine traits}{section.17.12}% 645
\BOOKMARK [3][-]{subsubsection.17.12.3.1}{17.12.3.1 General}{subsection.17.12.3}% 646
\BOOKMARK [3][-]{subsubsection.17.12.3.2}{17.12.3.2 Class template coroutine\137traits}{subsection.17.12.3}% 647
\BOOKMARK [2][-]{subsection.17.12.4}{17.12.4 Class template coroutine\137handle}{section.17.12}% 648
\BOOKMARK [3][-]{subsubsection.17.12.4.1}{17.12.4.1 General}{subsection.17.12.4}% 649
\BOOKMARK [3][-]{subsubsection.17.12.4.2}{17.12.4.2 Construct/reset}{subsection.17.12.4}% 650
\BOOKMARK [3][-]{subsubsection.17.12.4.3}{17.12.4.3 Conversion}{subsection.17.12.4}% 651
\BOOKMARK [3][-]{subsubsection.17.12.4.4}{17.12.4.4 Export/import}{subsection.17.12.4}% 652
\BOOKMARK [3][-]{subsubsection.17.12.4.5}{17.12.4.5 Observers}{subsection.17.12.4}% 653
\BOOKMARK [3][-]{subsubsection.17.12.4.6}{17.12.4.6 Resumption}{subsection.17.12.4}% 654
\BOOKMARK [3][-]{subsubsection.17.12.4.7}{17.12.4.7 Promise access}{subsection.17.12.4}% 655
\BOOKMARK [3][-]{subsubsection.17.12.4.8}{17.12.4.8 Comparison operators}{subsection.17.12.4}% 656
\BOOKMARK [3][-]{subsubsection.17.12.4.9}{17.12.4.9 Hash support}{subsection.17.12.4}% 657
\BOOKMARK [2][-]{subsection.17.12.5}{17.12.5 No-op coroutines}{section.17.12}% 658
\BOOKMARK [3][-]{subsubsection.17.12.5.1}{17.12.5.1 Class noop\137coroutine\137promise}{subsection.17.12.5}% 659
\BOOKMARK [3][-]{subsubsection.17.12.5.2}{17.12.5.2 Class coroutine\137handle<noop\137coroutine\137promise>}{subsection.17.12.5}% 660
\BOOKMARK [4][-]{paragraph.17.12.5.2.1}{17.12.5.2.1 Conversion}{subsubsection.17.12.5.2}% 661
\BOOKMARK [4][-]{paragraph.17.12.5.2.2}{17.12.5.2.2 Observers}{subsubsection.17.12.5.2}% 662
\BOOKMARK [4][-]{paragraph.17.12.5.2.3}{17.12.5.2.3 Resumption}{subsubsection.17.12.5.2}% 663
\BOOKMARK [4][-]{paragraph.17.12.5.2.4}{17.12.5.2.4 Promise access}{subsubsection.17.12.5.2}% 664
\BOOKMARK [4][-]{paragraph.17.12.5.2.5}{17.12.5.2.5 Address}{subsubsection.17.12.5.2}% 665
\BOOKMARK [3][-]{subsubsection.17.12.5.3}{17.12.5.3 Function noop\137coroutine}{subsection.17.12.5}% 666
\BOOKMARK [2][-]{subsection.17.12.6}{17.12.6 Trivial awaitables}{section.17.12}% 667
\BOOKMARK [1][-]{section.17.13}{17.13 Other runtime support}{chapter.17}% 668
\BOOKMARK [2][-]{subsection.17.13.1}{17.13.1 General}{section.17.13}% 669
\BOOKMARK [2][-]{subsection.17.13.2}{17.13.2 Header <cstdarg> synopsis}{section.17.13}% 670
\BOOKMARK [2][-]{subsection.17.13.3}{17.13.3 Header <csetjmp> synopsis}{section.17.13}% 671
\BOOKMARK [2][-]{subsection.17.13.4}{17.13.4 Header <csignal> synopsis}{section.17.13}% 672
\BOOKMARK [2][-]{subsection.17.13.5}{17.13.5 Signal handlers}{section.17.13}% 673
\BOOKMARK [1][-]{section.17.14}{17.14 C headers}{chapter.17}% 674
\BOOKMARK [2][-]{subsection.17.14.1}{17.14.1 General}{section.17.14}% 675
\BOOKMARK [2][-]{subsection.17.14.2}{17.14.2 Header <complex.h> synopsis}{section.17.14}% 676
\BOOKMARK [2][-]{subsection.17.14.3}{17.14.3 Header <iso646.h> synopsis}{section.17.14}% 677
\BOOKMARK [2][-]{subsection.17.14.4}{17.14.4 Header <stdalign.h> synopsis}{section.17.14}% 678
\BOOKMARK [2][-]{subsection.17.14.5}{17.14.5 Header <stdbool.h> synopsis}{section.17.14}% 679
\BOOKMARK [2][-]{subsection.17.14.6}{17.14.6 Header <tgmath.h> synopsis}{section.17.14}% 680
\BOOKMARK [2][-]{subsection.17.14.7}{17.14.7 Other C headers}{section.17.14}% 681
\BOOKMARK [0][-]{chapter.18}{18 Concepts library}{}% 682
\BOOKMARK [1][-]{section.18.1}{18.1 General}{chapter.18}% 683
\BOOKMARK [1][-]{section.18.2}{18.2 Equality preservation}{chapter.18}% 684
\BOOKMARK [1][-]{section.18.3}{18.3 Header <concepts> synopsis}{chapter.18}% 685
\BOOKMARK [1][-]{section.18.4}{18.4 Language-related concepts}{chapter.18}% 686
\BOOKMARK [2][-]{subsection.18.4.1}{18.4.1 General}{section.18.4}% 687
\BOOKMARK [2][-]{subsection.18.4.2}{18.4.2 Concept same\137as}{section.18.4}% 688
\BOOKMARK [2][-]{subsection.18.4.3}{18.4.3 Concept derived\137from}{section.18.4}% 689
\BOOKMARK [2][-]{subsection.18.4.4}{18.4.4 Concept convertible\137to}{section.18.4}% 690
\BOOKMARK [2][-]{subsection.18.4.5}{18.4.5 Concept common\137reference\137with}{section.18.4}% 691
\BOOKMARK [2][-]{subsection.18.4.6}{18.4.6 Concept common\137with}{section.18.4}% 692
\BOOKMARK [2][-]{subsection.18.4.7}{18.4.7 Arithmetic concepts}{section.18.4}% 693
\BOOKMARK [2][-]{subsection.18.4.8}{18.4.8 Concept assignable\137from}{section.18.4}% 694
\BOOKMARK [2][-]{subsection.18.4.9}{18.4.9 Concept swappable}{section.18.4}% 695
\BOOKMARK [2][-]{subsection.18.4.10}{18.4.10 Concept destructible}{section.18.4}% 696
\BOOKMARK [2][-]{subsection.18.4.11}{18.4.11 Concept constructible\137from}{section.18.4}% 697
\BOOKMARK [2][-]{subsection.18.4.12}{18.4.12 Concept default\137initializable}{section.18.4}% 698
\BOOKMARK [2][-]{subsection.18.4.13}{18.4.13 Concept move\137constructible}{section.18.4}% 699
\BOOKMARK [2][-]{subsection.18.4.14}{18.4.14 Concept copy\137constructible}{section.18.4}% 700
\BOOKMARK [1][-]{section.18.5}{18.5 Comparison concepts}{chapter.18}% 701
\BOOKMARK [2][-]{subsection.18.5.1}{18.5.1 General}{section.18.5}% 702
\BOOKMARK [2][-]{subsection.18.5.2}{18.5.2 Boolean testability}{section.18.5}% 703
\BOOKMARK [2][-]{subsection.18.5.3}{18.5.3 Concept equality\137comparable}{section.18.5}% 704
\BOOKMARK [2][-]{subsection.18.5.4}{18.5.4 Concept totally\137ordered}{section.18.5}% 705
\BOOKMARK [1][-]{section.18.6}{18.6 Object concepts}{chapter.18}% 706
\BOOKMARK [1][-]{section.18.7}{18.7 Callable concepts}{chapter.18}% 707
\BOOKMARK [2][-]{subsection.18.7.1}{18.7.1 General}{section.18.7}% 708
\BOOKMARK [2][-]{subsection.18.7.2}{18.7.2 Concept invocable}{section.18.7}% 709
\BOOKMARK [2][-]{subsection.18.7.3}{18.7.3 Concept regular\137invocable}{section.18.7}% 710
\BOOKMARK [2][-]{subsection.18.7.4}{18.7.4 Concept predicate}{section.18.7}% 711
\BOOKMARK [2][-]{subsection.18.7.5}{18.7.5 Concept relation}{section.18.7}% 712
\BOOKMARK [2][-]{subsection.18.7.6}{18.7.6 Concept equivalence\137relation}{section.18.7}% 713
\BOOKMARK [2][-]{subsection.18.7.7}{18.7.7 Concept strict\137weak\137order}{section.18.7}% 714
\BOOKMARK [0][-]{chapter.19}{19 Diagnostics library}{}% 715
\BOOKMARK [1][-]{section.19.1}{19.1 General}{chapter.19}% 716
\BOOKMARK [1][-]{section.19.2}{19.2 Exception classes}{chapter.19}% 717
\BOOKMARK [2][-]{subsection.19.2.1}{19.2.1 General}{section.19.2}% 718
\BOOKMARK [2][-]{subsection.19.2.2}{19.2.2 Header <stdexcept> synopsis}{section.19.2}% 719
\BOOKMARK [2][-]{subsection.19.2.3}{19.2.3 Class logic\137error}{section.19.2}% 720
\BOOKMARK [2][-]{subsection.19.2.4}{19.2.4 Class domain\137error}{section.19.2}% 721
\BOOKMARK [2][-]{subsection.19.2.5}{19.2.5 Class invalid\137argument}{section.19.2}% 722
\BOOKMARK [2][-]{subsection.19.2.6}{19.2.6 Class length\137error}{section.19.2}% 723
\BOOKMARK [2][-]{subsection.19.2.7}{19.2.7 Class out\137of\137range}{section.19.2}% 724
\BOOKMARK [2][-]{subsection.19.2.8}{19.2.8 Class runtime\137error}{section.19.2}% 725
\BOOKMARK [2][-]{subsection.19.2.9}{19.2.9 Class range\137error}{section.19.2}% 726
\BOOKMARK [2][-]{subsection.19.2.10}{19.2.10 Class overflow\137error}{section.19.2}% 727
\BOOKMARK [2][-]{subsection.19.2.11}{19.2.11 Class underflow\137error}{section.19.2}% 728
\BOOKMARK [1][-]{section.19.3}{19.3 Assertions}{chapter.19}% 729
\BOOKMARK [2][-]{subsection.19.3.1}{19.3.1 General}{section.19.3}% 730
\BOOKMARK [2][-]{subsection.19.3.2}{19.3.2 Header <cassert> synopsis}{section.19.3}% 731
\BOOKMARK [2][-]{subsection.19.3.3}{19.3.3 The assert macro}{section.19.3}% 732
\BOOKMARK [1][-]{section.19.4}{19.4 Error numbers}{chapter.19}% 733
\BOOKMARK [2][-]{subsection.19.4.1}{19.4.1 General}{section.19.4}% 734
\BOOKMARK [2][-]{subsection.19.4.2}{19.4.2 Header <cerrno> synopsis}{section.19.4}% 735
\BOOKMARK [1][-]{section.19.5}{19.5 System error support}{chapter.19}% 736
\BOOKMARK [2][-]{subsection.19.5.1}{19.5.1 General}{section.19.5}% 737
\BOOKMARK [2][-]{subsection.19.5.2}{19.5.2 Header <system\137error> synopsis}{section.19.5}% 738
\BOOKMARK [2][-]{subsection.19.5.3}{19.5.3 Class error\137category}{section.19.5}% 739
\BOOKMARK [3][-]{subsubsection.19.5.3.1}{19.5.3.1 Overview}{subsection.19.5.3}% 740
\BOOKMARK [3][-]{subsubsection.19.5.3.2}{19.5.3.2 Virtual members}{subsection.19.5.3}% 741
\BOOKMARK [3][-]{subsubsection.19.5.3.3}{19.5.3.3 Non-virtual members}{subsection.19.5.3}% 742
\BOOKMARK [3][-]{subsubsection.19.5.3.4}{19.5.3.4 Program-defined classes derived from error\137category}{subsection.19.5.3}% 743
\BOOKMARK [3][-]{subsubsection.19.5.3.5}{19.5.3.5 Error category objects}{subsection.19.5.3}% 744
\BOOKMARK [2][-]{subsection.19.5.4}{19.5.4 Class error\137code}{section.19.5}% 745
\BOOKMARK [3][-]{subsubsection.19.5.4.1}{19.5.4.1 Overview}{subsection.19.5.4}% 746
\BOOKMARK [3][-]{subsubsection.19.5.4.2}{19.5.4.2 Constructors}{subsection.19.5.4}% 747
\BOOKMARK [3][-]{subsubsection.19.5.4.3}{19.5.4.3 Modifiers}{subsection.19.5.4}% 748
\BOOKMARK [3][-]{subsubsection.19.5.4.4}{19.5.4.4 Observers}{subsection.19.5.4}% 749
\BOOKMARK [3][-]{subsubsection.19.5.4.5}{19.5.4.5 Non-member functions}{subsection.19.5.4}% 750
\BOOKMARK [2][-]{subsection.19.5.5}{19.5.5 Class error\137condition}{section.19.5}% 751
\BOOKMARK [3][-]{subsubsection.19.5.5.1}{19.5.5.1 Overview}{subsection.19.5.5}% 752
\BOOKMARK [3][-]{subsubsection.19.5.5.2}{19.5.5.2 Constructors}{subsection.19.5.5}% 753
\BOOKMARK [3][-]{subsubsection.19.5.5.3}{19.5.5.3 Modifiers}{subsection.19.5.5}% 754
\BOOKMARK [3][-]{subsubsection.19.5.5.4}{19.5.5.4 Observers}{subsection.19.5.5}% 755
\BOOKMARK [3][-]{subsubsection.19.5.5.5}{19.5.5.5 Non-member functions}{subsection.19.5.5}% 756
\BOOKMARK [2][-]{subsection.19.5.6}{19.5.6 Comparison operator functions}{section.19.5}% 757
\BOOKMARK [2][-]{subsection.19.5.7}{19.5.7 System error hash support}{section.19.5}% 758
\BOOKMARK [2][-]{subsection.19.5.8}{19.5.8 Class system\137error}{section.19.5}% 759
\BOOKMARK [3][-]{subsubsection.19.5.8.1}{19.5.8.1 Overview}{subsection.19.5.8}% 760
\BOOKMARK [3][-]{subsubsection.19.5.8.2}{19.5.8.2 Members}{subsection.19.5.8}% 761
\BOOKMARK [1][-]{section.19.6}{19.6 Stacktrace}{chapter.19}% 762
\BOOKMARK [2][-]{subsection.19.6.1}{19.6.1 General}{section.19.6}% 763
\BOOKMARK [2][-]{subsection.19.6.2}{19.6.2 Header <stacktrace> synopsis}{section.19.6}% 764
\BOOKMARK [2][-]{subsection.19.6.3}{19.6.3 Class stacktrace\137entry}{section.19.6}% 765
\BOOKMARK [3][-]{subsubsection.19.6.3.1}{19.6.3.1 Overview}{subsection.19.6.3}% 766
\BOOKMARK [3][-]{subsubsection.19.6.3.2}{19.6.3.2 Constructors}{subsection.19.6.3}% 767
\BOOKMARK [3][-]{subsubsection.19.6.3.3}{19.6.3.3 Observers}{subsection.19.6.3}% 768
\BOOKMARK [3][-]{subsubsection.19.6.3.4}{19.6.3.4 Query}{subsection.19.6.3}% 769
\BOOKMARK [3][-]{subsubsection.19.6.3.5}{19.6.3.5 Comparison}{subsection.19.6.3}% 770
\BOOKMARK [2][-]{subsection.19.6.4}{19.6.4 Class template basic\137stacktrace}{section.19.6}% 771
\BOOKMARK [3][-]{subsubsection.19.6.4.1}{19.6.4.1 Overview}{subsection.19.6.4}% 772
\BOOKMARK [3][-]{subsubsection.19.6.4.2}{19.6.4.2 Creation and assignment}{subsection.19.6.4}% 773
\BOOKMARK [3][-]{subsubsection.19.6.4.3}{19.6.4.3 Observers}{subsection.19.6.4}% 774
\BOOKMARK [3][-]{subsubsection.19.6.4.4}{19.6.4.4 Comparisons}{subsection.19.6.4}% 775
\BOOKMARK [3][-]{subsubsection.19.6.4.5}{19.6.4.5 Modifiers}{subsection.19.6.4}% 776
\BOOKMARK [3][-]{subsubsection.19.6.4.6}{19.6.4.6 Non-member functions}{subsection.19.6.4}% 777
\BOOKMARK [3][-]{subsubsection.19.6.4.7}{19.6.4.7 Hash support}{subsection.19.6.4}% 778
\BOOKMARK [0][-]{chapter.20}{20 Memory management library}{}% 779
\BOOKMARK [1][-]{section.20.1}{20.1 General}{chapter.20}% 780
\BOOKMARK [1][-]{section.20.2}{20.2 Memory}{chapter.20}% 781
\BOOKMARK [2][-]{subsection.20.2.1}{20.2.1 In general}{section.20.2}% 782
\BOOKMARK [2][-]{subsection.20.2.2}{20.2.2 Header <memory> synopsis}{section.20.2}% 783
\BOOKMARK [2][-]{subsection.20.2.3}{20.2.3 Pointer traits}{section.20.2}% 784
\BOOKMARK [3][-]{subsubsection.20.2.3.1}{20.2.3.1 General}{subsection.20.2.3}% 785
\BOOKMARK [3][-]{subsubsection.20.2.3.2}{20.2.3.2 Member types}{subsection.20.2.3}% 786
\BOOKMARK [3][-]{subsubsection.20.2.3.3}{20.2.3.3 Member functions}{subsection.20.2.3}% 787
\BOOKMARK [3][-]{subsubsection.20.2.3.4}{20.2.3.4 Optional members}{subsection.20.2.3}% 788
\BOOKMARK [2][-]{subsection.20.2.4}{20.2.4 Pointer conversion}{section.20.2}% 789
\BOOKMARK [2][-]{subsection.20.2.5}{20.2.5 Pointer alignment}{section.20.2}% 790
\BOOKMARK [2][-]{subsection.20.2.6}{20.2.6 Allocator argument tag}{section.20.2}% 791
\BOOKMARK [2][-]{subsection.20.2.7}{20.2.7 uses\137allocator}{section.20.2}% 792
\BOOKMARK [3][-]{subsubsection.20.2.7.1}{20.2.7.1 uses\137allocator trait}{subsection.20.2.7}% 793
\BOOKMARK [3][-]{subsubsection.20.2.7.2}{20.2.7.2 Uses-allocator construction}{subsection.20.2.7}% 794
\BOOKMARK [2][-]{subsection.20.2.8}{20.2.8 Allocator traits}{section.20.2}% 795
\BOOKMARK [3][-]{subsubsection.20.2.8.1}{20.2.8.1 General}{subsection.20.2.8}% 796
\BOOKMARK [3][-]{subsubsection.20.2.8.2}{20.2.8.2 Member types}{subsection.20.2.8}% 797
\BOOKMARK [3][-]{subsubsection.20.2.8.3}{20.2.8.3 Static member functions}{subsection.20.2.8}% 798
\BOOKMARK [3][-]{subsubsection.20.2.8.4}{20.2.8.4 Other}{subsection.20.2.8}% 799
\BOOKMARK [2][-]{subsection.20.2.9}{20.2.9 The default allocator}{section.20.2}% 800
\BOOKMARK [3][-]{subsubsection.20.2.9.1}{20.2.9.1 General}{subsection.20.2.9}% 801
\BOOKMARK [3][-]{subsubsection.20.2.9.2}{20.2.9.2 Members}{subsection.20.2.9}% 802
\BOOKMARK [3][-]{subsubsection.20.2.9.3}{20.2.9.3 Operators}{subsection.20.2.9}% 803
\BOOKMARK [2][-]{subsection.20.2.10}{20.2.10 addressof}{section.20.2}% 804
\BOOKMARK [2][-]{subsection.20.2.11}{20.2.11 C library memory allocation}{section.20.2}% 805
\BOOKMARK [1][-]{section.20.3}{20.3 Smart pointers}{chapter.20}% 806
\BOOKMARK [2][-]{subsection.20.3.1}{20.3.1 Unique-ownership pointers}{section.20.3}% 807
\BOOKMARK [3][-]{subsubsection.20.3.1.1}{20.3.1.1 General}{subsection.20.3.1}% 808
\BOOKMARK [3][-]{subsubsection.20.3.1.2}{20.3.1.2 Default deleters}{subsection.20.3.1}% 809
\BOOKMARK [4][-]{paragraph.20.3.1.2.1}{20.3.1.2.1 In general}{subsubsection.20.3.1.2}% 810
\BOOKMARK [4][-]{paragraph.20.3.1.2.2}{20.3.1.2.2 default\137delete}{subsubsection.20.3.1.2}% 811
\BOOKMARK [4][-]{paragraph.20.3.1.2.3}{20.3.1.2.3 default\137delete<T[]>}{subsubsection.20.3.1.2}% 812
\BOOKMARK [3][-]{subsubsection.20.3.1.3}{20.3.1.3 unique\137ptr for single objects}{subsection.20.3.1}% 813
\BOOKMARK [4][-]{paragraph.20.3.1.3.1}{20.3.1.3.1 General}{subsubsection.20.3.1.3}% 814
\BOOKMARK [4][-]{paragraph.20.3.1.3.2}{20.3.1.3.2 Constructors}{subsubsection.20.3.1.3}% 815
\BOOKMARK [4][-]{paragraph.20.3.1.3.3}{20.3.1.3.3 Destructor}{subsubsection.20.3.1.3}% 816
\BOOKMARK [4][-]{paragraph.20.3.1.3.4}{20.3.1.3.4 Assignment}{subsubsection.20.3.1.3}% 817
\BOOKMARK [4][-]{paragraph.20.3.1.3.5}{20.3.1.3.5 Observers}{subsubsection.20.3.1.3}% 818
\BOOKMARK [4][-]{paragraph.20.3.1.3.6}{20.3.1.3.6 Modifiers}{subsubsection.20.3.1.3}% 819
\BOOKMARK [3][-]{subsubsection.20.3.1.4}{20.3.1.4 unique\137ptr for array objects with a runtime length}{subsection.20.3.1}% 820
\BOOKMARK [4][-]{paragraph.20.3.1.4.1}{20.3.1.4.1 General}{subsubsection.20.3.1.4}% 821
\BOOKMARK [4][-]{paragraph.20.3.1.4.2}{20.3.1.4.2 Constructors}{subsubsection.20.3.1.4}% 822
\BOOKMARK [4][-]{paragraph.20.3.1.4.3}{20.3.1.4.3 Assignment}{subsubsection.20.3.1.4}% 823
\BOOKMARK [4][-]{paragraph.20.3.1.4.4}{20.3.1.4.4 Observers}{subsubsection.20.3.1.4}% 824
\BOOKMARK [4][-]{paragraph.20.3.1.4.5}{20.3.1.4.5 Modifiers}{subsubsection.20.3.1.4}% 825
\BOOKMARK [3][-]{subsubsection.20.3.1.5}{20.3.1.5 Creation}{subsection.20.3.1}% 826
\BOOKMARK [3][-]{subsubsection.20.3.1.6}{20.3.1.6 Specialized algorithms}{subsection.20.3.1}% 827
\BOOKMARK [3][-]{subsubsection.20.3.1.7}{20.3.1.7 I/O}{subsection.20.3.1}% 828
\BOOKMARK [2][-]{subsection.20.3.2}{20.3.2 Shared-ownership pointers}{section.20.3}% 829
\BOOKMARK [3][-]{subsubsection.20.3.2.1}{20.3.2.1 Class bad\137weak\137ptr}{subsection.20.3.2}% 830
\BOOKMARK [3][-]{subsubsection.20.3.2.2}{20.3.2.2 Class template shared\137ptr}{subsection.20.3.2}% 831
\BOOKMARK [4][-]{paragraph.20.3.2.2.1}{20.3.2.2.1 General}{subsubsection.20.3.2.2}% 832
\BOOKMARK [4][-]{paragraph.20.3.2.2.2}{20.3.2.2.2 Constructors}{subsubsection.20.3.2.2}% 833
\BOOKMARK [4][-]{paragraph.20.3.2.2.3}{20.3.2.2.3 Destructor}{subsubsection.20.3.2.2}% 834
\BOOKMARK [4][-]{paragraph.20.3.2.2.4}{20.3.2.2.4 Assignment}{subsubsection.20.3.2.2}% 835
\BOOKMARK [4][-]{paragraph.20.3.2.2.5}{20.3.2.2.5 Modifiers}{subsubsection.20.3.2.2}% 836
\BOOKMARK [4][-]{paragraph.20.3.2.2.6}{20.3.2.2.6 Observers}{subsubsection.20.3.2.2}% 837
\BOOKMARK [4][-]{paragraph.20.3.2.2.7}{20.3.2.2.7 Creation}{subsubsection.20.3.2.2}% 838
\BOOKMARK [4][-]{paragraph.20.3.2.2.8}{20.3.2.2.8 Comparison}{subsubsection.20.3.2.2}% 839
\BOOKMARK [4][-]{paragraph.20.3.2.2.9}{20.3.2.2.9 Specialized algorithms}{subsubsection.20.3.2.2}% 840
\BOOKMARK [4][-]{paragraph.20.3.2.2.10}{20.3.2.2.10 Casts}{subsubsection.20.3.2.2}% 841
\BOOKMARK [4][-]{paragraph.20.3.2.2.11}{20.3.2.2.11 get\137deleter}{subsubsection.20.3.2.2}% 842
\BOOKMARK [4][-]{paragraph.20.3.2.2.12}{20.3.2.2.12 I/O}{subsubsection.20.3.2.2}% 843
\BOOKMARK [3][-]{subsubsection.20.3.2.3}{20.3.2.3 Class template weak\137ptr}{subsection.20.3.2}% 844
\BOOKMARK [4][-]{paragraph.20.3.2.3.1}{20.3.2.3.1 General}{subsubsection.20.3.2.3}% 845
\BOOKMARK [4][-]{paragraph.20.3.2.3.2}{20.3.2.3.2 Constructors}{subsubsection.20.3.2.3}% 846
\BOOKMARK [4][-]{paragraph.20.3.2.3.3}{20.3.2.3.3 Destructor}{subsubsection.20.3.2.3}% 847
\BOOKMARK [4][-]{paragraph.20.3.2.3.4}{20.3.2.3.4 Assignment}{subsubsection.20.3.2.3}% 848
\BOOKMARK [4][-]{paragraph.20.3.2.3.5}{20.3.2.3.5 Modifiers}{subsubsection.20.3.2.3}% 849
\BOOKMARK [4][-]{paragraph.20.3.2.3.6}{20.3.2.3.6 Observers}{subsubsection.20.3.2.3}% 850
\BOOKMARK [4][-]{paragraph.20.3.2.3.7}{20.3.2.3.7 Specialized algorithms}{subsubsection.20.3.2.3}% 851
\BOOKMARK [3][-]{subsubsection.20.3.2.4}{20.3.2.4 Class template owner\137less}{subsection.20.3.2}% 852
\BOOKMARK [3][-]{subsubsection.20.3.2.5}{20.3.2.5 Class template enable\137shared\137from\137this}{subsection.20.3.2}% 853
\BOOKMARK [2][-]{subsection.20.3.3}{20.3.3 Smart pointer hash support}{section.20.3}% 854
\BOOKMARK [2][-]{subsection.20.3.4}{20.3.4 Smart pointer adaptors}{section.20.3}% 855
\BOOKMARK [3][-]{subsubsection.20.3.4.1}{20.3.4.1 Class template out\137ptr\137t}{subsection.20.3.4}% 856
\BOOKMARK [3][-]{subsubsection.20.3.4.2}{20.3.4.2 Function template out\137ptr}{subsection.20.3.4}% 857
\BOOKMARK [3][-]{subsubsection.20.3.4.3}{20.3.4.3 Class template inout\137ptr\137t}{subsection.20.3.4}% 858
\BOOKMARK [3][-]{subsubsection.20.3.4.4}{20.3.4.4 Function template inout\137ptr}{subsection.20.3.4}% 859
\BOOKMARK [1][-]{section.20.4}{20.4 Memory resources}{chapter.20}% 860
\BOOKMARK [2][-]{subsection.20.4.1}{20.4.1 Header <memory\137resource> synopsis}{section.20.4}% 861
\BOOKMARK [2][-]{subsection.20.4.2}{20.4.2 Class memory\137resource}{section.20.4}% 862
\BOOKMARK [3][-]{subsubsection.20.4.2.1}{20.4.2.1 General}{subsection.20.4.2}% 863
\BOOKMARK [3][-]{subsubsection.20.4.2.2}{20.4.2.2 Public member functions}{subsection.20.4.2}% 864
\BOOKMARK [3][-]{subsubsection.20.4.2.3}{20.4.2.3 Private virtual member functions}{subsection.20.4.2}% 865
\BOOKMARK [3][-]{subsubsection.20.4.2.4}{20.4.2.4 Equality}{subsection.20.4.2}% 866
\BOOKMARK [2][-]{subsection.20.4.3}{20.4.3 Class template polymorphic\137allocator}{section.20.4}% 867
\BOOKMARK [3][-]{subsubsection.20.4.3.1}{20.4.3.1 General}{subsection.20.4.3}% 868
\BOOKMARK [3][-]{subsubsection.20.4.3.2}{20.4.3.2 Constructors}{subsection.20.4.3}% 869
\BOOKMARK [3][-]{subsubsection.20.4.3.3}{20.4.3.3 Member functions}{subsection.20.4.3}% 870
\BOOKMARK [3][-]{subsubsection.20.4.3.4}{20.4.3.4 Equality}{subsection.20.4.3}% 871
\BOOKMARK [2][-]{subsection.20.4.4}{20.4.4 Access to program-wide memory\137resource objects}{section.20.4}% 872
\BOOKMARK [2][-]{subsection.20.4.5}{20.4.5 Pool resource classes}{section.20.4}% 873
\BOOKMARK [3][-]{subsubsection.20.4.5.1}{20.4.5.1 Classes synchronized\137pool\137resource and unsynchronized\137pool\137resource}{subsection.20.4.5}% 874
\BOOKMARK [3][-]{subsubsection.20.4.5.2}{20.4.5.2 pool\137options data members}{subsection.20.4.5}% 875
\BOOKMARK [3][-]{subsubsection.20.4.5.3}{20.4.5.3 Constructors and destructors}{subsection.20.4.5}% 876
\BOOKMARK [3][-]{subsubsection.20.4.5.4}{20.4.5.4 Members}{subsection.20.4.5}% 877
\BOOKMARK [2][-]{subsection.20.4.6}{20.4.6 Class monotonic\137buffer\137resource}{section.20.4}% 878
\BOOKMARK [3][-]{subsubsection.20.4.6.1}{20.4.6.1 General}{subsection.20.4.6}% 879
\BOOKMARK [3][-]{subsubsection.20.4.6.2}{20.4.6.2 Constructors and destructor}{subsection.20.4.6}% 880
\BOOKMARK [3][-]{subsubsection.20.4.6.3}{20.4.6.3 Members}{subsection.20.4.6}% 881
\BOOKMARK [1][-]{section.20.5}{20.5 Class template scoped\137allocator\137adaptor}{chapter.20}% 882
\BOOKMARK [2][-]{subsection.20.5.1}{20.5.1 Header <scoped\137allocator> synopsis}{section.20.5}% 883
\BOOKMARK [2][-]{subsection.20.5.2}{20.5.2 Member types}{section.20.5}% 884
\BOOKMARK [2][-]{subsection.20.5.3}{20.5.3 Constructors}{section.20.5}% 885
\BOOKMARK [2][-]{subsection.20.5.4}{20.5.4 Members}{section.20.5}% 886
\BOOKMARK [2][-]{subsection.20.5.5}{20.5.5 Operators}{section.20.5}% 887
\BOOKMARK [0][-]{chapter.21}{21 Metaprogramming library}{}% 888
\BOOKMARK [1][-]{section.21.1}{21.1 General}{chapter.21}% 889
\BOOKMARK [1][-]{section.21.2}{21.2 Compile-time integer sequences}{chapter.21}% 890
\BOOKMARK [2][-]{subsection.21.2.1}{21.2.1 In general}{section.21.2}% 891
\BOOKMARK [2][-]{subsection.21.2.2}{21.2.2 Class template integer\137sequence}{section.21.2}% 892
\BOOKMARK [2][-]{subsection.21.2.3}{21.2.3 Alias template make\137integer\137sequence}{section.21.2}% 893
\BOOKMARK [1][-]{section.21.3}{21.3 Metaprogramming and type traits}{chapter.21}% 894
\BOOKMARK [2][-]{subsection.21.3.1}{21.3.1 General}{section.21.3}% 895
\BOOKMARK [2][-]{subsection.21.3.2}{21.3.2 Requirements}{section.21.3}% 896
\BOOKMARK [2][-]{subsection.21.3.3}{21.3.3 Header <type\137traits> synopsis}{section.21.3}% 897
\BOOKMARK [2][-]{subsection.21.3.4}{21.3.4 Helper classes}{section.21.3}% 898
\BOOKMARK [2][-]{subsection.21.3.5}{21.3.5 Unary type traits}{section.21.3}% 899
\BOOKMARK [3][-]{subsubsection.21.3.5.1}{21.3.5.1 General}{subsection.21.3.5}% 900
\BOOKMARK [3][-]{subsubsection.21.3.5.2}{21.3.5.2 Primary type categories}{subsection.21.3.5}% 901
\BOOKMARK [3][-]{subsubsection.21.3.5.3}{21.3.5.3 Composite type traits}{subsection.21.3.5}% 902
\BOOKMARK [3][-]{subsubsection.21.3.5.4}{21.3.5.4 Type properties}{subsection.21.3.5}% 903
\BOOKMARK [2][-]{subsection.21.3.6}{21.3.6 Type property queries}{section.21.3}% 904
\BOOKMARK [2][-]{subsection.21.3.7}{21.3.7 Relationships between types}{section.21.3}% 905
\BOOKMARK [2][-]{subsection.21.3.8}{21.3.8 Transformations between types}{section.21.3}% 906
\BOOKMARK [3][-]{subsubsection.21.3.8.1}{21.3.8.1 General}{subsection.21.3.8}% 907
\BOOKMARK [3][-]{subsubsection.21.3.8.2}{21.3.8.2 Const-volatile modifications}{subsection.21.3.8}% 908
\BOOKMARK [3][-]{subsubsection.21.3.8.3}{21.3.8.3 Reference modifications}{subsection.21.3.8}% 909
\BOOKMARK [3][-]{subsubsection.21.3.8.4}{21.3.8.4 Sign modifications}{subsection.21.3.8}% 910
\BOOKMARK [3][-]{subsubsection.21.3.8.5}{21.3.8.5 Array modifications}{subsection.21.3.8}% 911
\BOOKMARK [3][-]{subsubsection.21.3.8.6}{21.3.8.6 Pointer modifications}{subsection.21.3.8}% 912
\BOOKMARK [3][-]{subsubsection.21.3.8.7}{21.3.8.7 Other transformations}{subsection.21.3.8}% 913
\BOOKMARK [2][-]{subsection.21.3.9}{21.3.9 Logical operator traits}{section.21.3}% 914
\BOOKMARK [2][-]{subsection.21.3.10}{21.3.10 Member relationships}{section.21.3}% 915
\BOOKMARK [2][-]{subsection.21.3.11}{21.3.11 Constant evaluation context}{section.21.3}% 916
\BOOKMARK [1][-]{section.21.4}{21.4 Compile-time rational arithmetic}{chapter.21}% 917
\BOOKMARK [2][-]{subsection.21.4.1}{21.4.1 In general}{section.21.4}% 918
\BOOKMARK [2][-]{subsection.21.4.2}{21.4.2 Header <ratio> synopsis}{section.21.4}% 919
\BOOKMARK [2][-]{subsection.21.4.3}{21.4.3 Class template ratio}{section.21.4}% 920
\BOOKMARK [2][-]{subsection.21.4.4}{21.4.4 Arithmetic on ratios}{section.21.4}% 921
\BOOKMARK [2][-]{subsection.21.4.5}{21.4.5 Comparison of ratios}{section.21.4}% 922
\BOOKMARK [2][-]{subsection.21.4.6}{21.4.6 SI types for ratio}{section.21.4}% 923
\BOOKMARK [0][-]{chapter.22}{22 General utilities library}{}% 924
\BOOKMARK [1][-]{section.22.1}{22.1 General}{chapter.22}% 925
\BOOKMARK [1][-]{section.22.2}{22.2 Utility components}{chapter.22}% 926
\BOOKMARK [2][-]{subsection.22.2.1}{22.2.1 Header <utility> synopsis}{section.22.2}% 927
\BOOKMARK [2][-]{subsection.22.2.2}{22.2.2 swap}{section.22.2}% 928
\BOOKMARK [2][-]{subsection.22.2.3}{22.2.3 exchange}{section.22.2}% 929
\BOOKMARK [2][-]{subsection.22.2.4}{22.2.4 Forward/move helpers}{section.22.2}% 930
\BOOKMARK [2][-]{subsection.22.2.5}{22.2.5 Function template as\137const}{section.22.2}% 931
\BOOKMARK [2][-]{subsection.22.2.6}{22.2.6 Function template declval}{section.22.2}% 932
\BOOKMARK [2][-]{subsection.22.2.7}{22.2.7 Integer comparison functions}{section.22.2}% 933
\BOOKMARK [2][-]{subsection.22.2.8}{22.2.8 Function template to\137underlying}{section.22.2}% 934
\BOOKMARK [2][-]{subsection.22.2.9}{22.2.9 Function unreachable}{section.22.2}% 935
\BOOKMARK [1][-]{section.22.3}{22.3 Pairs}{chapter.22}% 936
\BOOKMARK [2][-]{subsection.22.3.1}{22.3.1 In general}{section.22.3}% 937
\BOOKMARK [2][-]{subsection.22.3.2}{22.3.2 Class template pair}{section.22.3}% 938
\BOOKMARK [2][-]{subsection.22.3.3}{22.3.3 Specialized algorithms}{section.22.3}% 939
\BOOKMARK [2][-]{subsection.22.3.4}{22.3.4 Tuple-like access to pair}{section.22.3}% 940
\BOOKMARK [2][-]{subsection.22.3.5}{22.3.5 Piecewise construction}{section.22.3}% 941
\BOOKMARK [1][-]{section.22.4}{22.4 Tuples}{chapter.22}% 942
\BOOKMARK [2][-]{subsection.22.4.1}{22.4.1 In general}{section.22.4}% 943
\BOOKMARK [2][-]{subsection.22.4.2}{22.4.2 Header <tuple> synopsis}{section.22.4}% 944
\BOOKMARK [2][-]{subsection.22.4.3}{22.4.3 Class template tuple}{section.22.4}% 945
\BOOKMARK [3][-]{subsubsection.22.4.3.1}{22.4.3.1 Construction}{subsection.22.4.3}% 946
\BOOKMARK [3][-]{subsubsection.22.4.3.2}{22.4.3.2 Assignment}{subsection.22.4.3}% 947
\BOOKMARK [3][-]{subsubsection.22.4.3.3}{22.4.3.3 swap}{subsection.22.4.3}% 948
\BOOKMARK [2][-]{subsection.22.4.4}{22.4.4 Tuple creation functions}{section.22.4}% 949
\BOOKMARK [2][-]{subsection.22.4.5}{22.4.5 Calling a function with a tuple of arguments}{section.22.4}% 950
\BOOKMARK [2][-]{subsection.22.4.6}{22.4.6 Tuple helper classes}{section.22.4}% 951
\BOOKMARK [2][-]{subsection.22.4.7}{22.4.7 Element access}{section.22.4}% 952
\BOOKMARK [2][-]{subsection.22.4.8}{22.4.8 Relational operators}{section.22.4}% 953
\BOOKMARK [2][-]{subsection.22.4.9}{22.4.9 Tuple traits}{section.22.4}% 954
\BOOKMARK [2][-]{subsection.22.4.10}{22.4.10 Tuple specialized algorithms}{section.22.4}% 955
\BOOKMARK [1][-]{section.22.5}{22.5 Optional objects}{chapter.22}% 956
\BOOKMARK [2][-]{subsection.22.5.1}{22.5.1 In general}{section.22.5}% 957
\BOOKMARK [2][-]{subsection.22.5.2}{22.5.2 Header <optional> synopsis}{section.22.5}% 958
\BOOKMARK [2][-]{subsection.22.5.3}{22.5.3 Class template optional}{section.22.5}% 959
\BOOKMARK [3][-]{subsubsection.22.5.3.1}{22.5.3.1 General}{subsection.22.5.3}% 960
\BOOKMARK [3][-]{subsubsection.22.5.3.2}{22.5.3.2 Constructors}{subsection.22.5.3}% 961
\BOOKMARK [3][-]{subsubsection.22.5.3.3}{22.5.3.3 Destructor}{subsection.22.5.3}% 962
\BOOKMARK [3][-]{subsubsection.22.5.3.4}{22.5.3.4 Assignment}{subsection.22.5.3}% 963
\BOOKMARK [3][-]{subsubsection.22.5.3.5}{22.5.3.5 Swap}{subsection.22.5.3}% 964
\BOOKMARK [3][-]{subsubsection.22.5.3.6}{22.5.3.6 Observers}{subsection.22.5.3}% 965
\BOOKMARK [3][-]{subsubsection.22.5.3.7}{22.5.3.7 Monadic operations}{subsection.22.5.3}% 966
\BOOKMARK [3][-]{subsubsection.22.5.3.8}{22.5.3.8 Modifiers}{subsection.22.5.3}% 967
\BOOKMARK [2][-]{subsection.22.5.4}{22.5.4 No-value state indicator}{section.22.5}% 968
\BOOKMARK [2][-]{subsection.22.5.5}{22.5.5 Class bad\137optional\137access}{section.22.5}% 969
\BOOKMARK [2][-]{subsection.22.5.6}{22.5.6 Relational operators}{section.22.5}% 970
\BOOKMARK [2][-]{subsection.22.5.7}{22.5.7 Comparison with nullopt}{section.22.5}% 971
\BOOKMARK [2][-]{subsection.22.5.8}{22.5.8 Comparison with T}{section.22.5}% 972
\BOOKMARK [2][-]{subsection.22.5.9}{22.5.9 Specialized algorithms}{section.22.5}% 973
\BOOKMARK [2][-]{subsection.22.5.10}{22.5.10 Hash support}{section.22.5}% 974
\BOOKMARK [1][-]{section.22.6}{22.6 Variants}{chapter.22}% 975
\BOOKMARK [2][-]{subsection.22.6.1}{22.6.1 In general}{section.22.6}% 976
\BOOKMARK [2][-]{subsection.22.6.2}{22.6.2 Header <variant> synopsis}{section.22.6}% 977
\BOOKMARK [2][-]{subsection.22.6.3}{22.6.3 Class template variant}{section.22.6}% 978
\BOOKMARK [3][-]{subsubsection.22.6.3.1}{22.6.3.1 General}{subsection.22.6.3}% 979
\BOOKMARK [3][-]{subsubsection.22.6.3.2}{22.6.3.2 Constructors}{subsection.22.6.3}% 980
\BOOKMARK [3][-]{subsubsection.22.6.3.3}{22.6.3.3 Destructor}{subsection.22.6.3}% 981
\BOOKMARK [3][-]{subsubsection.22.6.3.4}{22.6.3.4 Assignment}{subsection.22.6.3}% 982
\BOOKMARK [3][-]{subsubsection.22.6.3.5}{22.6.3.5 Modifiers}{subsection.22.6.3}% 983
\BOOKMARK [3][-]{subsubsection.22.6.3.6}{22.6.3.6 Value status}{subsection.22.6.3}% 984
\BOOKMARK [3][-]{subsubsection.22.6.3.7}{22.6.3.7 Swap}{subsection.22.6.3}% 985
\BOOKMARK [2][-]{subsection.22.6.4}{22.6.4 variant helper classes}{section.22.6}% 986
\BOOKMARK [2][-]{subsection.22.6.5}{22.6.5 Value access}{section.22.6}% 987
\BOOKMARK [2][-]{subsection.22.6.6}{22.6.6 Relational operators}{section.22.6}% 988
\BOOKMARK [2][-]{subsection.22.6.7}{22.6.7 Visitation}{section.22.6}% 989
\BOOKMARK [2][-]{subsection.22.6.8}{22.6.8 Class monostate}{section.22.6}% 990
\BOOKMARK [2][-]{subsection.22.6.9}{22.6.9 monostate relational operators}{section.22.6}% 991
\BOOKMARK [2][-]{subsection.22.6.10}{22.6.10 Specialized algorithms}{section.22.6}% 992
\BOOKMARK [2][-]{subsection.22.6.11}{22.6.11 Class bad\137variant\137access}{section.22.6}% 993
\BOOKMARK [2][-]{subsection.22.6.12}{22.6.12 Hash support}{section.22.6}% 994
\BOOKMARK [1][-]{section.22.7}{22.7 Storage for any type}{chapter.22}% 995
\BOOKMARK [2][-]{subsection.22.7.1}{22.7.1 General}{section.22.7}% 996
\BOOKMARK [2][-]{subsection.22.7.2}{22.7.2 Header <any> synopsis}{section.22.7}% 997
\BOOKMARK [2][-]{subsection.22.7.3}{22.7.3 Class bad\137any\137cast}{section.22.7}% 998
\BOOKMARK [2][-]{subsection.22.7.4}{22.7.4 Class any}{section.22.7}% 999
\BOOKMARK [3][-]{subsubsection.22.7.4.1}{22.7.4.1 General}{subsection.22.7.4}% 1000
\BOOKMARK [3][-]{subsubsection.22.7.4.2}{22.7.4.2 Construction and destruction}{subsection.22.7.4}% 1001
\BOOKMARK [3][-]{subsubsection.22.7.4.3}{22.7.4.3 Assignment}{subsection.22.7.4}% 1002
\BOOKMARK [3][-]{subsubsection.22.7.4.4}{22.7.4.4 Modifiers}{subsection.22.7.4}% 1003
\BOOKMARK [3][-]{subsubsection.22.7.4.5}{22.7.4.5 Observers}{subsection.22.7.4}% 1004
\BOOKMARK [2][-]{subsection.22.7.5}{22.7.5 Non-member functions}{section.22.7}% 1005
\BOOKMARK [1][-]{section.22.8}{22.8 Expected objects}{chapter.22}% 1006
\BOOKMARK [2][-]{subsection.22.8.1}{22.8.1 In general}{section.22.8}% 1007
\BOOKMARK [2][-]{subsection.22.8.2}{22.8.2 Header <expected> synopsis}{section.22.8}% 1008
\BOOKMARK [2][-]{subsection.22.8.3}{22.8.3 Class template unexpected}{section.22.8}% 1009
\BOOKMARK [3][-]{subsubsection.22.8.3.1}{22.8.3.1 General}{subsection.22.8.3}% 1010
\BOOKMARK [3][-]{subsubsection.22.8.3.2}{22.8.3.2 Constructors}{subsection.22.8.3}% 1011
\BOOKMARK [3][-]{subsubsection.22.8.3.3}{22.8.3.3 Observers}{subsection.22.8.3}% 1012
\BOOKMARK [3][-]{subsubsection.22.8.3.4}{22.8.3.4 Swap}{subsection.22.8.3}% 1013
\BOOKMARK [3][-]{subsubsection.22.8.3.5}{22.8.3.5 Equality operator}{subsection.22.8.3}% 1014
\BOOKMARK [2][-]{subsection.22.8.4}{22.8.4 Class template bad\137expected\137access}{section.22.8}% 1015
\BOOKMARK [2][-]{subsection.22.8.5}{22.8.5 Class template specialization bad\137expected\137access<void>}{section.22.8}% 1016
\BOOKMARK [2][-]{subsection.22.8.6}{22.8.6 Class template expected}{section.22.8}% 1017
\BOOKMARK [3][-]{subsubsection.22.8.6.1}{22.8.6.1 General}{subsection.22.8.6}% 1018
\BOOKMARK [3][-]{subsubsection.22.8.6.2}{22.8.6.2 Constructors}{subsection.22.8.6}% 1019
\BOOKMARK [3][-]{subsubsection.22.8.6.3}{22.8.6.3 Destructor}{subsection.22.8.6}% 1020
\BOOKMARK [3][-]{subsubsection.22.8.6.4}{22.8.6.4 Assignment}{subsection.22.8.6}% 1021
\BOOKMARK [3][-]{subsubsection.22.8.6.5}{22.8.6.5 Swap}{subsection.22.8.6}% 1022
\BOOKMARK [3][-]{subsubsection.22.8.6.6}{22.8.6.6 Observers}{subsection.22.8.6}% 1023
\BOOKMARK [3][-]{subsubsection.22.8.6.7}{22.8.6.7 Equality operators}{subsection.22.8.6}% 1024
\BOOKMARK [2][-]{subsection.22.8.7}{22.8.7 Partial specialization of expected for void types}{section.22.8}% 1025
\BOOKMARK [3][-]{subsubsection.22.8.7.1}{22.8.7.1 General}{subsection.22.8.7}% 1026
\BOOKMARK [3][-]{subsubsection.22.8.7.2}{22.8.7.2 Constructors}{subsection.22.8.7}% 1027
\BOOKMARK [3][-]{subsubsection.22.8.7.3}{22.8.7.3 Destructor}{subsection.22.8.7}% 1028
\BOOKMARK [3][-]{subsubsection.22.8.7.4}{22.8.7.4 Assignment}{subsection.22.8.7}% 1029
\BOOKMARK [3][-]{subsubsection.22.8.7.5}{22.8.7.5 Swap}{subsection.22.8.7}% 1030
\BOOKMARK [3][-]{subsubsection.22.8.7.6}{22.8.7.6 Observers}{subsection.22.8.7}% 1031
\BOOKMARK [3][-]{subsubsection.22.8.7.7}{22.8.7.7 Equality operators}{subsection.22.8.7}% 1032
\BOOKMARK [1][-]{section.22.9}{22.9 Bitsets}{chapter.22}% 1033
\BOOKMARK [2][-]{subsection.22.9.1}{22.9.1 Header <bitset> synopsis}{section.22.9}% 1034
\BOOKMARK [2][-]{subsection.22.9.2}{22.9.2 Class template bitset}{section.22.9}% 1035
\BOOKMARK [3][-]{subsubsection.22.9.2.1}{22.9.2.1 General}{subsection.22.9.2}% 1036
\BOOKMARK [3][-]{subsubsection.22.9.2.2}{22.9.2.2 Constructors}{subsection.22.9.2}% 1037
\BOOKMARK [3][-]{subsubsection.22.9.2.3}{22.9.2.3 Members}{subsection.22.9.2}% 1038
\BOOKMARK [2][-]{subsection.22.9.3}{22.9.3 bitset hash support}{section.22.9}% 1039
\BOOKMARK [2][-]{subsection.22.9.4}{22.9.4 bitset operators}{section.22.9}% 1040
\BOOKMARK [1][-]{section.22.10}{22.10 Function objects}{chapter.22}% 1041
\BOOKMARK [2][-]{subsection.22.10.1}{22.10.1 General}{section.22.10}% 1042
\BOOKMARK [2][-]{subsection.22.10.2}{22.10.2 Header <functional> synopsis}{section.22.10}% 1043
\BOOKMARK [2][-]{subsection.22.10.3}{22.10.3 Definitions}{section.22.10}% 1044
\BOOKMARK [2][-]{subsection.22.10.4}{22.10.4 Requirements}{section.22.10}% 1045
\BOOKMARK [2][-]{subsection.22.10.5}{22.10.5 invoke functions}{section.22.10}% 1046
\BOOKMARK [2][-]{subsection.22.10.6}{22.10.6 Class template reference\137wrapper}{section.22.10}% 1047
\BOOKMARK [3][-]{subsubsection.22.10.6.1}{22.10.6.1 General}{subsection.22.10.6}% 1048
\BOOKMARK [3][-]{subsubsection.22.10.6.2}{22.10.6.2 Constructors}{subsection.22.10.6}% 1049
\BOOKMARK [3][-]{subsubsection.22.10.6.3}{22.10.6.3 Assignment}{subsection.22.10.6}% 1050
\BOOKMARK [3][-]{subsubsection.22.10.6.4}{22.10.6.4 Access}{subsection.22.10.6}% 1051
\BOOKMARK [3][-]{subsubsection.22.10.6.5}{22.10.6.5 Invocation}{subsection.22.10.6}% 1052
\BOOKMARK [3][-]{subsubsection.22.10.6.6}{22.10.6.6 Helper functions}{subsection.22.10.6}% 1053
\BOOKMARK [2][-]{subsection.22.10.7}{22.10.7 Arithmetic operations}{section.22.10}% 1054
\BOOKMARK [3][-]{subsubsection.22.10.7.1}{22.10.7.1 General}{subsection.22.10.7}% 1055
\BOOKMARK [3][-]{subsubsection.22.10.7.2}{22.10.7.2 Class template plus}{subsection.22.10.7}% 1056
\BOOKMARK [3][-]{subsubsection.22.10.7.3}{22.10.7.3 Class template minus}{subsection.22.10.7}% 1057
\BOOKMARK [3][-]{subsubsection.22.10.7.4}{22.10.7.4 Class template multiplies}{subsection.22.10.7}% 1058
\BOOKMARK [3][-]{subsubsection.22.10.7.5}{22.10.7.5 Class template divides}{subsection.22.10.7}% 1059
\BOOKMARK [3][-]{subsubsection.22.10.7.6}{22.10.7.6 Class template modulus}{subsection.22.10.7}% 1060
\BOOKMARK [3][-]{subsubsection.22.10.7.7}{22.10.7.7 Class template negate}{subsection.22.10.7}% 1061
\BOOKMARK [2][-]{subsection.22.10.8}{22.10.8 Comparisons}{section.22.10}% 1062
\BOOKMARK [3][-]{subsubsection.22.10.8.1}{22.10.8.1 General}{subsection.22.10.8}% 1063
\BOOKMARK [3][-]{subsubsection.22.10.8.2}{22.10.8.2 Class template equal\137to}{subsection.22.10.8}% 1064
\BOOKMARK [3][-]{subsubsection.22.10.8.3}{22.10.8.3 Class template not\137equal\137to}{subsection.22.10.8}% 1065
\BOOKMARK [3][-]{subsubsection.22.10.8.4}{22.10.8.4 Class template greater}{subsection.22.10.8}% 1066
\BOOKMARK [3][-]{subsubsection.22.10.8.5}{22.10.8.5 Class template less}{subsection.22.10.8}% 1067
\BOOKMARK [3][-]{subsubsection.22.10.8.6}{22.10.8.6 Class template greater\137equal}{subsection.22.10.8}% 1068
\BOOKMARK [3][-]{subsubsection.22.10.8.7}{22.10.8.7 Class template less\137equal}{subsection.22.10.8}% 1069
\BOOKMARK [3][-]{subsubsection.22.10.8.8}{22.10.8.8 Class compare\137three\137way}{subsection.22.10.8}% 1070
\BOOKMARK [2][-]{subsection.22.10.9}{22.10.9 Concept-constrained comparisons}{section.22.10}% 1071
\BOOKMARK [2][-]{subsection.22.10.10}{22.10.10 Logical operations}{section.22.10}% 1072
\BOOKMARK [3][-]{subsubsection.22.10.10.1}{22.10.10.1 General}{subsection.22.10.10}% 1073
\BOOKMARK [3][-]{subsubsection.22.10.10.2}{22.10.10.2 Class template logical\137and}{subsection.22.10.10}% 1074
\BOOKMARK [3][-]{subsubsection.22.10.10.3}{22.10.10.3 Class template logical\137or}{subsection.22.10.10}% 1075
\BOOKMARK [3][-]{subsubsection.22.10.10.4}{22.10.10.4 Class template logical\137not}{subsection.22.10.10}% 1076
\BOOKMARK [2][-]{subsection.22.10.11}{22.10.11 Bitwise operations}{section.22.10}% 1077
\BOOKMARK [3][-]{subsubsection.22.10.11.1}{22.10.11.1 General}{subsection.22.10.11}% 1078
\BOOKMARK [3][-]{subsubsection.22.10.11.2}{22.10.11.2 Class template bit\137and}{subsection.22.10.11}% 1079
\BOOKMARK [3][-]{subsubsection.22.10.11.3}{22.10.11.3 Class template bit\137or}{subsection.22.10.11}% 1080
\BOOKMARK [3][-]{subsubsection.22.10.11.4}{22.10.11.4 Class template bit\137xor}{subsection.22.10.11}% 1081
\BOOKMARK [3][-]{subsubsection.22.10.11.5}{22.10.11.5 Class template bit\137not}{subsection.22.10.11}% 1082
\BOOKMARK [2][-]{subsection.22.10.12}{22.10.12 Class identity}{section.22.10}% 1083
\BOOKMARK [2][-]{subsection.22.10.13}{22.10.13 Function template not\137fn}{section.22.10}% 1084
\BOOKMARK [2][-]{subsection.22.10.14}{22.10.14 Function templates bind\137front and bind\137back}{section.22.10}% 1085
\BOOKMARK [2][-]{subsection.22.10.15}{22.10.15 Function object binders}{section.22.10}% 1086
\BOOKMARK [3][-]{subsubsection.22.10.15.1}{22.10.15.1 General}{subsection.22.10.15}% 1087
\BOOKMARK [3][-]{subsubsection.22.10.15.2}{22.10.15.2 Class template is\137bind\137expression}{subsection.22.10.15}% 1088
\BOOKMARK [3][-]{subsubsection.22.10.15.3}{22.10.15.3 Class template is\137placeholder}{subsection.22.10.15}% 1089
\BOOKMARK [3][-]{subsubsection.22.10.15.4}{22.10.15.4 Function template bind}{subsection.22.10.15}% 1090
\BOOKMARK [3][-]{subsubsection.22.10.15.5}{22.10.15.5 Placeholders}{subsection.22.10.15}% 1091
\BOOKMARK [2][-]{subsection.22.10.16}{22.10.16 Function template mem\137fn}{section.22.10}% 1092
\BOOKMARK [2][-]{subsection.22.10.17}{22.10.17 Polymorphic function wrappers}{section.22.10}% 1093
\BOOKMARK [3][-]{subsubsection.22.10.17.1}{22.10.17.1 General}{subsection.22.10.17}% 1094
\BOOKMARK [3][-]{subsubsection.22.10.17.2}{22.10.17.2 Class bad\137function\137call}{subsection.22.10.17}% 1095
\BOOKMARK [3][-]{subsubsection.22.10.17.3}{22.10.17.3 Class template function}{subsection.22.10.17}% 1096
\BOOKMARK [4][-]{paragraph.22.10.17.3.1}{22.10.17.3.1 General}{subsubsection.22.10.17.3}% 1097
\BOOKMARK [4][-]{paragraph.22.10.17.3.2}{22.10.17.3.2 Constructors and destructor}{subsubsection.22.10.17.3}% 1098
\BOOKMARK [4][-]{paragraph.22.10.17.3.3}{22.10.17.3.3 Modifiers}{subsubsection.22.10.17.3}% 1099
\BOOKMARK [4][-]{paragraph.22.10.17.3.4}{22.10.17.3.4 Capacity}{subsubsection.22.10.17.3}% 1100
\BOOKMARK [4][-]{paragraph.22.10.17.3.5}{22.10.17.3.5 Invocation}{subsubsection.22.10.17.3}% 1101
\BOOKMARK [4][-]{paragraph.22.10.17.3.6}{22.10.17.3.6 Target access}{subsubsection.22.10.17.3}% 1102
\BOOKMARK [4][-]{paragraph.22.10.17.3.7}{22.10.17.3.7 Null pointer comparison operator functions}{subsubsection.22.10.17.3}% 1103
\BOOKMARK [4][-]{paragraph.22.10.17.3.8}{22.10.17.3.8 Specialized algorithms}{subsubsection.22.10.17.3}% 1104
\BOOKMARK [3][-]{subsubsection.22.10.17.4}{22.10.17.4 Move only wrapper}{subsection.22.10.17}% 1105
\BOOKMARK [4][-]{paragraph.22.10.17.4.1}{22.10.17.4.1 General}{subsubsection.22.10.17.4}% 1106
\BOOKMARK [4][-]{paragraph.22.10.17.4.2}{22.10.17.4.2 Class template move\137only\137function}{subsubsection.22.10.17.4}% 1107
\BOOKMARK [4][-]{paragraph.22.10.17.4.3}{22.10.17.4.3 Constructors, assignment, and destructor}{subsubsection.22.10.17.4}% 1108
\BOOKMARK [4][-]{paragraph.22.10.17.4.4}{22.10.17.4.4 Invocation}{subsubsection.22.10.17.4}% 1109
\BOOKMARK [4][-]{paragraph.22.10.17.4.5}{22.10.17.4.5 Utility}{subsubsection.22.10.17.4}% 1110
\BOOKMARK [2][-]{subsection.22.10.18}{22.10.18 Searchers}{section.22.10}% 1111
\BOOKMARK [3][-]{subsubsection.22.10.18.1}{22.10.18.1 General}{subsection.22.10.18}% 1112
\BOOKMARK [3][-]{subsubsection.22.10.18.2}{22.10.18.2 Class template default\137searcher}{subsection.22.10.18}% 1113
\BOOKMARK [3][-]{subsubsection.22.10.18.3}{22.10.18.3 Class template boyer\137moore\137searcher}{subsection.22.10.18}% 1114
\BOOKMARK [3][-]{subsubsection.22.10.18.4}{22.10.18.4 Class template boyer\137moore\137horspool\137searcher}{subsection.22.10.18}% 1115
\BOOKMARK [2][-]{subsection.22.10.19}{22.10.19 Class template hash}{section.22.10}% 1116
\BOOKMARK [1][-]{section.22.11}{22.11 Class type\137index}{chapter.22}% 1117
\BOOKMARK [2][-]{subsection.22.11.1}{22.11.1 Header <typeindex> synopsis}{section.22.11}% 1118
\BOOKMARK [2][-]{subsection.22.11.2}{22.11.2 type\137index overview}{section.22.11}% 1119
\BOOKMARK [2][-]{subsection.22.11.3}{22.11.3 type\137index members}{section.22.11}% 1120
\BOOKMARK [2][-]{subsection.22.11.4}{22.11.4 Hash support}{section.22.11}% 1121
\BOOKMARK [1][-]{section.22.12}{22.12 Execution policies}{chapter.22}% 1122
\BOOKMARK [2][-]{subsection.22.12.1}{22.12.1 In general}{section.22.12}% 1123
\BOOKMARK [2][-]{subsection.22.12.2}{22.12.2 Header <execution> synopsis}{section.22.12}% 1124
\BOOKMARK [2][-]{subsection.22.12.3}{22.12.3 Execution policy type trait}{section.22.12}% 1125
\BOOKMARK [2][-]{subsection.22.12.4}{22.12.4 Sequenced execution policy}{section.22.12}% 1126
\BOOKMARK [2][-]{subsection.22.12.5}{22.12.5 Parallel execution policy}{section.22.12}% 1127
\BOOKMARK [2][-]{subsection.22.12.6}{22.12.6 Parallel and unsequenced execution policy}{section.22.12}% 1128
\BOOKMARK [2][-]{subsection.22.12.7}{22.12.7 Unsequenced execution policy}{section.22.12}% 1129
\BOOKMARK [2][-]{subsection.22.12.8}{22.12.8 Execution policy objects}{section.22.12}% 1130
\BOOKMARK [1][-]{section.22.13}{22.13 Primitive numeric conversions}{chapter.22}% 1131
\BOOKMARK [2][-]{subsection.22.13.1}{22.13.1 Header <charconv> synopsis}{section.22.13}% 1132
\BOOKMARK [2][-]{subsection.22.13.2}{22.13.2 Primitive numeric output conversion}{section.22.13}% 1133
\BOOKMARK [2][-]{subsection.22.13.3}{22.13.3 Primitive numeric input conversion}{section.22.13}% 1134
\BOOKMARK [1][-]{section.22.14}{22.14 Formatting}{chapter.22}% 1135
\BOOKMARK [2][-]{subsection.22.14.1}{22.14.1 Header <format> synopsis}{section.22.14}% 1136
\BOOKMARK [2][-]{subsection.22.14.2}{22.14.2 Format string}{section.22.14}% 1137
\BOOKMARK [3][-]{subsubsection.22.14.2.1}{22.14.2.1 In general}{subsection.22.14.2}% 1138
\BOOKMARK [3][-]{subsubsection.22.14.2.2}{22.14.2.2 Standard format specifiers}{subsection.22.14.2}% 1139
\BOOKMARK [2][-]{subsection.22.14.3}{22.14.3 Error reporting}{section.22.14}% 1140
\BOOKMARK [2][-]{subsection.22.14.4}{22.14.4 Class template basic-format-string}{section.22.14}% 1141
\BOOKMARK [2][-]{subsection.22.14.5}{22.14.5 Formatting functions}{section.22.14}% 1142
\BOOKMARK [2][-]{subsection.22.14.6}{22.14.6 Formatter}{section.22.14}% 1143
\BOOKMARK [3][-]{subsubsection.22.14.6.1}{22.14.6.1 Formatter requirements}{subsection.22.14.6}% 1144
\BOOKMARK [3][-]{subsubsection.22.14.6.2}{22.14.6.2 Formatter specializations}{subsection.22.14.6}% 1145
\BOOKMARK [3][-]{subsubsection.22.14.6.3}{22.14.6.3 Class template basic\137format\137parse\137context}{subsection.22.14.6}% 1146
\BOOKMARK [3][-]{subsubsection.22.14.6.4}{22.14.6.4 Class template basic\137format\137context}{subsection.22.14.6}% 1147
\BOOKMARK [2][-]{subsection.22.14.7}{22.14.7 Arguments}{section.22.14}% 1148
\BOOKMARK [3][-]{subsubsection.22.14.7.1}{22.14.7.1 Class template basic\137format\137arg}{subsection.22.14.7}% 1149
\BOOKMARK [3][-]{subsubsection.22.14.7.2}{22.14.7.2 Class template format-arg-store}{subsection.22.14.7}% 1150
\BOOKMARK [3][-]{subsubsection.22.14.7.3}{22.14.7.3 Class template basic\137format\137args}{subsection.22.14.7}% 1151
\BOOKMARK [2][-]{subsection.22.14.8}{22.14.8 Class format\137error}{section.22.14}% 1152
\BOOKMARK [1][-]{section.22.15}{22.15 Bit manipulation}{chapter.22}% 1153
\BOOKMARK [2][-]{subsection.22.15.1}{22.15.1 General}{section.22.15}% 1154
\BOOKMARK [2][-]{subsection.22.15.2}{22.15.2 Header <bit> synopsis}{section.22.15}% 1155
\BOOKMARK [2][-]{subsection.22.15.3}{22.15.3 Function template bit\137cast}{section.22.15}% 1156
\BOOKMARK [2][-]{subsection.22.15.4}{22.15.4 byteswap}{section.22.15}% 1157
\BOOKMARK [2][-]{subsection.22.15.5}{22.15.5 Integral powers of 2}{section.22.15}% 1158
\BOOKMARK [2][-]{subsection.22.15.6}{22.15.6 Rotating}{section.22.15}% 1159
\BOOKMARK [2][-]{subsection.22.15.7}{22.15.7 Counting}{section.22.15}% 1160
\BOOKMARK [2][-]{subsection.22.15.8}{22.15.8 Endian}{section.22.15}% 1161
\BOOKMARK [0][-]{chapter.23}{23 Strings library}{}% 1162
\BOOKMARK [1][-]{section.23.1}{23.1 General}{chapter.23}% 1163
\BOOKMARK [1][-]{section.23.2}{23.2 Character traits}{chapter.23}% 1164
\BOOKMARK [2][-]{subsection.23.2.1}{23.2.1 General}{section.23.2}% 1165
\BOOKMARK [2][-]{subsection.23.2.2}{23.2.2 Character traits requirements}{section.23.2}% 1166
\BOOKMARK [2][-]{subsection.23.2.3}{23.2.3 Traits typedefs}{section.23.2}% 1167
\BOOKMARK [2][-]{subsection.23.2.4}{23.2.4 char\137traits specializations}{section.23.2}% 1168
\BOOKMARK [3][-]{subsubsection.23.2.4.1}{23.2.4.1 General}{subsection.23.2.4}% 1169
\BOOKMARK [3][-]{subsubsection.23.2.4.2}{23.2.4.2 struct char\137traits<char>}{subsection.23.2.4}% 1170
\BOOKMARK [3][-]{subsubsection.23.2.4.3}{23.2.4.3 struct char\137traits<char8\137t>}{subsection.23.2.4}% 1171
\BOOKMARK [3][-]{subsubsection.23.2.4.4}{23.2.4.4 struct char\137traits<char16\137t>}{subsection.23.2.4}% 1172
\BOOKMARK [3][-]{subsubsection.23.2.4.5}{23.2.4.5 struct char\137traits<char32\137t>}{subsection.23.2.4}% 1173
\BOOKMARK [3][-]{subsubsection.23.2.4.6}{23.2.4.6 struct char\137traits<wchar\137t>}{subsection.23.2.4}% 1174
\BOOKMARK [1][-]{section.23.3}{23.3 String view classes}{chapter.23}% 1175
\BOOKMARK [2][-]{subsection.23.3.1}{23.3.1 General}{section.23.3}% 1176
\BOOKMARK [2][-]{subsection.23.3.2}{23.3.2 Header <string\137view> synopsis}{section.23.3}% 1177
\BOOKMARK [2][-]{subsection.23.3.3}{23.3.3 Class template basic\137string\137view}{section.23.3}% 1178
\BOOKMARK [3][-]{subsubsection.23.3.3.1}{23.3.3.1 General}{subsection.23.3.3}% 1179
\BOOKMARK [3][-]{subsubsection.23.3.3.2}{23.3.3.2 Construction and assignment}{subsection.23.3.3}% 1180
\BOOKMARK [3][-]{subsubsection.23.3.3.3}{23.3.3.3 Deduction guides}{subsection.23.3.3}% 1181
\BOOKMARK [3][-]{subsubsection.23.3.3.4}{23.3.3.4 Iterator support}{subsection.23.3.3}% 1182
\BOOKMARK [3][-]{subsubsection.23.3.3.5}{23.3.3.5 Capacity}{subsection.23.3.3}% 1183
\BOOKMARK [3][-]{subsubsection.23.3.3.6}{23.3.3.6 Element access}{subsection.23.3.3}% 1184
\BOOKMARK [3][-]{subsubsection.23.3.3.7}{23.3.3.7 Modifiers}{subsection.23.3.3}% 1185
\BOOKMARK [3][-]{subsubsection.23.3.3.8}{23.3.3.8 String operations}{subsection.23.3.3}% 1186
\BOOKMARK [3][-]{subsubsection.23.3.3.9}{23.3.3.9 Searching}{subsection.23.3.3}% 1187
\BOOKMARK [2][-]{subsection.23.3.4}{23.3.4 Non-member comparison functions}{section.23.3}% 1188
\BOOKMARK [2][-]{subsection.23.3.5}{23.3.5 Inserters and extractors}{section.23.3}% 1189
\BOOKMARK [2][-]{subsection.23.3.6}{23.3.6 Hash support}{section.23.3}% 1190
\BOOKMARK [2][-]{subsection.23.3.7}{23.3.7 Suffix for basic\137string\137view literals}{section.23.3}% 1191
\BOOKMARK [1][-]{section.23.4}{23.4 String classes}{chapter.23}% 1192
\BOOKMARK [2][-]{subsection.23.4.1}{23.4.1 General}{section.23.4}% 1193
\BOOKMARK [2][-]{subsection.23.4.2}{23.4.2 Header <string> synopsis}{section.23.4}% 1194
\BOOKMARK [2][-]{subsection.23.4.3}{23.4.3 Class template basic\137string}{section.23.4}% 1195
\BOOKMARK [3][-]{subsubsection.23.4.3.1}{23.4.3.1 General}{subsection.23.4.3}% 1196
\BOOKMARK [3][-]{subsubsection.23.4.3.2}{23.4.3.2 General requirements}{subsection.23.4.3}% 1197
\BOOKMARK [3][-]{subsubsection.23.4.3.3}{23.4.3.3 Constructors and assignment operators}{subsection.23.4.3}% 1198
\BOOKMARK [3][-]{subsubsection.23.4.3.4}{23.4.3.4 Iterator support}{subsection.23.4.3}% 1199
\BOOKMARK [3][-]{subsubsection.23.4.3.5}{23.4.3.5 Capacity}{subsection.23.4.3}% 1200
\BOOKMARK [3][-]{subsubsection.23.4.3.6}{23.4.3.6 Element access}{subsection.23.4.3}% 1201
\BOOKMARK [3][-]{subsubsection.23.4.3.7}{23.4.3.7 Modifiers}{subsection.23.4.3}% 1202
\BOOKMARK [4][-]{paragraph.23.4.3.7.1}{23.4.3.7.1 basic\137string::operator+=}{subsubsection.23.4.3.7}% 1203
\BOOKMARK [4][-]{paragraph.23.4.3.7.2}{23.4.3.7.2 basic\137string::append}{subsubsection.23.4.3.7}% 1204
\BOOKMARK [4][-]{paragraph.23.4.3.7.3}{23.4.3.7.3 basic\137string::assign}{subsubsection.23.4.3.7}% 1205
\BOOKMARK [4][-]{paragraph.23.4.3.7.4}{23.4.3.7.4 basic\137string::insert}{subsubsection.23.4.3.7}% 1206
\BOOKMARK [4][-]{paragraph.23.4.3.7.5}{23.4.3.7.5 basic\137string::erase}{subsubsection.23.4.3.7}% 1207
\BOOKMARK [4][-]{paragraph.23.4.3.7.6}{23.4.3.7.6 basic\137string::replace}{subsubsection.23.4.3.7}% 1208
\BOOKMARK [4][-]{paragraph.23.4.3.7.7}{23.4.3.7.7 basic\137string::copy}{subsubsection.23.4.3.7}% 1209
\BOOKMARK [4][-]{paragraph.23.4.3.7.8}{23.4.3.7.8 basic\137string::swap}{subsubsection.23.4.3.7}% 1210
\BOOKMARK [3][-]{subsubsection.23.4.3.8}{23.4.3.8 String operations}{subsection.23.4.3}% 1211
\BOOKMARK [4][-]{paragraph.23.4.3.8.1}{23.4.3.8.1 Accessors}{subsubsection.23.4.3.8}% 1212
\BOOKMARK [4][-]{paragraph.23.4.3.8.2}{23.4.3.8.2 Searching}{subsubsection.23.4.3.8}% 1213
\BOOKMARK [4][-]{paragraph.23.4.3.8.3}{23.4.3.8.3 basic\137string::substr}{subsubsection.23.4.3.8}% 1214
\BOOKMARK [4][-]{paragraph.23.4.3.8.4}{23.4.3.8.4 basic\137string::compare}{subsubsection.23.4.3.8}% 1215
\BOOKMARK [4][-]{paragraph.23.4.3.8.5}{23.4.3.8.5 basic\137string::starts\137with}{subsubsection.23.4.3.8}% 1216
\BOOKMARK [4][-]{paragraph.23.4.3.8.6}{23.4.3.8.6 basic\137string::ends\137with}{subsubsection.23.4.3.8}% 1217
\BOOKMARK [4][-]{paragraph.23.4.3.8.7}{23.4.3.8.7 basic\137string::contains}{subsubsection.23.4.3.8}% 1218
\BOOKMARK [2][-]{subsection.23.4.4}{23.4.4 Non-member functions}{section.23.4}% 1219
\BOOKMARK [3][-]{subsubsection.23.4.4.1}{23.4.4.1 operator+}{subsection.23.4.4}% 1220
\BOOKMARK [3][-]{subsubsection.23.4.4.2}{23.4.4.2 Non-member comparison operator functions}{subsection.23.4.4}% 1221
\BOOKMARK [3][-]{subsubsection.23.4.4.3}{23.4.4.3 swap}{subsection.23.4.4}% 1222
\BOOKMARK [3][-]{subsubsection.23.4.4.4}{23.4.4.4 Inserters and extractors}{subsection.23.4.4}% 1223
\BOOKMARK [3][-]{subsubsection.23.4.4.5}{23.4.4.5 Erasure}{subsection.23.4.4}% 1224
\BOOKMARK [2][-]{subsection.23.4.5}{23.4.5 Numeric conversions}{section.23.4}% 1225
\BOOKMARK [2][-]{subsection.23.4.6}{23.4.6 Hash support}{section.23.4}% 1226
\BOOKMARK [2][-]{subsection.23.4.7}{23.4.7 Suffix for basic\137string literals}{section.23.4}% 1227
\BOOKMARK [1][-]{section.23.5}{23.5 Null-terminated sequence utilities}{chapter.23}% 1228
\BOOKMARK [2][-]{subsection.23.5.1}{23.5.1 Header <cctype> synopsis}{section.23.5}% 1229
\BOOKMARK [2][-]{subsection.23.5.2}{23.5.2 Header <cwctype> synopsis}{section.23.5}% 1230
\BOOKMARK [2][-]{subsection.23.5.3}{23.5.3 Header <cstring> synopsis}{section.23.5}% 1231
\BOOKMARK [2][-]{subsection.23.5.4}{23.5.4 Header <cwchar> synopsis}{section.23.5}% 1232
\BOOKMARK [2][-]{subsection.23.5.5}{23.5.5 Header <cuchar> synopsis}{section.23.5}% 1233
\BOOKMARK [2][-]{subsection.23.5.6}{23.5.6 Multibyte / wide string and character conversion functions}{section.23.5}% 1234
\BOOKMARK [0][-]{chapter.24}{24 Containers library}{}% 1235
\BOOKMARK [1][-]{section.24.1}{24.1 General}{chapter.24}% 1236
\BOOKMARK [1][-]{section.24.2}{24.2 Requirements}{chapter.24}% 1237
\BOOKMARK [2][-]{subsection.24.2.1}{24.2.1 Preamble}{section.24.2}% 1238
\BOOKMARK [2][-]{subsection.24.2.2}{24.2.2 General containers}{section.24.2}% 1239
\BOOKMARK [3][-]{subsubsection.24.2.2.1}{24.2.2.1 General}{subsection.24.2.2}% 1240
\BOOKMARK [3][-]{subsubsection.24.2.2.2}{24.2.2.2 Containers}{subsection.24.2.2}% 1241
\BOOKMARK [3][-]{subsubsection.24.2.2.3}{24.2.2.3 Reversible container requirements}{subsection.24.2.2}% 1242
\BOOKMARK [3][-]{subsubsection.24.2.2.4}{24.2.2.4 Optional container requirements}{subsection.24.2.2}% 1243
\BOOKMARK [3][-]{subsubsection.24.2.2.5}{24.2.2.5 Allocator-aware containers}{subsection.24.2.2}% 1244
\BOOKMARK [2][-]{subsection.24.2.3}{24.2.3 Container data races}{section.24.2}% 1245
\BOOKMARK [2][-]{subsection.24.2.4}{24.2.4 Sequence containers}{section.24.2}% 1246
\BOOKMARK [2][-]{subsection.24.2.5}{24.2.5 Node handles}{section.24.2}% 1247
\BOOKMARK [3][-]{subsubsection.24.2.5.1}{24.2.5.1 Overview}{subsection.24.2.5}% 1248
\BOOKMARK [3][-]{subsubsection.24.2.5.2}{24.2.5.2 Constructors, copy, and assignment}{subsection.24.2.5}% 1249
\BOOKMARK [3][-]{subsubsection.24.2.5.3}{24.2.5.3 Destructor}{subsection.24.2.5}% 1250
\BOOKMARK [3][-]{subsubsection.24.2.5.4}{24.2.5.4 Observers}{subsection.24.2.5}% 1251
\BOOKMARK [3][-]{subsubsection.24.2.5.5}{24.2.5.5 Modifiers}{subsection.24.2.5}% 1252
\BOOKMARK [2][-]{subsection.24.2.6}{24.2.6 Insert return type}{section.24.2}% 1253
\BOOKMARK [2][-]{subsection.24.2.7}{24.2.7 Associative containers}{section.24.2}% 1254
\BOOKMARK [3][-]{subsubsection.24.2.7.1}{24.2.7.1 General}{subsection.24.2.7}% 1255
\BOOKMARK [3][-]{subsubsection.24.2.7.2}{24.2.7.2 Exception safety guarantees}{subsection.24.2.7}% 1256
\BOOKMARK [2][-]{subsection.24.2.8}{24.2.8 Unordered associative containers}{section.24.2}% 1257
\BOOKMARK [3][-]{subsubsection.24.2.8.1}{24.2.8.1 General}{subsection.24.2.8}% 1258
\BOOKMARK [3][-]{subsubsection.24.2.8.2}{24.2.8.2 Exception safety guarantees}{subsection.24.2.8}% 1259
\BOOKMARK [1][-]{section.24.3}{24.3 Sequence containers}{chapter.24}% 1260
\BOOKMARK [2][-]{subsection.24.3.1}{24.3.1 In general}{section.24.3}% 1261
\BOOKMARK [2][-]{subsection.24.3.2}{24.3.2 Header <array> synopsis}{section.24.3}% 1262
\BOOKMARK [2][-]{subsection.24.3.3}{24.3.3 Header <deque> synopsis}{section.24.3}% 1263
\BOOKMARK [2][-]{subsection.24.3.4}{24.3.4 Header <forward\137list> synopsis}{section.24.3}% 1264
\BOOKMARK [2][-]{subsection.24.3.5}{24.3.5 Header <list> synopsis}{section.24.3}% 1265
\BOOKMARK [2][-]{subsection.24.3.6}{24.3.6 Header <vector> synopsis}{section.24.3}% 1266
\BOOKMARK [2][-]{subsection.24.3.7}{24.3.7 Class template array}{section.24.3}% 1267
\BOOKMARK [3][-]{subsubsection.24.3.7.1}{24.3.7.1 Overview}{subsection.24.3.7}% 1268
\BOOKMARK [3][-]{subsubsection.24.3.7.2}{24.3.7.2 Constructors, copy, and assignment}{subsection.24.3.7}% 1269
\BOOKMARK [3][-]{subsubsection.24.3.7.3}{24.3.7.3 Member functions}{subsection.24.3.7}% 1270
\BOOKMARK [3][-]{subsubsection.24.3.7.4}{24.3.7.4 Specialized algorithms}{subsection.24.3.7}% 1271
\BOOKMARK [3][-]{subsubsection.24.3.7.5}{24.3.7.5 Zero-sized arrays}{subsection.24.3.7}% 1272
\BOOKMARK [3][-]{subsubsection.24.3.7.6}{24.3.7.6 Array creation functions}{subsection.24.3.7}% 1273
\BOOKMARK [3][-]{subsubsection.24.3.7.7}{24.3.7.7 Tuple interface}{subsection.24.3.7}% 1274
\BOOKMARK [2][-]{subsection.24.3.8}{24.3.8 Class template deque}{section.24.3}% 1275
\BOOKMARK [3][-]{subsubsection.24.3.8.1}{24.3.8.1 Overview}{subsection.24.3.8}% 1276
\BOOKMARK [3][-]{subsubsection.24.3.8.2}{24.3.8.2 Constructors, copy, and assignment}{subsection.24.3.8}% 1277
\BOOKMARK [3][-]{subsubsection.24.3.8.3}{24.3.8.3 Capacity}{subsection.24.3.8}% 1278
\BOOKMARK [3][-]{subsubsection.24.3.8.4}{24.3.8.4 Modifiers}{subsection.24.3.8}% 1279
\BOOKMARK [3][-]{subsubsection.24.3.8.5}{24.3.8.5 Erasure}{subsection.24.3.8}% 1280
\BOOKMARK [2][-]{subsection.24.3.9}{24.3.9 Class template forward\137list}{section.24.3}% 1281
\BOOKMARK [3][-]{subsubsection.24.3.9.1}{24.3.9.1 Overview}{subsection.24.3.9}% 1282
\BOOKMARK [3][-]{subsubsection.24.3.9.2}{24.3.9.2 Constructors, copy, and assignment}{subsection.24.3.9}% 1283
\BOOKMARK [3][-]{subsubsection.24.3.9.3}{24.3.9.3 Iterators}{subsection.24.3.9}% 1284
\BOOKMARK [3][-]{subsubsection.24.3.9.4}{24.3.9.4 Element access}{subsection.24.3.9}% 1285
\BOOKMARK [3][-]{subsubsection.24.3.9.5}{24.3.9.5 Modifiers}{subsection.24.3.9}% 1286
\BOOKMARK [3][-]{subsubsection.24.3.9.6}{24.3.9.6 Operations}{subsection.24.3.9}% 1287
\BOOKMARK [3][-]{subsubsection.24.3.9.7}{24.3.9.7 Erasure}{subsection.24.3.9}% 1288
\BOOKMARK [2][-]{subsection.24.3.10}{24.3.10 Class template list}{section.24.3}% 1289
\BOOKMARK [3][-]{subsubsection.24.3.10.1}{24.3.10.1 Overview}{subsection.24.3.10}% 1290
\BOOKMARK [3][-]{subsubsection.24.3.10.2}{24.3.10.2 Constructors, copy, and assignment}{subsection.24.3.10}% 1291
\BOOKMARK [3][-]{subsubsection.24.3.10.3}{24.3.10.3 Capacity}{subsection.24.3.10}% 1292
\BOOKMARK [3][-]{subsubsection.24.3.10.4}{24.3.10.4 Modifiers}{subsection.24.3.10}% 1293
\BOOKMARK [3][-]{subsubsection.24.3.10.5}{24.3.10.5 Operations}{subsection.24.3.10}% 1294
\BOOKMARK [3][-]{subsubsection.24.3.10.6}{24.3.10.6 Erasure}{subsection.24.3.10}% 1295
\BOOKMARK [2][-]{subsection.24.3.11}{24.3.11 Class template vector}{section.24.3}% 1296
\BOOKMARK [3][-]{subsubsection.24.3.11.1}{24.3.11.1 Overview}{subsection.24.3.11}% 1297
\BOOKMARK [3][-]{subsubsection.24.3.11.2}{24.3.11.2 Constructors}{subsection.24.3.11}% 1298
\BOOKMARK [3][-]{subsubsection.24.3.11.3}{24.3.11.3 Capacity}{subsection.24.3.11}% 1299
\BOOKMARK [3][-]{subsubsection.24.3.11.4}{24.3.11.4 Data}{subsection.24.3.11}% 1300
\BOOKMARK [3][-]{subsubsection.24.3.11.5}{24.3.11.5 Modifiers}{subsection.24.3.11}% 1301
\BOOKMARK [3][-]{subsubsection.24.3.11.6}{24.3.11.6 Erasure}{subsection.24.3.11}% 1302
\BOOKMARK [2][-]{subsection.24.3.12}{24.3.12 Class vector<bool>}{section.24.3}% 1303
\BOOKMARK [1][-]{section.24.4}{24.4 Associative containers}{chapter.24}% 1304
\BOOKMARK [2][-]{subsection.24.4.1}{24.4.1 In general}{section.24.4}% 1305
\BOOKMARK [2][-]{subsection.24.4.2}{24.4.2 Header <map> synopsis}{section.24.4}% 1306
\BOOKMARK [2][-]{subsection.24.4.3}{24.4.3 Header <set> synopsis}{section.24.4}% 1307
\BOOKMARK [2][-]{subsection.24.4.4}{24.4.4 Class template map}{section.24.4}% 1308
\BOOKMARK [3][-]{subsubsection.24.4.4.1}{24.4.4.1 Overview}{subsection.24.4.4}% 1309
\BOOKMARK [3][-]{subsubsection.24.4.4.2}{24.4.4.2 Constructors, copy, and assignment}{subsection.24.4.4}% 1310
\BOOKMARK [3][-]{subsubsection.24.4.4.3}{24.4.4.3 Element access}{subsection.24.4.4}% 1311
\BOOKMARK [3][-]{subsubsection.24.4.4.4}{24.4.4.4 Modifiers}{subsection.24.4.4}% 1312
\BOOKMARK [3][-]{subsubsection.24.4.4.5}{24.4.4.5 Erasure}{subsection.24.4.4}% 1313
\BOOKMARK [2][-]{subsection.24.4.5}{24.4.5 Class template multimap}{section.24.4}% 1314
\BOOKMARK [3][-]{subsubsection.24.4.5.1}{24.4.5.1 Overview}{subsection.24.4.5}% 1315
\BOOKMARK [3][-]{subsubsection.24.4.5.2}{24.4.5.2 Constructors}{subsection.24.4.5}% 1316
\BOOKMARK [3][-]{subsubsection.24.4.5.3}{24.4.5.3 Modifiers}{subsection.24.4.5}% 1317
\BOOKMARK [3][-]{subsubsection.24.4.5.4}{24.4.5.4 Erasure}{subsection.24.4.5}% 1318
\BOOKMARK [2][-]{subsection.24.4.6}{24.4.6 Class template set}{section.24.4}% 1319
\BOOKMARK [3][-]{subsubsection.24.4.6.1}{24.4.6.1 Overview}{subsection.24.4.6}% 1320
\BOOKMARK [3][-]{subsubsection.24.4.6.2}{24.4.6.2 Constructors, copy, and assignment}{subsection.24.4.6}% 1321
\BOOKMARK [3][-]{subsubsection.24.4.6.3}{24.4.6.3 Erasure}{subsection.24.4.6}% 1322
\BOOKMARK [2][-]{subsection.24.4.7}{24.4.7 Class template multiset}{section.24.4}% 1323
\BOOKMARK [3][-]{subsubsection.24.4.7.1}{24.4.7.1 Overview}{subsection.24.4.7}% 1324
\BOOKMARK [3][-]{subsubsection.24.4.7.2}{24.4.7.2 Constructors}{subsection.24.4.7}% 1325
\BOOKMARK [3][-]{subsubsection.24.4.7.3}{24.4.7.3 Erasure}{subsection.24.4.7}% 1326
\BOOKMARK [1][-]{section.24.5}{24.5 Unordered associative containers}{chapter.24}% 1327
\BOOKMARK [2][-]{subsection.24.5.1}{24.5.1 In general}{section.24.5}% 1328
\BOOKMARK [2][-]{subsection.24.5.2}{24.5.2 Header <unordered\137map> synopsis}{section.24.5}% 1329
\BOOKMARK [2][-]{subsection.24.5.3}{24.5.3 Header <unordered\137set> synopsis}{section.24.5}% 1330
\BOOKMARK [2][-]{subsection.24.5.4}{24.5.4 Class template unordered\137map}{section.24.5}% 1331
\BOOKMARK [3][-]{subsubsection.24.5.4.1}{24.5.4.1 Overview}{subsection.24.5.4}% 1332
\BOOKMARK [3][-]{subsubsection.24.5.4.2}{24.5.4.2 Constructors}{subsection.24.5.4}% 1333
\BOOKMARK [3][-]{subsubsection.24.5.4.3}{24.5.4.3 Element access}{subsection.24.5.4}% 1334
\BOOKMARK [3][-]{subsubsection.24.5.4.4}{24.5.4.4 Modifiers}{subsection.24.5.4}% 1335
\BOOKMARK [3][-]{subsubsection.24.5.4.5}{24.5.4.5 Erasure}{subsection.24.5.4}% 1336
\BOOKMARK [2][-]{subsection.24.5.5}{24.5.5 Class template unordered\137multimap}{section.24.5}% 1337
\BOOKMARK [3][-]{subsubsection.24.5.5.1}{24.5.5.1 Overview}{subsection.24.5.5}% 1338
\BOOKMARK [3][-]{subsubsection.24.5.5.2}{24.5.5.2 Constructors}{subsection.24.5.5}% 1339
\BOOKMARK [3][-]{subsubsection.24.5.5.3}{24.5.5.3 Modifiers}{subsection.24.5.5}% 1340
\BOOKMARK [3][-]{subsubsection.24.5.5.4}{24.5.5.4 Erasure}{subsection.24.5.5}% 1341
\BOOKMARK [2][-]{subsection.24.5.6}{24.5.6 Class template unordered\137set}{section.24.5}% 1342
\BOOKMARK [3][-]{subsubsection.24.5.6.1}{24.5.6.1 Overview}{subsection.24.5.6}% 1343
\BOOKMARK [3][-]{subsubsection.24.5.6.2}{24.5.6.2 Constructors}{subsection.24.5.6}% 1344
\BOOKMARK [3][-]{subsubsection.24.5.6.3}{24.5.6.3 Erasure}{subsection.24.5.6}% 1345
\BOOKMARK [2][-]{subsection.24.5.7}{24.5.7 Class template unordered\137multiset}{section.24.5}% 1346
\BOOKMARK [3][-]{subsubsection.24.5.7.1}{24.5.7.1 Overview}{subsection.24.5.7}% 1347
\BOOKMARK [3][-]{subsubsection.24.5.7.2}{24.5.7.2 Constructors}{subsection.24.5.7}% 1348
\BOOKMARK [3][-]{subsubsection.24.5.7.3}{24.5.7.3 Erasure}{subsection.24.5.7}% 1349
\BOOKMARK [1][-]{section.24.6}{24.6 Container adaptors}{chapter.24}% 1350
\BOOKMARK [2][-]{subsection.24.6.1}{24.6.1 In general}{section.24.6}% 1351
\BOOKMARK [2][-]{subsection.24.6.2}{24.6.2 Header <queue> synopsis}{section.24.6}% 1352
\BOOKMARK [2][-]{subsection.24.6.3}{24.6.3 Header <stack> synopsis}{section.24.6}% 1353
\BOOKMARK [2][-]{subsection.24.6.4}{24.6.4 Class template queue}{section.24.6}% 1354
\BOOKMARK [3][-]{subsubsection.24.6.4.1}{24.6.4.1 Definition}{subsection.24.6.4}% 1355
\BOOKMARK [3][-]{subsubsection.24.6.4.2}{24.6.4.2 Constructors}{subsection.24.6.4}% 1356
\BOOKMARK [3][-]{subsubsection.24.6.4.3}{24.6.4.3 Constructors with allocators}{subsection.24.6.4}% 1357
\BOOKMARK [3][-]{subsubsection.24.6.4.4}{24.6.4.4 Modifiers}{subsection.24.6.4}% 1358
\BOOKMARK [3][-]{subsubsection.24.6.4.5}{24.6.4.5 Operators}{subsection.24.6.4}% 1359
\BOOKMARK [3][-]{subsubsection.24.6.4.6}{24.6.4.6 Specialized algorithms}{subsection.24.6.4}% 1360
\BOOKMARK [2][-]{subsection.24.6.5}{24.6.5 Class template priority\137queue}{section.24.6}% 1361
\BOOKMARK [3][-]{subsubsection.24.6.5.1}{24.6.5.1 Overview}{subsection.24.6.5}% 1362
\BOOKMARK [3][-]{subsubsection.24.6.5.2}{24.6.5.2 Constructors}{subsection.24.6.5}% 1363
\BOOKMARK [3][-]{subsubsection.24.6.5.3}{24.6.5.3 Constructors with allocators}{subsection.24.6.5}% 1364
\BOOKMARK [3][-]{subsubsection.24.6.5.4}{24.6.5.4 Members}{subsection.24.6.5}% 1365
\BOOKMARK [3][-]{subsubsection.24.6.5.5}{24.6.5.5 Specialized algorithms}{subsection.24.6.5}% 1366
\BOOKMARK [2][-]{subsection.24.6.6}{24.6.6 Class template stack}{section.24.6}% 1367
\BOOKMARK [3][-]{subsubsection.24.6.6.1}{24.6.6.1 General}{subsection.24.6.6}% 1368
\BOOKMARK [3][-]{subsubsection.24.6.6.2}{24.6.6.2 Definition}{subsection.24.6.6}% 1369
\BOOKMARK [3][-]{subsubsection.24.6.6.3}{24.6.6.3 Constructors}{subsection.24.6.6}% 1370
\BOOKMARK [3][-]{subsubsection.24.6.6.4}{24.6.6.4 Constructors with allocators}{subsection.24.6.6}% 1371
\BOOKMARK [3][-]{subsubsection.24.6.6.5}{24.6.6.5 Modifiers}{subsection.24.6.6}% 1372
\BOOKMARK [3][-]{subsubsection.24.6.6.6}{24.6.6.6 Operators}{subsection.24.6.6}% 1373
\BOOKMARK [3][-]{subsubsection.24.6.6.7}{24.6.6.7 Specialized algorithms}{subsection.24.6.6}% 1374
\BOOKMARK [1][-]{section.24.7}{24.7 Views}{chapter.24}% 1375
\BOOKMARK [2][-]{subsection.24.7.1}{24.7.1 General}{section.24.7}% 1376
\BOOKMARK [2][-]{subsection.24.7.2}{24.7.2 Header <span> synopsis}{section.24.7}% 1377
\BOOKMARK [2][-]{subsection.24.7.3}{24.7.3 Class template span}{section.24.7}% 1378
\BOOKMARK [3][-]{subsubsection.24.7.3.1}{24.7.3.1 Overview}{subsection.24.7.3}% 1379
\BOOKMARK [3][-]{subsubsection.24.7.3.2}{24.7.3.2 Constructors, copy, and assignment}{subsection.24.7.3}% 1380
\BOOKMARK [3][-]{subsubsection.24.7.3.3}{24.7.3.3 Deduction guides}{subsection.24.7.3}% 1381
\BOOKMARK [3][-]{subsubsection.24.7.3.4}{24.7.3.4 Subviews}{subsection.24.7.3}% 1382
\BOOKMARK [3][-]{subsubsection.24.7.3.5}{24.7.3.5 Observers}{subsection.24.7.3}% 1383
\BOOKMARK [3][-]{subsubsection.24.7.3.6}{24.7.3.6 Element access}{subsection.24.7.3}% 1384
\BOOKMARK [3][-]{subsubsection.24.7.3.7}{24.7.3.7 Iterator support}{subsection.24.7.3}% 1385
\BOOKMARK [3][-]{subsubsection.24.7.3.8}{24.7.3.8 Views of object representation}{subsection.24.7.3}% 1386
\BOOKMARK [0][-]{chapter.25}{25 Iterators library}{}% 1387
\BOOKMARK [1][-]{section.25.1}{25.1 General}{chapter.25}% 1388
\BOOKMARK [1][-]{section.25.2}{25.2 Header <iterator> synopsis}{chapter.25}% 1389
\BOOKMARK [1][-]{section.25.3}{25.3 Iterator requirements}{chapter.25}% 1390
\BOOKMARK [2][-]{subsection.25.3.1}{25.3.1 In general}{section.25.3}% 1391
\BOOKMARK [2][-]{subsection.25.3.2}{25.3.2 Associated types}{section.25.3}% 1392
\BOOKMARK [3][-]{subsubsection.25.3.2.1}{25.3.2.1 Incrementable traits}{subsection.25.3.2}% 1393
\BOOKMARK [3][-]{subsubsection.25.3.2.2}{25.3.2.2 Indirectly readable traits}{subsection.25.3.2}% 1394
\BOOKMARK [3][-]{subsubsection.25.3.2.3}{25.3.2.3 Iterator traits}{subsection.25.3.2}% 1395
\BOOKMARK [2][-]{subsection.25.3.3}{25.3.3 Customization point objects}{section.25.3}% 1396
\BOOKMARK [3][-]{subsubsection.25.3.3.1}{25.3.3.1 ranges::iter\137move}{subsection.25.3.3}% 1397
\BOOKMARK [3][-]{subsubsection.25.3.3.2}{25.3.3.2 ranges::iter\137swap}{subsection.25.3.3}% 1398
\BOOKMARK [2][-]{subsection.25.3.4}{25.3.4 Iterator concepts}{section.25.3}% 1399
\BOOKMARK [3][-]{subsubsection.25.3.4.1}{25.3.4.1 General}{subsection.25.3.4}% 1400
\BOOKMARK [3][-]{subsubsection.25.3.4.2}{25.3.4.2 Concept indirectly\137readable}{subsection.25.3.4}% 1401
\BOOKMARK [3][-]{subsubsection.25.3.4.3}{25.3.4.3 Concept indirectly\137writable}{subsection.25.3.4}% 1402
\BOOKMARK [3][-]{subsubsection.25.3.4.4}{25.3.4.4 Concept weakly\137incrementable}{subsection.25.3.4}% 1403
\BOOKMARK [3][-]{subsubsection.25.3.4.5}{25.3.4.5 Concept incrementable}{subsection.25.3.4}% 1404
\BOOKMARK [3][-]{subsubsection.25.3.4.6}{25.3.4.6 Concept input\137or\137output\137iterator}{subsection.25.3.4}% 1405
\BOOKMARK [3][-]{subsubsection.25.3.4.7}{25.3.4.7 Concept sentinel\137for}{subsection.25.3.4}% 1406
\BOOKMARK [3][-]{subsubsection.25.3.4.8}{25.3.4.8 Concept sized\137sentinel\137for}{subsection.25.3.4}% 1407
\BOOKMARK [3][-]{subsubsection.25.3.4.9}{25.3.4.9 Concept input\137iterator}{subsection.25.3.4}% 1408
\BOOKMARK [3][-]{subsubsection.25.3.4.10}{25.3.4.10 Concept output\137iterator}{subsection.25.3.4}% 1409
\BOOKMARK [3][-]{subsubsection.25.3.4.11}{25.3.4.11 Concept forward\137iterator}{subsection.25.3.4}% 1410
\BOOKMARK [3][-]{subsubsection.25.3.4.12}{25.3.4.12 Concept bidirectional\137iterator}{subsection.25.3.4}% 1411
\BOOKMARK [3][-]{subsubsection.25.3.4.13}{25.3.4.13 Concept random\137access\137iterator}{subsection.25.3.4}% 1412
\BOOKMARK [3][-]{subsubsection.25.3.4.14}{25.3.4.14 Concept contiguous\137iterator}{subsection.25.3.4}% 1413
\BOOKMARK [2][-]{subsection.25.3.5}{25.3.5 C++17 iterator requirements}{section.25.3}% 1414
\BOOKMARK [3][-]{subsubsection.25.3.5.1}{25.3.5.1 General}{subsection.25.3.5}% 1415
\BOOKMARK [3][-]{subsubsection.25.3.5.2}{25.3.5.2 Cpp17Iterator}{subsection.25.3.5}% 1416
\BOOKMARK [3][-]{subsubsection.25.3.5.3}{25.3.5.3 Input iterators}{subsection.25.3.5}% 1417
\BOOKMARK [3][-]{subsubsection.25.3.5.4}{25.3.5.4 Output iterators}{subsection.25.3.5}% 1418
\BOOKMARK [3][-]{subsubsection.25.3.5.5}{25.3.5.5 Forward iterators}{subsection.25.3.5}% 1419
\BOOKMARK [3][-]{subsubsection.25.3.5.6}{25.3.5.6 Bidirectional iterators}{subsection.25.3.5}% 1420
\BOOKMARK [3][-]{subsubsection.25.3.5.7}{25.3.5.7 Random access iterators}{subsection.25.3.5}% 1421
\BOOKMARK [2][-]{subsection.25.3.6}{25.3.6 Indirect callable requirements}{section.25.3}% 1422
\BOOKMARK [3][-]{subsubsection.25.3.6.1}{25.3.6.1 General}{subsection.25.3.6}% 1423
\BOOKMARK [3][-]{subsubsection.25.3.6.2}{25.3.6.2 Indirect callables}{subsection.25.3.6}% 1424
\BOOKMARK [3][-]{subsubsection.25.3.6.3}{25.3.6.3 Class template projected}{subsection.25.3.6}% 1425
\BOOKMARK [2][-]{subsection.25.3.7}{25.3.7 Common algorithm requirements}{section.25.3}% 1426
\BOOKMARK [3][-]{subsubsection.25.3.7.1}{25.3.7.1 General}{subsection.25.3.7}% 1427
\BOOKMARK [3][-]{subsubsection.25.3.7.2}{25.3.7.2 Concept indirectly\137movable}{subsection.25.3.7}% 1428
\BOOKMARK [3][-]{subsubsection.25.3.7.3}{25.3.7.3 Concept indirectly\137copyable}{subsection.25.3.7}% 1429
\BOOKMARK [3][-]{subsubsection.25.3.7.4}{25.3.7.4 Concept indirectly\137swappable}{subsection.25.3.7}% 1430
\BOOKMARK [3][-]{subsubsection.25.3.7.5}{25.3.7.5 Concept indirectly\137comparable}{subsection.25.3.7}% 1431
\BOOKMARK [3][-]{subsubsection.25.3.7.6}{25.3.7.6 Concept permutable}{subsection.25.3.7}% 1432
\BOOKMARK [3][-]{subsubsection.25.3.7.7}{25.3.7.7 Concept mergeable}{subsection.25.3.7}% 1433
\BOOKMARK [3][-]{subsubsection.25.3.7.8}{25.3.7.8 Concept sortable}{subsection.25.3.7}% 1434
\BOOKMARK [1][-]{section.25.4}{25.4 Iterator primitives}{chapter.25}% 1435
\BOOKMARK [2][-]{subsection.25.4.1}{25.4.1 General}{section.25.4}% 1436
\BOOKMARK [2][-]{subsection.25.4.2}{25.4.2 Standard iterator tags}{section.25.4}% 1437
\BOOKMARK [2][-]{subsection.25.4.3}{25.4.3 Iterator operations}{section.25.4}% 1438
\BOOKMARK [2][-]{subsection.25.4.4}{25.4.4 Range iterator operations}{section.25.4}% 1439
\BOOKMARK [3][-]{subsubsection.25.4.4.1}{25.4.4.1 General}{subsection.25.4.4}% 1440
\BOOKMARK [3][-]{subsubsection.25.4.4.2}{25.4.4.2 ranges::advance}{subsection.25.4.4}% 1441
\BOOKMARK [3][-]{subsubsection.25.4.4.3}{25.4.4.3 ranges::distance}{subsection.25.4.4}% 1442
\BOOKMARK [3][-]{subsubsection.25.4.4.4}{25.4.4.4 ranges::next}{subsection.25.4.4}% 1443
\BOOKMARK [3][-]{subsubsection.25.4.4.5}{25.4.4.5 ranges::prev}{subsection.25.4.4}% 1444
\BOOKMARK [1][-]{section.25.5}{25.5 Iterator adaptors}{chapter.25}% 1445
\BOOKMARK [2][-]{subsection.25.5.1}{25.5.1 Reverse iterators}{section.25.5}% 1446
\BOOKMARK [3][-]{subsubsection.25.5.1.1}{25.5.1.1 General}{subsection.25.5.1}% 1447
\BOOKMARK [3][-]{subsubsection.25.5.1.2}{25.5.1.2 Class template reverse\137iterator}{subsection.25.5.1}% 1448
\BOOKMARK [3][-]{subsubsection.25.5.1.3}{25.5.1.3 Requirements}{subsection.25.5.1}% 1449
\BOOKMARK [3][-]{subsubsection.25.5.1.4}{25.5.1.4 Construction and assignment}{subsection.25.5.1}% 1450
\BOOKMARK [3][-]{subsubsection.25.5.1.5}{25.5.1.5 Conversion}{subsection.25.5.1}% 1451
\BOOKMARK [3][-]{subsubsection.25.5.1.6}{25.5.1.6 Element access}{subsection.25.5.1}% 1452
\BOOKMARK [3][-]{subsubsection.25.5.1.7}{25.5.1.7 Navigation}{subsection.25.5.1}% 1453
\BOOKMARK [3][-]{subsubsection.25.5.1.8}{25.5.1.8 Comparisons}{subsection.25.5.1}% 1454
\BOOKMARK [3][-]{subsubsection.25.5.1.9}{25.5.1.9 Non-member functions}{subsection.25.5.1}% 1455
\BOOKMARK [2][-]{subsection.25.5.2}{25.5.2 Insert iterators}{section.25.5}% 1456
\BOOKMARK [3][-]{subsubsection.25.5.2.1}{25.5.2.1 General}{subsection.25.5.2}% 1457
\BOOKMARK [3][-]{subsubsection.25.5.2.2}{25.5.2.2 Class template back\137insert\137iterator}{subsection.25.5.2}% 1458
\BOOKMARK [4][-]{paragraph.25.5.2.2.1}{25.5.2.2.1 Operations}{subsubsection.25.5.2.2}% 1459
\BOOKMARK [4][-]{paragraph.25.5.2.2.2}{25.5.2.2.2 \040back\137inserter}{subsubsection.25.5.2.2}% 1460
\BOOKMARK [3][-]{subsubsection.25.5.2.3}{25.5.2.3 Class template front\137insert\137iterator}{subsection.25.5.2}% 1461
\BOOKMARK [4][-]{paragraph.25.5.2.3.1}{25.5.2.3.1 Operations}{subsubsection.25.5.2.3}% 1462
\BOOKMARK [4][-]{paragraph.25.5.2.3.2}{25.5.2.3.2 front\137inserter}{subsubsection.25.5.2.3}% 1463
\BOOKMARK [3][-]{subsubsection.25.5.2.4}{25.5.2.4 Class template insert\137iterator}{subsection.25.5.2}% 1464
\BOOKMARK [4][-]{paragraph.25.5.2.4.1}{25.5.2.4.1 Operations}{subsubsection.25.5.2.4}% 1465
\BOOKMARK [4][-]{paragraph.25.5.2.4.2}{25.5.2.4.2 inserter}{subsubsection.25.5.2.4}% 1466
\BOOKMARK [2][-]{subsection.25.5.3}{25.5.3 Move iterators and sentinels}{section.25.5}% 1467
\BOOKMARK [3][-]{subsubsection.25.5.3.1}{25.5.3.1 General}{subsection.25.5.3}% 1468
\BOOKMARK [3][-]{subsubsection.25.5.3.2}{25.5.3.2 Class template move\137iterator}{subsection.25.5.3}% 1469
\BOOKMARK [3][-]{subsubsection.25.5.3.3}{25.5.3.3 Requirements}{subsection.25.5.3}% 1470
\BOOKMARK [3][-]{subsubsection.25.5.3.4}{25.5.3.4 Construction and assignment}{subsection.25.5.3}% 1471
\BOOKMARK [3][-]{subsubsection.25.5.3.5}{25.5.3.5 Conversion}{subsection.25.5.3}% 1472
\BOOKMARK [3][-]{subsubsection.25.5.3.6}{25.5.3.6 Element access}{subsection.25.5.3}% 1473
\BOOKMARK [3][-]{subsubsection.25.5.3.7}{25.5.3.7 Navigation}{subsection.25.5.3}% 1474
\BOOKMARK [3][-]{subsubsection.25.5.3.8}{25.5.3.8 Comparisons}{subsection.25.5.3}% 1475
\BOOKMARK [3][-]{subsubsection.25.5.3.9}{25.5.3.9 Non-member functions}{subsection.25.5.3}% 1476
\BOOKMARK [3][-]{subsubsection.25.5.3.10}{25.5.3.10 Class template move\137sentinel}{subsection.25.5.3}% 1477
\BOOKMARK [3][-]{subsubsection.25.5.3.11}{25.5.3.11 Operations}{subsection.25.5.3}% 1478
\BOOKMARK [2][-]{subsection.25.5.4}{25.5.4 Common iterators}{section.25.5}% 1479
\BOOKMARK [3][-]{subsubsection.25.5.4.1}{25.5.4.1 Class template common\137iterator}{subsection.25.5.4}% 1480
\BOOKMARK [3][-]{subsubsection.25.5.4.2}{25.5.4.2 Associated types}{subsection.25.5.4}% 1481
\BOOKMARK [3][-]{subsubsection.25.5.4.3}{25.5.4.3 Constructors and conversions}{subsection.25.5.4}% 1482
\BOOKMARK [3][-]{subsubsection.25.5.4.4}{25.5.4.4 Accessors}{subsection.25.5.4}% 1483
\BOOKMARK [3][-]{subsubsection.25.5.4.5}{25.5.4.5 Navigation}{subsection.25.5.4}% 1484
\BOOKMARK [3][-]{subsubsection.25.5.4.6}{25.5.4.6 Comparisons}{subsection.25.5.4}% 1485
\BOOKMARK [3][-]{subsubsection.25.5.4.7}{25.5.4.7 Customizations}{subsection.25.5.4}% 1486
\BOOKMARK [2][-]{subsection.25.5.5}{25.5.5 Default sentinel}{section.25.5}% 1487
\BOOKMARK [2][-]{subsection.25.5.6}{25.5.6 Counted iterators}{section.25.5}% 1488
\BOOKMARK [3][-]{subsubsection.25.5.6.1}{25.5.6.1 Class template counted\137iterator}{subsection.25.5.6}% 1489
\BOOKMARK [3][-]{subsubsection.25.5.6.2}{25.5.6.2 Constructors and conversions}{subsection.25.5.6}% 1490
\BOOKMARK [3][-]{subsubsection.25.5.6.3}{25.5.6.3 Accessors}{subsection.25.5.6}% 1491
\BOOKMARK [3][-]{subsubsection.25.5.6.4}{25.5.6.4 Element access}{subsection.25.5.6}% 1492
\BOOKMARK [3][-]{subsubsection.25.5.6.5}{25.5.6.5 Navigation}{subsection.25.5.6}% 1493
\BOOKMARK [3][-]{subsubsection.25.5.6.6}{25.5.6.6 Comparisons}{subsection.25.5.6}% 1494
\BOOKMARK [3][-]{subsubsection.25.5.6.7}{25.5.6.7 Customizations}{subsection.25.5.6}% 1495
\BOOKMARK [2][-]{subsection.25.5.7}{25.5.7 Unreachable sentinel}{section.25.5}% 1496
\BOOKMARK [1][-]{section.25.6}{25.6 Stream iterators}{chapter.25}% 1497
\BOOKMARK [2][-]{subsection.25.6.1}{25.6.1 General}{section.25.6}% 1498
\BOOKMARK [2][-]{subsection.25.6.2}{25.6.2 Class template istream\137iterator}{section.25.6}% 1499
\BOOKMARK [3][-]{subsubsection.25.6.2.1}{25.6.2.1 General}{subsection.25.6.2}% 1500
\BOOKMARK [3][-]{subsubsection.25.6.2.2}{25.6.2.2 Constructors and destructor}{subsection.25.6.2}% 1501
\BOOKMARK [3][-]{subsubsection.25.6.2.3}{25.6.2.3 Operations}{subsection.25.6.2}% 1502
\BOOKMARK [2][-]{subsection.25.6.3}{25.6.3 Class template ostream\137iterator}{section.25.6}% 1503
\BOOKMARK [3][-]{subsubsection.25.6.3.1}{25.6.3.1 General}{subsection.25.6.3}% 1504
\BOOKMARK [3][-]{subsubsection.25.6.3.2}{25.6.3.2 Constructors and destructor}{subsection.25.6.3}% 1505
\BOOKMARK [3][-]{subsubsection.25.6.3.3}{25.6.3.3 Operations}{subsection.25.6.3}% 1506
\BOOKMARK [2][-]{subsection.25.6.4}{25.6.4 Class template istreambuf\137iterator}{section.25.6}% 1507
\BOOKMARK [3][-]{subsubsection.25.6.4.1}{25.6.4.1 General}{subsection.25.6.4}% 1508
\BOOKMARK [3][-]{subsubsection.25.6.4.2}{25.6.4.2 Class istreambuf\137iterator::proxy}{subsection.25.6.4}% 1509
\BOOKMARK [3][-]{subsubsection.25.6.4.3}{25.6.4.3 Constructors}{subsection.25.6.4}% 1510
\BOOKMARK [3][-]{subsubsection.25.6.4.4}{25.6.4.4 Operations}{subsection.25.6.4}% 1511
\BOOKMARK [2][-]{subsection.25.6.5}{25.6.5 Class template ostreambuf\137iterator}{section.25.6}% 1512
\BOOKMARK [3][-]{subsubsection.25.6.5.1}{25.6.5.1 General}{subsection.25.6.5}% 1513
\BOOKMARK [3][-]{subsubsection.25.6.5.2}{25.6.5.2 Constructors}{subsection.25.6.5}% 1514
\BOOKMARK [3][-]{subsubsection.25.6.5.3}{25.6.5.3 Operations}{subsection.25.6.5}% 1515
\BOOKMARK [1][-]{section.25.7}{25.7 Range access}{chapter.25}% 1516
\BOOKMARK [0][-]{chapter.26}{26 Ranges library}{}% 1517
\BOOKMARK [1][-]{section.26.1}{26.1 General}{chapter.26}% 1518
\BOOKMARK [1][-]{section.26.2}{26.2 Header <ranges> synopsis}{chapter.26}% 1519
\BOOKMARK [1][-]{section.26.3}{26.3 Range access}{chapter.26}% 1520
\BOOKMARK [2][-]{subsection.26.3.1}{26.3.1 General}{section.26.3}% 1521
\BOOKMARK [2][-]{subsection.26.3.2}{26.3.2 ranges::begin}{section.26.3}% 1522
\BOOKMARK [2][-]{subsection.26.3.3}{26.3.3 ranges::end}{section.26.3}% 1523
\BOOKMARK [2][-]{subsection.26.3.4}{26.3.4 ranges::cbegin}{section.26.3}% 1524
\BOOKMARK [2][-]{subsection.26.3.5}{26.3.5 ranges::cend}{section.26.3}% 1525
\BOOKMARK [2][-]{subsection.26.3.6}{26.3.6 ranges::rbegin}{section.26.3}% 1526
\BOOKMARK [2][-]{subsection.26.3.7}{26.3.7 ranges::rend}{section.26.3}% 1527
\BOOKMARK [2][-]{subsection.26.3.8}{26.3.8 ranges::crbegin}{section.26.3}% 1528
\BOOKMARK [2][-]{subsection.26.3.9}{26.3.9 ranges::crend}{section.26.3}% 1529
\BOOKMARK [2][-]{subsection.26.3.10}{26.3.10 ranges::size}{section.26.3}% 1530
\BOOKMARK [2][-]{subsection.26.3.11}{26.3.11 ranges::ssize}{section.26.3}% 1531
\BOOKMARK [2][-]{subsection.26.3.12}{26.3.12 ranges::empty}{section.26.3}% 1532
\BOOKMARK [2][-]{subsection.26.3.13}{26.3.13 ranges::data}{section.26.3}% 1533
\BOOKMARK [2][-]{subsection.26.3.14}{26.3.14 ranges::cdata}{section.26.3}% 1534
\BOOKMARK [1][-]{section.26.4}{26.4 Range requirements}{chapter.26}% 1535
\BOOKMARK [2][-]{subsection.26.4.1}{26.4.1 General}{section.26.4}% 1536
\BOOKMARK [2][-]{subsection.26.4.2}{26.4.2 Ranges}{section.26.4}% 1537
\BOOKMARK [2][-]{subsection.26.4.3}{26.4.3 Sized ranges}{section.26.4}% 1538
\BOOKMARK [2][-]{subsection.26.4.4}{26.4.4 Views}{section.26.4}% 1539
\BOOKMARK [2][-]{subsection.26.4.5}{26.4.5 Other range refinements}{section.26.4}% 1540
\BOOKMARK [1][-]{section.26.5}{26.5 Range utilities}{chapter.26}% 1541
\BOOKMARK [2][-]{subsection.26.5.1}{26.5.1 General}{section.26.5}% 1542
\BOOKMARK [2][-]{subsection.26.5.2}{26.5.2 Helper concepts}{section.26.5}% 1543
\BOOKMARK [2][-]{subsection.26.5.3}{26.5.3 View interface}{section.26.5}% 1544
\BOOKMARK [3][-]{subsubsection.26.5.3.1}{26.5.3.1 General}{subsection.26.5.3}% 1545
\BOOKMARK [3][-]{subsubsection.26.5.3.2}{26.5.3.2 Members}{subsection.26.5.3}% 1546
\BOOKMARK [2][-]{subsection.26.5.4}{26.5.4 Sub-ranges}{section.26.5}% 1547
\BOOKMARK [3][-]{subsubsection.26.5.4.1}{26.5.4.1 General}{subsection.26.5.4}% 1548
\BOOKMARK [3][-]{subsubsection.26.5.4.2}{26.5.4.2 Constructors and conversions}{subsection.26.5.4}% 1549
\BOOKMARK [3][-]{subsubsection.26.5.4.3}{26.5.4.3 Accessors}{subsection.26.5.4}% 1550
\BOOKMARK [2][-]{subsection.26.5.5}{26.5.5 Dangling iterator handling}{section.26.5}% 1551
\BOOKMARK [2][-]{subsection.26.5.6}{26.5.6 Range conversions}{section.26.5}% 1552
\BOOKMARK [3][-]{subsubsection.26.5.6.1}{26.5.6.1 General}{subsection.26.5.6}% 1553
\BOOKMARK [3][-]{subsubsection.26.5.6.2}{26.5.6.2 ranges::to}{subsection.26.5.6}% 1554
\BOOKMARK [3][-]{subsubsection.26.5.6.3}{26.5.6.3 ranges::to adaptors}{subsection.26.5.6}% 1555
\BOOKMARK [1][-]{section.26.6}{26.6 Range factories}{chapter.26}% 1556
\BOOKMARK [2][-]{subsection.26.6.1}{26.6.1 General}{section.26.6}% 1557
\BOOKMARK [2][-]{subsection.26.6.2}{26.6.2 Empty view}{section.26.6}% 1558
\BOOKMARK [3][-]{subsubsection.26.6.2.1}{26.6.2.1 Overview}{subsection.26.6.2}% 1559
\BOOKMARK [3][-]{subsubsection.26.6.2.2}{26.6.2.2 Class template empty\137view}{subsection.26.6.2}% 1560
\BOOKMARK [2][-]{subsection.26.6.3}{26.6.3 Single view}{section.26.6}% 1561
\BOOKMARK [3][-]{subsubsection.26.6.3.1}{26.6.3.1 Overview}{subsection.26.6.3}% 1562
\BOOKMARK [3][-]{subsubsection.26.6.3.2}{26.6.3.2 Class template single\137view}{subsection.26.6.3}% 1563
\BOOKMARK [2][-]{subsection.26.6.4}{26.6.4 Iota view}{section.26.6}% 1564
\BOOKMARK [3][-]{subsubsection.26.6.4.1}{26.6.4.1 Overview}{subsection.26.6.4}% 1565
\BOOKMARK [3][-]{subsubsection.26.6.4.2}{26.6.4.2 Class template iota\137view}{subsection.26.6.4}% 1566
\BOOKMARK [3][-]{subsubsection.26.6.4.3}{26.6.4.3 Class iota\137view::iterator}{subsection.26.6.4}% 1567
\BOOKMARK [3][-]{subsubsection.26.6.4.4}{26.6.4.4 Class iota\137view::sentinel}{subsection.26.6.4}% 1568
\BOOKMARK [2][-]{subsection.26.6.5}{26.6.5 Istream view}{section.26.6}% 1569
\BOOKMARK [3][-]{subsubsection.26.6.5.1}{26.6.5.1 Overview}{subsection.26.6.5}% 1570
\BOOKMARK [3][-]{subsubsection.26.6.5.2}{26.6.5.2 Class template basic\137istream\137view}{subsection.26.6.5}% 1571
\BOOKMARK [3][-]{subsubsection.26.6.5.3}{26.6.5.3 Class template basic\137istream\137view::iterator}{subsection.26.6.5}% 1572
\BOOKMARK [1][-]{section.26.7}{26.7 Range adaptors}{chapter.26}% 1573
\BOOKMARK [2][-]{subsection.26.7.1}{26.7.1 General}{section.26.7}% 1574
\BOOKMARK [2][-]{subsection.26.7.2}{26.7.2 Range adaptor objects}{section.26.7}% 1575
\BOOKMARK [2][-]{subsection.26.7.3}{26.7.3 Copyable wrapper}{section.26.7}% 1576
\BOOKMARK [2][-]{subsection.26.7.4}{26.7.4 Non-propagating cache}{section.26.7}% 1577
\BOOKMARK [2][-]{subsection.26.7.5}{26.7.5 All view}{section.26.7}% 1578
\BOOKMARK [3][-]{subsubsection.26.7.5.1}{26.7.5.1 General}{subsection.26.7.5}% 1579
\BOOKMARK [3][-]{subsubsection.26.7.5.2}{26.7.5.2 Class template ref\137view}{subsection.26.7.5}% 1580
\BOOKMARK [3][-]{subsubsection.26.7.5.3}{26.7.5.3 Class template owning\137view}{subsection.26.7.5}% 1581
\BOOKMARK [2][-]{subsection.26.7.6}{26.7.6 Filter view}{section.26.7}% 1582
\BOOKMARK [3][-]{subsubsection.26.7.6.1}{26.7.6.1 Overview}{subsection.26.7.6}% 1583
\BOOKMARK [3][-]{subsubsection.26.7.6.2}{26.7.6.2 Class template filter\137view}{subsection.26.7.6}% 1584
\BOOKMARK [3][-]{subsubsection.26.7.6.3}{26.7.6.3 Class filter\137view::iterator}{subsection.26.7.6}% 1585
\BOOKMARK [3][-]{subsubsection.26.7.6.4}{26.7.6.4 Class filter\137view::sentinel}{subsection.26.7.6}% 1586
\BOOKMARK [2][-]{subsection.26.7.7}{26.7.7 Transform view}{section.26.7}% 1587
\BOOKMARK [3][-]{subsubsection.26.7.7.1}{26.7.7.1 Overview}{subsection.26.7.7}% 1588
\BOOKMARK [3][-]{subsubsection.26.7.7.2}{26.7.7.2 Class template transform\137view}{subsection.26.7.7}% 1589
\BOOKMARK [3][-]{subsubsection.26.7.7.3}{26.7.7.3 Class template transform\137view::iterator}{subsection.26.7.7}% 1590
\BOOKMARK [3][-]{subsubsection.26.7.7.4}{26.7.7.4 Class template transform\137view::sentinel}{subsection.26.7.7}% 1591
\BOOKMARK [2][-]{subsection.26.7.8}{26.7.8 Take view}{section.26.7}% 1592
\BOOKMARK [3][-]{subsubsection.26.7.8.1}{26.7.8.1 Overview}{subsection.26.7.8}% 1593
\BOOKMARK [3][-]{subsubsection.26.7.8.2}{26.7.8.2 Class template take\137view}{subsection.26.7.8}% 1594
\BOOKMARK [3][-]{subsubsection.26.7.8.3}{26.7.8.3 Class template take\137view::sentinel}{subsection.26.7.8}% 1595
\BOOKMARK [2][-]{subsection.26.7.9}{26.7.9 Take while view}{section.26.7}% 1596
\BOOKMARK [3][-]{subsubsection.26.7.9.1}{26.7.9.1 Overview}{subsection.26.7.9}% 1597
\BOOKMARK [3][-]{subsubsection.26.7.9.2}{26.7.9.2 Class template take\137while\137view}{subsection.26.7.9}% 1598
\BOOKMARK [3][-]{subsubsection.26.7.9.3}{26.7.9.3 Class template take\137while\137view::sentinel}{subsection.26.7.9}% 1599
\BOOKMARK [2][-]{subsection.26.7.10}{26.7.10 Drop view}{section.26.7}% 1600
\BOOKMARK [3][-]{subsubsection.26.7.10.1}{26.7.10.1 Overview}{subsection.26.7.10}% 1601
\BOOKMARK [3][-]{subsubsection.26.7.10.2}{26.7.10.2 Class template drop\137view}{subsection.26.7.10}% 1602
\BOOKMARK [2][-]{subsection.26.7.11}{26.7.11 Drop while view}{section.26.7}% 1603
\BOOKMARK [3][-]{subsubsection.26.7.11.1}{26.7.11.1 Overview}{subsection.26.7.11}% 1604
\BOOKMARK [3][-]{subsubsection.26.7.11.2}{26.7.11.2 Class template drop\137while\137view}{subsection.26.7.11}% 1605
\BOOKMARK [2][-]{subsection.26.7.12}{26.7.12 Join view}{section.26.7}% 1606
\BOOKMARK [3][-]{subsubsection.26.7.12.1}{26.7.12.1 Overview}{subsection.26.7.12}% 1607
\BOOKMARK [3][-]{subsubsection.26.7.12.2}{26.7.12.2 Class template join\137view}{subsection.26.7.12}% 1608
\BOOKMARK [3][-]{subsubsection.26.7.12.3}{26.7.12.3 Class template join\137view::iterator}{subsection.26.7.12}% 1609
\BOOKMARK [3][-]{subsubsection.26.7.12.4}{26.7.12.4 Class template join\137view::sentinel}{subsection.26.7.12}% 1610
\BOOKMARK [2][-]{subsection.26.7.13}{26.7.13 Join with view}{section.26.7}% 1611
\BOOKMARK [3][-]{subsubsection.26.7.13.1}{26.7.13.1 Overview}{subsection.26.7.13}% 1612
\BOOKMARK [3][-]{subsubsection.26.7.13.2}{26.7.13.2 Class template join\137with\137view}{subsection.26.7.13}% 1613
\BOOKMARK [3][-]{subsubsection.26.7.13.3}{26.7.13.3 Class template join\137with\137view::iterator}{subsection.26.7.13}% 1614
\BOOKMARK [3][-]{subsubsection.26.7.13.4}{26.7.13.4 Class template join\137with\137view::sentinel}{subsection.26.7.13}% 1615
\BOOKMARK [2][-]{subsection.26.7.14}{26.7.14 Lazy split view}{section.26.7}% 1616
\BOOKMARK [3][-]{subsubsection.26.7.14.1}{26.7.14.1 Overview}{subsection.26.7.14}% 1617
\BOOKMARK [3][-]{subsubsection.26.7.14.2}{26.7.14.2 Class template lazy\137split\137view}{subsection.26.7.14}% 1618
\BOOKMARK [3][-]{subsubsection.26.7.14.3}{26.7.14.3 Class template lazy\137split\137view::outer-iterator}{subsection.26.7.14}% 1619
\BOOKMARK [3][-]{subsubsection.26.7.14.4}{26.7.14.4 Class lazy\137split\137view::outer-iterator::value\137type}{subsection.26.7.14}% 1620
\BOOKMARK [3][-]{subsubsection.26.7.14.5}{26.7.14.5 Class template lazy\137split\137view::inner-iterator}{subsection.26.7.14}% 1621
\BOOKMARK [2][-]{subsection.26.7.15}{26.7.15 Split view}{section.26.7}% 1622
\BOOKMARK [3][-]{subsubsection.26.7.15.1}{26.7.15.1 Overview}{subsection.26.7.15}% 1623
\BOOKMARK [3][-]{subsubsection.26.7.15.2}{26.7.15.2 Class template split\137view}{subsection.26.7.15}% 1624
\BOOKMARK [3][-]{subsubsection.26.7.15.3}{26.7.15.3 Class split\137view::iterator}{subsection.26.7.15}% 1625
\BOOKMARK [3][-]{subsubsection.26.7.15.4}{26.7.15.4 Class split\137view::sentinel}{subsection.26.7.15}% 1626
\BOOKMARK [2][-]{subsection.26.7.16}{26.7.16 Counted view}{section.26.7}% 1627
\BOOKMARK [2][-]{subsection.26.7.17}{26.7.17 Common view}{section.26.7}% 1628
\BOOKMARK [3][-]{subsubsection.26.7.17.1}{26.7.17.1 Overview}{subsection.26.7.17}% 1629
\BOOKMARK [3][-]{subsubsection.26.7.17.2}{26.7.17.2 Class template common\137view}{subsection.26.7.17}% 1630
\BOOKMARK [2][-]{subsection.26.7.18}{26.7.18 Reverse view}{section.26.7}% 1631
\BOOKMARK [3][-]{subsubsection.26.7.18.1}{26.7.18.1 Overview}{subsection.26.7.18}% 1632
\BOOKMARK [3][-]{subsubsection.26.7.18.2}{26.7.18.2 Class template reverse\137view}{subsection.26.7.18}% 1633
\BOOKMARK [2][-]{subsection.26.7.19}{26.7.19 Elements view}{section.26.7}% 1634
\BOOKMARK [3][-]{subsubsection.26.7.19.1}{26.7.19.1 Overview}{subsection.26.7.19}% 1635
\BOOKMARK [3][-]{subsubsection.26.7.19.2}{26.7.19.2 Class template elements\137view}{subsection.26.7.19}% 1636
\BOOKMARK [3][-]{subsubsection.26.7.19.3}{26.7.19.3 Class template elements\137view::iterator}{subsection.26.7.19}% 1637
\BOOKMARK [3][-]{subsubsection.26.7.19.4}{26.7.19.4 Class template elements\137view::sentinel}{subsection.26.7.19}% 1638
\BOOKMARK [2][-]{subsection.26.7.20}{26.7.20 Zip view}{section.26.7}% 1639
\BOOKMARK [3][-]{subsubsection.26.7.20.1}{26.7.20.1 Overview}{subsection.26.7.20}% 1640
\BOOKMARK [3][-]{subsubsection.26.7.20.2}{26.7.20.2 Class template zip\137view}{subsection.26.7.20}% 1641
\BOOKMARK [3][-]{subsubsection.26.7.20.3}{26.7.20.3 Class template zip\137view::iterator}{subsection.26.7.20}% 1642
\BOOKMARK [3][-]{subsubsection.26.7.20.4}{26.7.20.4 Class template zip\137view::sentinel}{subsection.26.7.20}% 1643
\BOOKMARK [2][-]{subsection.26.7.21}{26.7.21 Zip transform view}{section.26.7}% 1644
\BOOKMARK [3][-]{subsubsection.26.7.21.1}{26.7.21.1 Overview}{subsection.26.7.21}% 1645
\BOOKMARK [3][-]{subsubsection.26.7.21.2}{26.7.21.2 Class template zip\137transform\137view}{subsection.26.7.21}% 1646
\BOOKMARK [3][-]{subsubsection.26.7.21.3}{26.7.21.3 Class template zip\137transform\137view::iterator}{subsection.26.7.21}% 1647
\BOOKMARK [3][-]{subsubsection.26.7.21.4}{26.7.21.4 Class template zip\137transform\137view::sentinel}{subsection.26.7.21}% 1648
\BOOKMARK [2][-]{subsection.26.7.22}{26.7.22 Adjacent view}{section.26.7}% 1649
\BOOKMARK [3][-]{subsubsection.26.7.22.1}{26.7.22.1 Overview}{subsection.26.7.22}% 1650
\BOOKMARK [3][-]{subsubsection.26.7.22.2}{26.7.22.2 Class template adjacent\137view}{subsection.26.7.22}% 1651
\BOOKMARK [3][-]{subsubsection.26.7.22.3}{26.7.22.3 Class template adjacent\137view::iterator}{subsection.26.7.22}% 1652
\BOOKMARK [3][-]{subsubsection.26.7.22.4}{26.7.22.4 Class template adjacent\137view::sentinel}{subsection.26.7.22}% 1653
\BOOKMARK [2][-]{subsection.26.7.23}{26.7.23 Adjacent transform view}{section.26.7}% 1654
\BOOKMARK [3][-]{subsubsection.26.7.23.1}{26.7.23.1 Overview}{subsection.26.7.23}% 1655
\BOOKMARK [3][-]{subsubsection.26.7.23.2}{26.7.23.2 Class template adjacent\137transform\137view}{subsection.26.7.23}% 1656
\BOOKMARK [3][-]{subsubsection.26.7.23.3}{26.7.23.3 Class template adjacent\137transform\137view::iterator}{subsection.26.7.23}% 1657
\BOOKMARK [3][-]{subsubsection.26.7.23.4}{26.7.23.4 Class template adjacent\137transform\137view::sentinel}{subsection.26.7.23}% 1658
\BOOKMARK [2][-]{subsection.26.7.24}{26.7.24 Chunk view}{section.26.7}% 1659
\BOOKMARK [3][-]{subsubsection.26.7.24.1}{26.7.24.1 Overview}{subsection.26.7.24}% 1660
\BOOKMARK [3][-]{subsubsection.26.7.24.2}{26.7.24.2 chunk\137view for input ranges}{subsection.26.7.24}% 1661
\BOOKMARK [3][-]{subsubsection.26.7.24.3}{26.7.24.3 Class chunk\137view::outer-iterator}{subsection.26.7.24}% 1662
\BOOKMARK [3][-]{subsubsection.26.7.24.4}{26.7.24.4 Class chunk\137view::outer-iterator::value\137type}{subsection.26.7.24}% 1663
\BOOKMARK [3][-]{subsubsection.26.7.24.5}{26.7.24.5 Class chunk\137view::inner-iterator}{subsection.26.7.24}% 1664
\BOOKMARK [3][-]{subsubsection.26.7.24.6}{26.7.24.6 chunk\137view for forward ranges}{subsection.26.7.24}% 1665
\BOOKMARK [3][-]{subsubsection.26.7.24.7}{26.7.24.7 Class template chunk\137view<V>::iterator for forward ranges}{subsection.26.7.24}% 1666
\BOOKMARK [2][-]{subsection.26.7.25}{26.7.25 Slide view}{section.26.7}% 1667
\BOOKMARK [3][-]{subsubsection.26.7.25.1}{26.7.25.1 Overview}{subsection.26.7.25}% 1668
\BOOKMARK [3][-]{subsubsection.26.7.25.2}{26.7.25.2 Class template slide\137view}{subsection.26.7.25}% 1669
\BOOKMARK [3][-]{subsubsection.26.7.25.3}{26.7.25.3 Class template slide\137view::iterator}{subsection.26.7.25}% 1670
\BOOKMARK [3][-]{subsubsection.26.7.25.4}{26.7.25.4 Class slide\137view::sentinel}{subsection.26.7.25}% 1671
\BOOKMARK [2][-]{subsection.26.7.26}{26.7.26 Chunk by view}{section.26.7}% 1672
\BOOKMARK [3][-]{subsubsection.26.7.26.1}{26.7.26.1 Overview}{subsection.26.7.26}% 1673
\BOOKMARK [3][-]{subsubsection.26.7.26.2}{26.7.26.2 Class template chunk\137by\137view}{subsection.26.7.26}% 1674
\BOOKMARK [3][-]{subsubsection.26.7.26.3}{26.7.26.3 Class chunk\137by\137view::iterator}{subsection.26.7.26}% 1675
\BOOKMARK [0][-]{chapter.27}{27 Algorithms library}{}% 1676
\BOOKMARK [1][-]{section.27.1}{27.1 General}{chapter.27}% 1677
\BOOKMARK [1][-]{section.27.2}{27.2 Algorithms requirements}{chapter.27}% 1678
\BOOKMARK [1][-]{section.27.3}{27.3 Parallel algorithms}{chapter.27}% 1679
\BOOKMARK [2][-]{subsection.27.3.1}{27.3.1 Preamble}{section.27.3}% 1680
\BOOKMARK [2][-]{subsection.27.3.2}{27.3.2 Requirements on user-provided function objects}{section.27.3}% 1681
\BOOKMARK [2][-]{subsection.27.3.3}{27.3.3 Effect of execution policies on algorithm execution}{section.27.3}% 1682
\BOOKMARK [2][-]{subsection.27.3.4}{27.3.4 Parallel algorithm exceptions}{section.27.3}% 1683
\BOOKMARK [2][-]{subsection.27.3.5}{27.3.5 ExecutionPolicy algorithm overloads}{section.27.3}% 1684
\BOOKMARK [1][-]{section.27.4}{27.4 Header <algorithm> synopsis}{chapter.27}% 1685
\BOOKMARK [1][-]{section.27.5}{27.5 Algorithm result types}{chapter.27}% 1686
\BOOKMARK [1][-]{section.27.6}{27.6 Non-modifying sequence operations}{chapter.27}% 1687
\BOOKMARK [2][-]{subsection.27.6.1}{27.6.1 All of}{section.27.6}% 1688
\BOOKMARK [2][-]{subsection.27.6.2}{27.6.2 Any of}{section.27.6}% 1689
\BOOKMARK [2][-]{subsection.27.6.3}{27.6.3 None of}{section.27.6}% 1690
\BOOKMARK [2][-]{subsection.27.6.4}{27.6.4 For each}{section.27.6}% 1691
\BOOKMARK [2][-]{subsection.27.6.5}{27.6.5 Find}{section.27.6}% 1692
\BOOKMARK [2][-]{subsection.27.6.6}{27.6.6 Find end}{section.27.6}% 1693
\BOOKMARK [2][-]{subsection.27.6.7}{27.6.7 Find first}{section.27.6}% 1694
\BOOKMARK [2][-]{subsection.27.6.8}{27.6.8 Adjacent find}{section.27.6}% 1695
\BOOKMARK [2][-]{subsection.27.6.9}{27.6.9 Count}{section.27.6}% 1696
\BOOKMARK [2][-]{subsection.27.6.10}{27.6.10 Mismatch}{section.27.6}% 1697
\BOOKMARK [2][-]{subsection.27.6.11}{27.6.11 Equal}{section.27.6}% 1698
\BOOKMARK [2][-]{subsection.27.6.12}{27.6.12 Is permutation}{section.27.6}% 1699
\BOOKMARK [2][-]{subsection.27.6.13}{27.6.13 Search}{section.27.6}% 1700
\BOOKMARK [2][-]{subsection.27.6.14}{27.6.14 Starts with}{section.27.6}% 1701
\BOOKMARK [2][-]{subsection.27.6.15}{27.6.15 Ends with}{section.27.6}% 1702
\BOOKMARK [1][-]{section.27.7}{27.7 Mutating sequence operations}{chapter.27}% 1703
\BOOKMARK [2][-]{subsection.27.7.1}{27.7.1 Copy}{section.27.7}% 1704
\BOOKMARK [2][-]{subsection.27.7.2}{27.7.2 Move}{section.27.7}% 1705
\BOOKMARK [2][-]{subsection.27.7.3}{27.7.3 Swap}{section.27.7}% 1706
\BOOKMARK [2][-]{subsection.27.7.4}{27.7.4 Transform}{section.27.7}% 1707
\BOOKMARK [2][-]{subsection.27.7.5}{27.7.5 Replace}{section.27.7}% 1708
\BOOKMARK [2][-]{subsection.27.7.6}{27.7.6 Fill}{section.27.7}% 1709
\BOOKMARK [2][-]{subsection.27.7.7}{27.7.7 Generate}{section.27.7}% 1710
\BOOKMARK [2][-]{subsection.27.7.8}{27.7.8 Remove}{section.27.7}% 1711
\BOOKMARK [2][-]{subsection.27.7.9}{27.7.9 Unique}{section.27.7}% 1712
\BOOKMARK [2][-]{subsection.27.7.10}{27.7.10 Reverse}{section.27.7}% 1713
\BOOKMARK [2][-]{subsection.27.7.11}{27.7.11 Rotate}{section.27.7}% 1714
\BOOKMARK [2][-]{subsection.27.7.12}{27.7.12 Sample}{section.27.7}% 1715
\BOOKMARK [2][-]{subsection.27.7.13}{27.7.13 Shuffle}{section.27.7}% 1716
\BOOKMARK [2][-]{subsection.27.7.14}{27.7.14 Shift}{section.27.7}% 1717
\BOOKMARK [1][-]{section.27.8}{27.8 Sorting and related operations}{chapter.27}% 1718
\BOOKMARK [2][-]{subsection.27.8.1}{27.8.1 General}{section.27.8}% 1719
\BOOKMARK [2][-]{subsection.27.8.2}{27.8.2 Sorting}{section.27.8}% 1720
\BOOKMARK [3][-]{subsubsection.27.8.2.1}{27.8.2.1 sort}{subsection.27.8.2}% 1721
\BOOKMARK [3][-]{subsubsection.27.8.2.2}{27.8.2.2 stable\137sort}{subsection.27.8.2}% 1722
\BOOKMARK [3][-]{subsubsection.27.8.2.3}{27.8.2.3 partial\137sort}{subsection.27.8.2}% 1723
\BOOKMARK [3][-]{subsubsection.27.8.2.4}{27.8.2.4 partial\137sort\137copy}{subsection.27.8.2}% 1724
\BOOKMARK [3][-]{subsubsection.27.8.2.5}{27.8.2.5 is\137sorted}{subsection.27.8.2}% 1725
\BOOKMARK [2][-]{subsection.27.8.3}{27.8.3 Nth element}{section.27.8}% 1726
\BOOKMARK [2][-]{subsection.27.8.4}{27.8.4 Binary search}{section.27.8}% 1727
\BOOKMARK [3][-]{subsubsection.27.8.4.1}{27.8.4.1 General}{subsection.27.8.4}% 1728
\BOOKMARK [3][-]{subsubsection.27.8.4.2}{27.8.4.2 lower\137bound}{subsection.27.8.4}% 1729
\BOOKMARK [3][-]{subsubsection.27.8.4.3}{27.8.4.3 upper\137bound}{subsection.27.8.4}% 1730
\BOOKMARK [3][-]{subsubsection.27.8.4.4}{27.8.4.4 equal\137range}{subsection.27.8.4}% 1731
\BOOKMARK [3][-]{subsubsection.27.8.4.5}{27.8.4.5 binary\137search}{subsection.27.8.4}% 1732
\BOOKMARK [2][-]{subsection.27.8.5}{27.8.5 Partitions}{section.27.8}% 1733
\BOOKMARK [2][-]{subsection.27.8.6}{27.8.6 Merge}{section.27.8}% 1734
\BOOKMARK [2][-]{subsection.27.8.7}{27.8.7 Set operations on sorted structures}{section.27.8}% 1735
\BOOKMARK [3][-]{subsubsection.27.8.7.1}{27.8.7.1 General}{subsection.27.8.7}% 1736
\BOOKMARK [3][-]{subsubsection.27.8.7.2}{27.8.7.2 includes}{subsection.27.8.7}% 1737
\BOOKMARK [3][-]{subsubsection.27.8.7.3}{27.8.7.3 set\137union}{subsection.27.8.7}% 1738
\BOOKMARK [3][-]{subsubsection.27.8.7.4}{27.8.7.4 set\137intersection}{subsection.27.8.7}% 1739
\BOOKMARK [3][-]{subsubsection.27.8.7.5}{27.8.7.5 set\137difference}{subsection.27.8.7}% 1740
\BOOKMARK [3][-]{subsubsection.27.8.7.6}{27.8.7.6 set\137symmetric\137difference}{subsection.27.8.7}% 1741
\BOOKMARK [2][-]{subsection.27.8.8}{27.8.8 Heap operations}{section.27.8}% 1742
\BOOKMARK [3][-]{subsubsection.27.8.8.1}{27.8.8.1 General}{subsection.27.8.8}% 1743
\BOOKMARK [3][-]{subsubsection.27.8.8.2}{27.8.8.2 push\137heap}{subsection.27.8.8}% 1744
\BOOKMARK [3][-]{subsubsection.27.8.8.3}{27.8.8.3 pop\137heap}{subsection.27.8.8}% 1745
\BOOKMARK [3][-]{subsubsection.27.8.8.4}{27.8.8.4 make\137heap}{subsection.27.8.8}% 1746
\BOOKMARK [3][-]{subsubsection.27.8.8.5}{27.8.8.5 sort\137heap}{subsection.27.8.8}% 1747
\BOOKMARK [3][-]{subsubsection.27.8.8.6}{27.8.8.6 is\137heap}{subsection.27.8.8}% 1748
\BOOKMARK [2][-]{subsection.27.8.9}{27.8.9 Minimum and maximum}{section.27.8}% 1749
\BOOKMARK [2][-]{subsection.27.8.10}{27.8.10 Bounded value}{section.27.8}% 1750
\BOOKMARK [2][-]{subsection.27.8.11}{27.8.11 Lexicographical comparison}{section.27.8}% 1751
\BOOKMARK [2][-]{subsection.27.8.12}{27.8.12 Three-way comparison algorithms}{section.27.8}% 1752
\BOOKMARK [2][-]{subsection.27.8.13}{27.8.13 Permutation generators}{section.27.8}% 1753
\BOOKMARK [1][-]{section.27.9}{27.9 Header <numeric> synopsis}{chapter.27}% 1754
\BOOKMARK [1][-]{section.27.10}{27.10 Generalized numeric operations}{chapter.27}% 1755
\BOOKMARK [2][-]{subsection.27.10.1}{27.10.1 General}{section.27.10}% 1756
\BOOKMARK [2][-]{subsection.27.10.2}{27.10.2 Definitions}{section.27.10}% 1757
\BOOKMARK [2][-]{subsection.27.10.3}{27.10.3 Accumulate}{section.27.10}% 1758
\BOOKMARK [2][-]{subsection.27.10.4}{27.10.4 Reduce}{section.27.10}% 1759
\BOOKMARK [2][-]{subsection.27.10.5}{27.10.5 Inner product}{section.27.10}% 1760
\BOOKMARK [2][-]{subsection.27.10.6}{27.10.6 Transform reduce}{section.27.10}% 1761
\BOOKMARK [2][-]{subsection.27.10.7}{27.10.7 Partial sum}{section.27.10}% 1762
\BOOKMARK [2][-]{subsection.27.10.8}{27.10.8 Exclusive scan}{section.27.10}% 1763
\BOOKMARK [2][-]{subsection.27.10.9}{27.10.9 Inclusive scan}{section.27.10}% 1764
\BOOKMARK [2][-]{subsection.27.10.10}{27.10.10 Transform exclusive scan}{section.27.10}% 1765
\BOOKMARK [2][-]{subsection.27.10.11}{27.10.11 Transform inclusive scan}{section.27.10}% 1766
\BOOKMARK [2][-]{subsection.27.10.12}{27.10.12 Adjacent difference}{section.27.10}% 1767
\BOOKMARK [2][-]{subsection.27.10.13}{27.10.13 Iota}{section.27.10}% 1768
\BOOKMARK [2][-]{subsection.27.10.14}{27.10.14 Greatest common divisor}{section.27.10}% 1769
\BOOKMARK [2][-]{subsection.27.10.15}{27.10.15 Least common multiple}{section.27.10}% 1770
\BOOKMARK [2][-]{subsection.27.10.16}{27.10.16 Midpoint}{section.27.10}% 1771
\BOOKMARK [1][-]{section.27.11}{27.11 Specialized <memory> algorithms}{chapter.27}% 1772
\BOOKMARK [2][-]{subsection.27.11.1}{27.11.1 General}{section.27.11}% 1773
\BOOKMARK [2][-]{subsection.27.11.2}{27.11.2 Special memory concepts}{section.27.11}% 1774
\BOOKMARK [2][-]{subsection.27.11.3}{27.11.3 uninitialized\137default\137construct}{section.27.11}% 1775
\BOOKMARK [2][-]{subsection.27.11.4}{27.11.4 uninitialized\137value\137construct}{section.27.11}% 1776
\BOOKMARK [2][-]{subsection.27.11.5}{27.11.5 uninitialized\137copy}{section.27.11}% 1777
\BOOKMARK [2][-]{subsection.27.11.6}{27.11.6 uninitialized\137move}{section.27.11}% 1778
\BOOKMARK [2][-]{subsection.27.11.7}{27.11.7 uninitialized\137fill}{section.27.11}% 1779
\BOOKMARK [2][-]{subsection.27.11.8}{27.11.8 construct\137at}{section.27.11}% 1780
\BOOKMARK [2][-]{subsection.27.11.9}{27.11.9 destroy}{section.27.11}% 1781
\BOOKMARK [1][-]{section.27.12}{27.12 C library algorithms}{chapter.27}% 1782
\BOOKMARK [0][-]{chapter.28}{28 Numerics library}{}% 1783
\BOOKMARK [1][-]{section.28.1}{28.1 General}{chapter.28}% 1784
\BOOKMARK [1][-]{section.28.2}{28.2 Numeric type requirements}{chapter.28}% 1785
\BOOKMARK [1][-]{section.28.3}{28.3 The floating-point environment}{chapter.28}% 1786
\BOOKMARK [2][-]{subsection.28.3.1}{28.3.1 Header <cfenv> synopsis}{section.28.3}% 1787
\BOOKMARK [2][-]{subsection.28.3.2}{28.3.2 Threads}{section.28.3}% 1788
\BOOKMARK [1][-]{section.28.4}{28.4 Complex numbers}{chapter.28}% 1789
\BOOKMARK [2][-]{subsection.28.4.1}{28.4.1 General}{section.28.4}% 1790
\BOOKMARK [2][-]{subsection.28.4.2}{28.4.2 Header <complex> synopsis}{section.28.4}% 1791
\BOOKMARK [2][-]{subsection.28.4.3}{28.4.3 Class template complex}{section.28.4}% 1792
\BOOKMARK [2][-]{subsection.28.4.4}{28.4.4 Specializations}{section.28.4}% 1793
\BOOKMARK [2][-]{subsection.28.4.5}{28.4.5 Member functions}{section.28.4}% 1794
\BOOKMARK [2][-]{subsection.28.4.6}{28.4.6 Member operators}{section.28.4}% 1795
\BOOKMARK [2][-]{subsection.28.4.7}{28.4.7 Non-member operations}{section.28.4}% 1796
\BOOKMARK [2][-]{subsection.28.4.8}{28.4.8 Value operations}{section.28.4}% 1797
\BOOKMARK [2][-]{subsection.28.4.9}{28.4.9 Transcendentals}{section.28.4}% 1798
\BOOKMARK [2][-]{subsection.28.4.10}{28.4.10 Additional overloads}{section.28.4}% 1799
\BOOKMARK [2][-]{subsection.28.4.11}{28.4.11 Suffixes for complex number literals}{section.28.4}% 1800
\BOOKMARK [1][-]{section.28.5}{28.5 Random number generation}{chapter.28}% 1801
\BOOKMARK [2][-]{subsection.28.5.1}{28.5.1 General}{section.28.5}% 1802
\BOOKMARK [2][-]{subsection.28.5.2}{28.5.2 Header <random> synopsis}{section.28.5}% 1803
\BOOKMARK [2][-]{subsection.28.5.3}{28.5.3 Requirements}{section.28.5}% 1804
\BOOKMARK [3][-]{subsubsection.28.5.3.1}{28.5.3.1 General requirements}{subsection.28.5.3}% 1805
\BOOKMARK [3][-]{subsubsection.28.5.3.2}{28.5.3.2 Seed sequence requirements}{subsection.28.5.3}% 1806
\BOOKMARK [3][-]{subsubsection.28.5.3.3}{28.5.3.3 Uniform random bit generator requirements}{subsection.28.5.3}% 1807
\BOOKMARK [3][-]{subsubsection.28.5.3.4}{28.5.3.4 Random number engine requirements}{subsection.28.5.3}% 1808
\BOOKMARK [3][-]{subsubsection.28.5.3.5}{28.5.3.5 Random number engine adaptor requirements}{subsection.28.5.3}% 1809
\BOOKMARK [3][-]{subsubsection.28.5.3.6}{28.5.3.6 Random number distribution requirements}{subsection.28.5.3}% 1810
\BOOKMARK [2][-]{subsection.28.5.4}{28.5.4 Random number engine class templates}{section.28.5}% 1811
\BOOKMARK [3][-]{subsubsection.28.5.4.1}{28.5.4.1 General}{subsection.28.5.4}% 1812
\BOOKMARK [3][-]{subsubsection.28.5.4.2}{28.5.4.2 Class template linear\137congruential\137engine}{subsection.28.5.4}% 1813
\BOOKMARK [3][-]{subsubsection.28.5.4.3}{28.5.4.3 Class template mersenne\137twister\137engine}{subsection.28.5.4}% 1814
\BOOKMARK [3][-]{subsubsection.28.5.4.4}{28.5.4.4 Class template subtract\137with\137carry\137engine}{subsection.28.5.4}% 1815
\BOOKMARK [2][-]{subsection.28.5.5}{28.5.5 Random number engine adaptor class templates}{section.28.5}% 1816
\BOOKMARK [3][-]{subsubsection.28.5.5.1}{28.5.5.1 In general}{subsection.28.5.5}% 1817
\BOOKMARK [3][-]{subsubsection.28.5.5.2}{28.5.5.2 Class template discard\137block\137engine}{subsection.28.5.5}% 1818
\BOOKMARK [3][-]{subsubsection.28.5.5.3}{28.5.5.3 Class template independent\137bits\137engine}{subsection.28.5.5}% 1819
\BOOKMARK [3][-]{subsubsection.28.5.5.4}{28.5.5.4 Class template shuffle\137order\137engine}{subsection.28.5.5}% 1820
\BOOKMARK [2][-]{subsection.28.5.6}{28.5.6 Engines and engine adaptors with predefined parameters}{section.28.5}% 1821
\BOOKMARK [2][-]{subsection.28.5.7}{28.5.7 Class random\137device}{section.28.5}% 1822
\BOOKMARK [2][-]{subsection.28.5.8}{28.5.8 Utilities}{section.28.5}% 1823
\BOOKMARK [3][-]{subsubsection.28.5.8.1}{28.5.8.1 Class seed\137seq}{subsection.28.5.8}% 1824
\BOOKMARK [3][-]{subsubsection.28.5.8.2}{28.5.8.2 Function template generate\137canonical}{subsection.28.5.8}% 1825
\BOOKMARK [2][-]{subsection.28.5.9}{28.5.9 Random number distribution class templates}{section.28.5}% 1826
\BOOKMARK [3][-]{subsubsection.28.5.9.1}{28.5.9.1 In general}{subsection.28.5.9}% 1827
\BOOKMARK [3][-]{subsubsection.28.5.9.2}{28.5.9.2 Uniform distributions}{subsection.28.5.9}% 1828
\BOOKMARK [4][-]{paragraph.28.5.9.2.1}{28.5.9.2.1 Class template uniform\137int\137distribution}{subsubsection.28.5.9.2}% 1829
\BOOKMARK [4][-]{paragraph.28.5.9.2.2}{28.5.9.2.2 Class template uniform\137real\137distribution}{subsubsection.28.5.9.2}% 1830
\BOOKMARK [3][-]{subsubsection.28.5.9.3}{28.5.9.3 Bernoulli distributions}{subsection.28.5.9}% 1831
\BOOKMARK [4][-]{paragraph.28.5.9.3.1}{28.5.9.3.1 Class bernoulli\137distribution}{subsubsection.28.5.9.3}% 1832
\BOOKMARK [4][-]{paragraph.28.5.9.3.2}{28.5.9.3.2 Class template binomial\137distribution}{subsubsection.28.5.9.3}% 1833
\BOOKMARK [4][-]{paragraph.28.5.9.3.3}{28.5.9.3.3 Class template geometric\137distribution}{subsubsection.28.5.9.3}% 1834
\BOOKMARK [4][-]{paragraph.28.5.9.3.4}{28.5.9.3.4 Class template negative\137binomial\137distribution}{subsubsection.28.5.9.3}% 1835
\BOOKMARK [3][-]{subsubsection.28.5.9.4}{28.5.9.4 Poisson distributions}{subsection.28.5.9}% 1836
\BOOKMARK [4][-]{paragraph.28.5.9.4.1}{28.5.9.4.1 Class template poisson\137distribution}{subsubsection.28.5.9.4}% 1837
\BOOKMARK [4][-]{paragraph.28.5.9.4.2}{28.5.9.4.2 Class template exponential\137distribution}{subsubsection.28.5.9.4}% 1838
\BOOKMARK [4][-]{paragraph.28.5.9.4.3}{28.5.9.4.3 Class template gamma\137distribution}{subsubsection.28.5.9.4}% 1839
\BOOKMARK [4][-]{paragraph.28.5.9.4.4}{28.5.9.4.4 Class template weibull\137distribution}{subsubsection.28.5.9.4}% 1840
\BOOKMARK [4][-]{paragraph.28.5.9.4.5}{28.5.9.4.5 Class template extreme\137value\137distribution}{subsubsection.28.5.9.4}% 1841
\BOOKMARK [3][-]{subsubsection.28.5.9.5}{28.5.9.5 Normal distributions}{subsection.28.5.9}% 1842
\BOOKMARK [4][-]{paragraph.28.5.9.5.1}{28.5.9.5.1 Class template normal\137distribution}{subsubsection.28.5.9.5}% 1843
\BOOKMARK [4][-]{paragraph.28.5.9.5.2}{28.5.9.5.2 Class template lognormal\137distribution}{subsubsection.28.5.9.5}% 1844
\BOOKMARK [4][-]{paragraph.28.5.9.5.3}{28.5.9.5.3 Class template chi\137squared\137distribution}{subsubsection.28.5.9.5}% 1845
\BOOKMARK [4][-]{paragraph.28.5.9.5.4}{28.5.9.5.4 Class template cauchy\137distribution}{subsubsection.28.5.9.5}% 1846
\BOOKMARK [4][-]{paragraph.28.5.9.5.5}{28.5.9.5.5 Class template fisher\137f\137distribution}{subsubsection.28.5.9.5}% 1847
\BOOKMARK [4][-]{paragraph.28.5.9.5.6}{28.5.9.5.6 Class template student\137t\137distribution}{subsubsection.28.5.9.5}% 1848
\BOOKMARK [3][-]{subsubsection.28.5.9.6}{28.5.9.6 Sampling distributions}{subsection.28.5.9}% 1849
\BOOKMARK [4][-]{paragraph.28.5.9.6.1}{28.5.9.6.1 Class template discrete\137distribution}{subsubsection.28.5.9.6}% 1850
\BOOKMARK [4][-]{paragraph.28.5.9.6.2}{28.5.9.6.2 Class template piecewise\137constant\137distribution}{subsubsection.28.5.9.6}% 1851
\BOOKMARK [4][-]{paragraph.28.5.9.6.3}{28.5.9.6.3 Class template piecewise\137linear\137distribution}{subsubsection.28.5.9.6}% 1852
\BOOKMARK [2][-]{subsection.28.5.10}{28.5.10 Low-quality random number generation}{section.28.5}% 1853
\BOOKMARK [1][-]{section.28.6}{28.6 Numeric arrays}{chapter.28}% 1854
\BOOKMARK [2][-]{subsection.28.6.1}{28.6.1 Header <valarray> synopsis}{section.28.6}% 1855
\BOOKMARK [2][-]{subsection.28.6.2}{28.6.2 Class template valarray}{section.28.6}% 1856
\BOOKMARK [3][-]{subsubsection.28.6.2.1}{28.6.2.1 Overview}{subsection.28.6.2}% 1857
\BOOKMARK [3][-]{subsubsection.28.6.2.2}{28.6.2.2 Constructors}{subsection.28.6.2}% 1858
\BOOKMARK [3][-]{subsubsection.28.6.2.3}{28.6.2.3 Assignment}{subsection.28.6.2}% 1859
\BOOKMARK [3][-]{subsubsection.28.6.2.4}{28.6.2.4 Element access}{subsection.28.6.2}% 1860
\BOOKMARK [3][-]{subsubsection.28.6.2.5}{28.6.2.5 Subset operations}{subsection.28.6.2}% 1861
\BOOKMARK [3][-]{subsubsection.28.6.2.6}{28.6.2.6 Unary operators}{subsection.28.6.2}% 1862
\BOOKMARK [3][-]{subsubsection.28.6.2.7}{28.6.2.7 Compound assignment}{subsection.28.6.2}% 1863
\BOOKMARK [3][-]{subsubsection.28.6.2.8}{28.6.2.8 Member functions}{subsection.28.6.2}% 1864
\BOOKMARK [2][-]{subsection.28.6.3}{28.6.3 valarray non-member operations}{section.28.6}% 1865
\BOOKMARK [3][-]{subsubsection.28.6.3.1}{28.6.3.1 Binary operators}{subsection.28.6.3}% 1866
\BOOKMARK [3][-]{subsubsection.28.6.3.2}{28.6.3.2 Logical operators}{subsection.28.6.3}% 1867
\BOOKMARK [3][-]{subsubsection.28.6.3.3}{28.6.3.3 Transcendentals}{subsection.28.6.3}% 1868
\BOOKMARK [3][-]{subsubsection.28.6.3.4}{28.6.3.4 Specialized algorithms}{subsection.28.6.3}% 1869
\BOOKMARK [2][-]{subsection.28.6.4}{28.6.4 Class slice}{section.28.6}% 1870
\BOOKMARK [3][-]{subsubsection.28.6.4.1}{28.6.4.1 Overview}{subsection.28.6.4}% 1871
\BOOKMARK [3][-]{subsubsection.28.6.4.2}{28.6.4.2 Constructors}{subsection.28.6.4}% 1872
\BOOKMARK [3][-]{subsubsection.28.6.4.3}{28.6.4.3 Access functions}{subsection.28.6.4}% 1873
\BOOKMARK [3][-]{subsubsection.28.6.4.4}{28.6.4.4 Operators}{subsection.28.6.4}% 1874
\BOOKMARK [2][-]{subsection.28.6.5}{28.6.5 Class template slice\137array}{section.28.6}% 1875
\BOOKMARK [3][-]{subsubsection.28.6.5.1}{28.6.5.1 Overview}{subsection.28.6.5}% 1876
\BOOKMARK [3][-]{subsubsection.28.6.5.2}{28.6.5.2 Assignment}{subsection.28.6.5}% 1877
\BOOKMARK [3][-]{subsubsection.28.6.5.3}{28.6.5.3 Compound assignment}{subsection.28.6.5}% 1878
\BOOKMARK [3][-]{subsubsection.28.6.5.4}{28.6.5.4 Fill function}{subsection.28.6.5}% 1879
\BOOKMARK [2][-]{subsection.28.6.6}{28.6.6 The gslice class}{section.28.6}% 1880
\BOOKMARK [3][-]{subsubsection.28.6.6.1}{28.6.6.1 Overview}{subsection.28.6.6}% 1881
\BOOKMARK [3][-]{subsubsection.28.6.6.2}{28.6.6.2 Constructors}{subsection.28.6.6}% 1882
\BOOKMARK [3][-]{subsubsection.28.6.6.3}{28.6.6.3 Access functions}{subsection.28.6.6}% 1883
\BOOKMARK [2][-]{subsection.28.6.7}{28.6.7 Class template gslice\137array}{section.28.6}% 1884
\BOOKMARK [3][-]{subsubsection.28.6.7.1}{28.6.7.1 Overview}{subsection.28.6.7}% 1885
\BOOKMARK [3][-]{subsubsection.28.6.7.2}{28.6.7.2 Assignment}{subsection.28.6.7}% 1886
\BOOKMARK [3][-]{subsubsection.28.6.7.3}{28.6.7.3 Compound assignment}{subsection.28.6.7}% 1887
\BOOKMARK [3][-]{subsubsection.28.6.7.4}{28.6.7.4 Fill function}{subsection.28.6.7}% 1888
\BOOKMARK [2][-]{subsection.28.6.8}{28.6.8 Class template mask\137array}{section.28.6}% 1889
\BOOKMARK [3][-]{subsubsection.28.6.8.1}{28.6.8.1 Overview}{subsection.28.6.8}% 1890
\BOOKMARK [3][-]{subsubsection.28.6.8.2}{28.6.8.2 Assignment}{subsection.28.6.8}% 1891
\BOOKMARK [3][-]{subsubsection.28.6.8.3}{28.6.8.3 Compound assignment}{subsection.28.6.8}% 1892
\BOOKMARK [3][-]{subsubsection.28.6.8.4}{28.6.8.4 Fill function}{subsection.28.6.8}% 1893
\BOOKMARK [2][-]{subsection.28.6.9}{28.6.9 Class template indirect\137array}{section.28.6}% 1894
\BOOKMARK [3][-]{subsubsection.28.6.9.1}{28.6.9.1 Overview}{subsection.28.6.9}% 1895
\BOOKMARK [3][-]{subsubsection.28.6.9.2}{28.6.9.2 Assignment}{subsection.28.6.9}% 1896
\BOOKMARK [3][-]{subsubsection.28.6.9.3}{28.6.9.3 Compound assignment}{subsection.28.6.9}% 1897
\BOOKMARK [3][-]{subsubsection.28.6.9.4}{28.6.9.4 Fill function}{subsection.28.6.9}% 1898
\BOOKMARK [2][-]{subsection.28.6.10}{28.6.10 valarray range access}{section.28.6}% 1899
\BOOKMARK [1][-]{section.28.7}{28.7 Mathematical functions for floating-point types}{chapter.28}% 1900
\BOOKMARK [2][-]{subsection.28.7.1}{28.7.1 Header <cmath> synopsis}{section.28.7}% 1901
\BOOKMARK [2][-]{subsection.28.7.2}{28.7.2 Absolute values}{section.28.7}% 1902
\BOOKMARK [2][-]{subsection.28.7.3}{28.7.3 Three-dimensional hypotenuse}{section.28.7}% 1903
\BOOKMARK [2][-]{subsection.28.7.4}{28.7.4 Linear interpolation}{section.28.7}% 1904
\BOOKMARK [2][-]{subsection.28.7.5}{28.7.5 Classification / comparison functions}{section.28.7}% 1905
\BOOKMARK [2][-]{subsection.28.7.6}{28.7.6 Mathematical special functions}{section.28.7}% 1906
\BOOKMARK [3][-]{subsubsection.28.7.6.1}{28.7.6.1 General}{subsection.28.7.6}% 1907
\BOOKMARK [3][-]{subsubsection.28.7.6.2}{28.7.6.2 Associated Laguerre polynomials}{subsection.28.7.6}% 1908
\BOOKMARK [3][-]{subsubsection.28.7.6.3}{28.7.6.3 Associated Legendre functions}{subsection.28.7.6}% 1909
\BOOKMARK [3][-]{subsubsection.28.7.6.4}{28.7.6.4 Beta function}{subsection.28.7.6}% 1910
\BOOKMARK [3][-]{subsubsection.28.7.6.5}{28.7.6.5 Complete elliptic integral of the first kind}{subsection.28.7.6}% 1911
\BOOKMARK [3][-]{subsubsection.28.7.6.6}{28.7.6.6 Complete elliptic integral of the second kind}{subsection.28.7.6}% 1912
\BOOKMARK [3][-]{subsubsection.28.7.6.7}{28.7.6.7 Complete elliptic integral of the third kind}{subsection.28.7.6}% 1913
\BOOKMARK [3][-]{subsubsection.28.7.6.8}{28.7.6.8 Regular modified cylindrical Bessel functions}{subsection.28.7.6}% 1914
\BOOKMARK [3][-]{subsubsection.28.7.6.9}{28.7.6.9 Cylindrical Bessel functions of the first kind}{subsection.28.7.6}% 1915
\BOOKMARK [3][-]{subsubsection.28.7.6.10}{28.7.6.10 Irregular modified cylindrical Bessel functions}{subsection.28.7.6}% 1916
\BOOKMARK [3][-]{subsubsection.28.7.6.11}{28.7.6.11 Cylindrical Neumann functions}{subsection.28.7.6}% 1917
\BOOKMARK [3][-]{subsubsection.28.7.6.12}{28.7.6.12 Incomplete elliptic integral of the first kind}{subsection.28.7.6}% 1918
\BOOKMARK [3][-]{subsubsection.28.7.6.13}{28.7.6.13 Incomplete elliptic integral of the second kind}{subsection.28.7.6}% 1919
\BOOKMARK [3][-]{subsubsection.28.7.6.14}{28.7.6.14 Incomplete elliptic integral of the third kind}{subsection.28.7.6}% 1920
\BOOKMARK [3][-]{subsubsection.28.7.6.15}{28.7.6.15 Exponential integral}{subsection.28.7.6}% 1921
\BOOKMARK [3][-]{subsubsection.28.7.6.16}{28.7.6.16 Hermite polynomials}{subsection.28.7.6}% 1922
\BOOKMARK [3][-]{subsubsection.28.7.6.17}{28.7.6.17 Laguerre polynomials}{subsection.28.7.6}% 1923
\BOOKMARK [3][-]{subsubsection.28.7.6.18}{28.7.6.18 Legendre polynomials}{subsection.28.7.6}% 1924
\BOOKMARK [3][-]{subsubsection.28.7.6.19}{28.7.6.19 Riemann zeta function}{subsection.28.7.6}% 1925
\BOOKMARK [3][-]{subsubsection.28.7.6.20}{28.7.6.20 Spherical Bessel functions of the first kind}{subsection.28.7.6}% 1926
\BOOKMARK [3][-]{subsubsection.28.7.6.21}{28.7.6.21 Spherical associated Legendre functions}{subsection.28.7.6}% 1927
\BOOKMARK [3][-]{subsubsection.28.7.6.22}{28.7.6.22 Spherical Neumann functions}{subsection.28.7.6}% 1928
\BOOKMARK [1][-]{section.28.8}{28.8 Numbers}{chapter.28}% 1929
\BOOKMARK [2][-]{subsection.28.8.1}{28.8.1 Header <numbers> synopsis}{section.28.8}% 1930
\BOOKMARK [2][-]{subsection.28.8.2}{28.8.2 Mathematical constants}{section.28.8}% 1931
\BOOKMARK [0][-]{chapter.29}{29 Time library}{}% 1932
\BOOKMARK [1][-]{section.29.1}{29.1 General}{chapter.29}% 1933
\BOOKMARK [1][-]{section.29.2}{29.2 Header <chrono> synopsis}{chapter.29}% 1934
\BOOKMARK [1][-]{section.29.3}{29.3 Cpp17Clock requirements}{chapter.29}% 1935
\BOOKMARK [1][-]{section.29.4}{29.4 Time-related traits}{chapter.29}% 1936
\BOOKMARK [2][-]{subsection.29.4.1}{29.4.1 treat\137as\137floating\137point}{section.29.4}% 1937
\BOOKMARK [2][-]{subsection.29.4.2}{29.4.2 duration\137values}{section.29.4}% 1938
\BOOKMARK [2][-]{subsection.29.4.3}{29.4.3 Specializations of common\137type}{section.29.4}% 1939
\BOOKMARK [2][-]{subsection.29.4.4}{29.4.4 Class template is\137clock}{section.29.4}% 1940
\BOOKMARK [1][-]{section.29.5}{29.5 Class template duration}{chapter.29}% 1941
\BOOKMARK [2][-]{subsection.29.5.1}{29.5.1 General}{section.29.5}% 1942
\BOOKMARK [2][-]{subsection.29.5.2}{29.5.2 Constructors}{section.29.5}% 1943
\BOOKMARK [2][-]{subsection.29.5.3}{29.5.3 Observer}{section.29.5}% 1944
\BOOKMARK [2][-]{subsection.29.5.4}{29.5.4 Arithmetic}{section.29.5}% 1945
\BOOKMARK [2][-]{subsection.29.5.5}{29.5.5 Special values}{section.29.5}% 1946
\BOOKMARK [2][-]{subsection.29.5.6}{29.5.6 Non-member arithmetic}{section.29.5}% 1947
\BOOKMARK [2][-]{subsection.29.5.7}{29.5.7 Comparisons}{section.29.5}% 1948
\BOOKMARK [2][-]{subsection.29.5.8}{29.5.8 Conversions}{section.29.5}% 1949
\BOOKMARK [2][-]{subsection.29.5.9}{29.5.9 Suffixes for duration literals}{section.29.5}% 1950
\BOOKMARK [2][-]{subsection.29.5.10}{29.5.10 Algorithms}{section.29.5}% 1951
\BOOKMARK [2][-]{subsection.29.5.11}{29.5.11 I/O}{section.29.5}% 1952
\BOOKMARK [1][-]{section.29.6}{29.6 Class template time\137point}{chapter.29}% 1953
\BOOKMARK [2][-]{subsection.29.6.1}{29.6.1 General}{section.29.6}% 1954
\BOOKMARK [2][-]{subsection.29.6.2}{29.6.2 Constructors}{section.29.6}% 1955
\BOOKMARK [2][-]{subsection.29.6.3}{29.6.3 Observer}{section.29.6}% 1956
\BOOKMARK [2][-]{subsection.29.6.4}{29.6.4 Arithmetic}{section.29.6}% 1957
\BOOKMARK [2][-]{subsection.29.6.5}{29.6.5 Special values}{section.29.6}% 1958
\BOOKMARK [2][-]{subsection.29.6.6}{29.6.6 Non-member arithmetic}{section.29.6}% 1959
\BOOKMARK [2][-]{subsection.29.6.7}{29.6.7 Comparisons}{section.29.6}% 1960
\BOOKMARK [2][-]{subsection.29.6.8}{29.6.8 Conversions}{section.29.6}% 1961
\BOOKMARK [1][-]{section.29.7}{29.7 Clocks}{chapter.29}% 1962
\BOOKMARK [2][-]{subsection.29.7.1}{29.7.1 General}{section.29.7}% 1963
\BOOKMARK [2][-]{subsection.29.7.2}{29.7.2 Class system\137clock}{section.29.7}% 1964
\BOOKMARK [3][-]{subsubsection.29.7.2.1}{29.7.2.1 Overview}{subsection.29.7.2}% 1965
\BOOKMARK [3][-]{subsubsection.29.7.2.2}{29.7.2.2 Members}{subsection.29.7.2}% 1966
\BOOKMARK [3][-]{subsubsection.29.7.2.3}{29.7.2.3 Non-member functions}{subsection.29.7.2}% 1967
\BOOKMARK [2][-]{subsection.29.7.3}{29.7.3 Class utc\137clock}{section.29.7}% 1968
\BOOKMARK [3][-]{subsubsection.29.7.3.1}{29.7.3.1 Overview}{subsection.29.7.3}% 1969
\BOOKMARK [3][-]{subsubsection.29.7.3.2}{29.7.3.2 Member functions}{subsection.29.7.3}% 1970
\BOOKMARK [3][-]{subsubsection.29.7.3.3}{29.7.3.3 Non-member functions}{subsection.29.7.3}% 1971
\BOOKMARK [2][-]{subsection.29.7.4}{29.7.4 Class tai\137clock}{section.29.7}% 1972
\BOOKMARK [3][-]{subsubsection.29.7.4.1}{29.7.4.1 Overview}{subsection.29.7.4}% 1973
\BOOKMARK [3][-]{subsubsection.29.7.4.2}{29.7.4.2 Member functions}{subsection.29.7.4}% 1974
\BOOKMARK [3][-]{subsubsection.29.7.4.3}{29.7.4.3 Non-member functions}{subsection.29.7.4}% 1975
\BOOKMARK [2][-]{subsection.29.7.5}{29.7.5 Class gps\137clock}{section.29.7}% 1976
\BOOKMARK [3][-]{subsubsection.29.7.5.1}{29.7.5.1 Overview}{subsection.29.7.5}% 1977
\BOOKMARK [3][-]{subsubsection.29.7.5.2}{29.7.5.2 Member functions}{subsection.29.7.5}% 1978
\BOOKMARK [3][-]{subsubsection.29.7.5.3}{29.7.5.3 Non-member functions}{subsection.29.7.5}% 1979
\BOOKMARK [2][-]{subsection.29.7.6}{29.7.6 Type file\137clock}{section.29.7}% 1980
\BOOKMARK [3][-]{subsubsection.29.7.6.1}{29.7.6.1 Overview}{subsection.29.7.6}% 1981
\BOOKMARK [3][-]{subsubsection.29.7.6.2}{29.7.6.2 Member functions}{subsection.29.7.6}% 1982
\BOOKMARK [3][-]{subsubsection.29.7.6.3}{29.7.6.3 Non-member functions}{subsection.29.7.6}% 1983
\BOOKMARK [2][-]{subsection.29.7.7}{29.7.7 Class steady\137clock}{section.29.7}% 1984
\BOOKMARK [2][-]{subsection.29.7.8}{29.7.8 Class high\137resolution\137clock}{section.29.7}% 1985
\BOOKMARK [2][-]{subsection.29.7.9}{29.7.9 Local time}{section.29.7}% 1986
\BOOKMARK [2][-]{subsection.29.7.10}{29.7.10 time\137point conversions}{section.29.7}% 1987
\BOOKMARK [3][-]{subsubsection.29.7.10.1}{29.7.10.1 Class template clock\137time\137conversion}{subsection.29.7.10}% 1988
\BOOKMARK [3][-]{subsubsection.29.7.10.2}{29.7.10.2 Identity conversions}{subsection.29.7.10}% 1989
\BOOKMARK [3][-]{subsubsection.29.7.10.3}{29.7.10.3 Conversions between system\137clock and utc\137clock}{subsection.29.7.10}% 1990
\BOOKMARK [3][-]{subsubsection.29.7.10.4}{29.7.10.4 Conversions between system\137clock and other clocks}{subsection.29.7.10}% 1991
\BOOKMARK [3][-]{subsubsection.29.7.10.5}{29.7.10.5 Conversions between utc\137clock and other clocks}{subsection.29.7.10}% 1992
\BOOKMARK [3][-]{subsubsection.29.7.10.6}{29.7.10.6 Function template clock\137cast}{subsection.29.7.10}% 1993
\BOOKMARK [1][-]{section.29.8}{29.8 The civil calendar}{chapter.29}% 1994
\BOOKMARK [2][-]{subsection.29.8.1}{29.8.1 In general}{section.29.8}% 1995
\BOOKMARK [2][-]{subsection.29.8.2}{29.8.2 Class last\137spec}{section.29.8}% 1996
\BOOKMARK [2][-]{subsection.29.8.3}{29.8.3 Class day}{section.29.8}% 1997
\BOOKMARK [3][-]{subsubsection.29.8.3.1}{29.8.3.1 Overview}{subsection.29.8.3}% 1998
\BOOKMARK [3][-]{subsubsection.29.8.3.2}{29.8.3.2 Member functions}{subsection.29.8.3}% 1999
\BOOKMARK [3][-]{subsubsection.29.8.3.3}{29.8.3.3 Non-member functions}{subsection.29.8.3}% 2000
\BOOKMARK [2][-]{subsection.29.8.4}{29.8.4 Class month}{section.29.8}% 2001
\BOOKMARK [3][-]{subsubsection.29.8.4.1}{29.8.4.1 Overview}{subsection.29.8.4}% 2002
\BOOKMARK [3][-]{subsubsection.29.8.4.2}{29.8.4.2 Member functions}{subsection.29.8.4}% 2003
\BOOKMARK [3][-]{subsubsection.29.8.4.3}{29.8.4.3 Non-member functions}{subsection.29.8.4}% 2004
\BOOKMARK [2][-]{subsection.29.8.5}{29.8.5 Class year}{section.29.8}% 2005
\BOOKMARK [3][-]{subsubsection.29.8.5.1}{29.8.5.1 Overview}{subsection.29.8.5}% 2006
\BOOKMARK [3][-]{subsubsection.29.8.5.2}{29.8.5.2 Member functions}{subsection.29.8.5}% 2007
\BOOKMARK [3][-]{subsubsection.29.8.5.3}{29.8.5.3 Non-member functions}{subsection.29.8.5}% 2008
\BOOKMARK [2][-]{subsection.29.8.6}{29.8.6 Class weekday}{section.29.8}% 2009
\BOOKMARK [3][-]{subsubsection.29.8.6.1}{29.8.6.1 Overview}{subsection.29.8.6}% 2010
\BOOKMARK [3][-]{subsubsection.29.8.6.2}{29.8.6.2 Member functions}{subsection.29.8.6}% 2011
\BOOKMARK [3][-]{subsubsection.29.8.6.3}{29.8.6.3 Non-member functions}{subsection.29.8.6}% 2012
\BOOKMARK [2][-]{subsection.29.8.7}{29.8.7 Class weekday\137indexed}{section.29.8}% 2013
\BOOKMARK [3][-]{subsubsection.29.8.7.1}{29.8.7.1 Overview}{subsection.29.8.7}% 2014
\BOOKMARK [3][-]{subsubsection.29.8.7.2}{29.8.7.2 Member functions}{subsection.29.8.7}% 2015
\BOOKMARK [3][-]{subsubsection.29.8.7.3}{29.8.7.3 Non-member functions}{subsection.29.8.7}% 2016
\BOOKMARK [2][-]{subsection.29.8.8}{29.8.8 Class weekday\137last}{section.29.8}% 2017
\BOOKMARK [3][-]{subsubsection.29.8.8.1}{29.8.8.1 Overview}{subsection.29.8.8}% 2018
\BOOKMARK [3][-]{subsubsection.29.8.8.2}{29.8.8.2 Member functions}{subsection.29.8.8}% 2019
\BOOKMARK [3][-]{subsubsection.29.8.8.3}{29.8.8.3 Non-member functions}{subsection.29.8.8}% 2020
\BOOKMARK [2][-]{subsection.29.8.9}{29.8.9 Class month\137day}{section.29.8}% 2021
\BOOKMARK [3][-]{subsubsection.29.8.9.1}{29.8.9.1 Overview}{subsection.29.8.9}% 2022
\BOOKMARK [3][-]{subsubsection.29.8.9.2}{29.8.9.2 Member functions}{subsection.29.8.9}% 2023
\BOOKMARK [3][-]{subsubsection.29.8.9.3}{29.8.9.3 Non-member functions}{subsection.29.8.9}% 2024
\BOOKMARK [2][-]{subsection.29.8.10}{29.8.10 Class month\137day\137last}{section.29.8}% 2025
\BOOKMARK [2][-]{subsection.29.8.11}{29.8.11 Class month\137weekday}{section.29.8}% 2026
\BOOKMARK [3][-]{subsubsection.29.8.11.1}{29.8.11.1 Overview}{subsection.29.8.11}% 2027
\BOOKMARK [3][-]{subsubsection.29.8.11.2}{29.8.11.2 Member functions}{subsection.29.8.11}% 2028
\BOOKMARK [3][-]{subsubsection.29.8.11.3}{29.8.11.3 Non-member functions}{subsection.29.8.11}% 2029
\BOOKMARK [2][-]{subsection.29.8.12}{29.8.12 Class month\137weekday\137last}{section.29.8}% 2030
\BOOKMARK [3][-]{subsubsection.29.8.12.1}{29.8.12.1 Overview}{subsection.29.8.12}% 2031
\BOOKMARK [3][-]{subsubsection.29.8.12.2}{29.8.12.2 Member functions}{subsection.29.8.12}% 2032
\BOOKMARK [3][-]{subsubsection.29.8.12.3}{29.8.12.3 Non-member functions}{subsection.29.8.12}% 2033
\BOOKMARK [2][-]{subsection.29.8.13}{29.8.13 Class year\137month}{section.29.8}% 2034
\BOOKMARK [3][-]{subsubsection.29.8.13.1}{29.8.13.1 Overview}{subsection.29.8.13}% 2035
\BOOKMARK [3][-]{subsubsection.29.8.13.2}{29.8.13.2 Member functions}{subsection.29.8.13}% 2036
\BOOKMARK [3][-]{subsubsection.29.8.13.3}{29.8.13.3 Non-member functions}{subsection.29.8.13}% 2037
\BOOKMARK [2][-]{subsection.29.8.14}{29.8.14 Class year\137month\137day}{section.29.8}% 2038
\BOOKMARK [3][-]{subsubsection.29.8.14.1}{29.8.14.1 Overview}{subsection.29.8.14}% 2039
\BOOKMARK [3][-]{subsubsection.29.8.14.2}{29.8.14.2 Member functions}{subsection.29.8.14}% 2040
\BOOKMARK [3][-]{subsubsection.29.8.14.3}{29.8.14.3 Non-member functions}{subsection.29.8.14}% 2041
\BOOKMARK [2][-]{subsection.29.8.15}{29.8.15 Class year\137month\137day\137last}{section.29.8}% 2042
\BOOKMARK [3][-]{subsubsection.29.8.15.1}{29.8.15.1 Overview}{subsection.29.8.15}% 2043
\BOOKMARK [3][-]{subsubsection.29.8.15.2}{29.8.15.2 Member functions}{subsection.29.8.15}% 2044
\BOOKMARK [3][-]{subsubsection.29.8.15.3}{29.8.15.3 Non-member functions}{subsection.29.8.15}% 2045
\BOOKMARK [2][-]{subsection.29.8.16}{29.8.16 Class year\137month\137weekday}{section.29.8}% 2046
\BOOKMARK [3][-]{subsubsection.29.8.16.1}{29.8.16.1 Overview}{subsection.29.8.16}% 2047
\BOOKMARK [3][-]{subsubsection.29.8.16.2}{29.8.16.2 Member functions}{subsection.29.8.16}% 2048
\BOOKMARK [3][-]{subsubsection.29.8.16.3}{29.8.16.3 Non-member functions}{subsection.29.8.16}% 2049
\BOOKMARK [2][-]{subsection.29.8.17}{29.8.17 Class year\137month\137weekday\137last}{section.29.8}% 2050
\BOOKMARK [3][-]{subsubsection.29.8.17.1}{29.8.17.1 Overview}{subsection.29.8.17}% 2051
\BOOKMARK [3][-]{subsubsection.29.8.17.2}{29.8.17.2 Member functions}{subsection.29.8.17}% 2052
\BOOKMARK [3][-]{subsubsection.29.8.17.3}{29.8.17.3 Non-member functions}{subsection.29.8.17}% 2053
\BOOKMARK [2][-]{subsection.29.8.18}{29.8.18 Conventional syntax operators}{section.29.8}% 2054
\BOOKMARK [1][-]{section.29.9}{29.9 Class template hh\137mm\137ss}{chapter.29}% 2055
\BOOKMARK [2][-]{subsection.29.9.1}{29.9.1 Overview}{section.29.9}% 2056
\BOOKMARK [2][-]{subsection.29.9.2}{29.9.2 Members}{section.29.9}% 2057
\BOOKMARK [2][-]{subsection.29.9.3}{29.9.3 Non-members}{section.29.9}% 2058
\BOOKMARK [1][-]{section.29.10}{29.10 12/24 hours functions}{chapter.29}% 2059
\BOOKMARK [1][-]{section.29.11}{29.11 Time zones}{chapter.29}% 2060
\BOOKMARK [2][-]{subsection.29.11.1}{29.11.1 In general}{section.29.11}% 2061
\BOOKMARK [2][-]{subsection.29.11.2}{29.11.2 Time zone database}{section.29.11}% 2062
\BOOKMARK [3][-]{subsubsection.29.11.2.1}{29.11.2.1 Class tzdb}{subsection.29.11.2}% 2063
\BOOKMARK [3][-]{subsubsection.29.11.2.2}{29.11.2.2 Class tzdb\137list}{subsection.29.11.2}% 2064
\BOOKMARK [3][-]{subsubsection.29.11.2.3}{29.11.2.3 Time zone database access}{subsection.29.11.2}% 2065
\BOOKMARK [3][-]{subsubsection.29.11.2.4}{29.11.2.4 Remote time zone database support}{subsection.29.11.2}% 2066
\BOOKMARK [2][-]{subsection.29.11.3}{29.11.3 Exception classes}{section.29.11}% 2067
\BOOKMARK [3][-]{subsubsection.29.11.3.1}{29.11.3.1 Class nonexistent\137local\137time}{subsection.29.11.3}% 2068
\BOOKMARK [3][-]{subsubsection.29.11.3.2}{29.11.3.2 Class ambiguous\137local\137time}{subsection.29.11.3}% 2069
\BOOKMARK [2][-]{subsection.29.11.4}{29.11.4 Information classes}{section.29.11}% 2070
\BOOKMARK [3][-]{subsubsection.29.11.4.1}{29.11.4.1 Class sys\137info}{subsection.29.11.4}% 2071
\BOOKMARK [3][-]{subsubsection.29.11.4.2}{29.11.4.2 Class local\137info}{subsection.29.11.4}% 2072
\BOOKMARK [2][-]{subsection.29.11.5}{29.11.5 Class time\137zone}{section.29.11}% 2073
\BOOKMARK [3][-]{subsubsection.29.11.5.1}{29.11.5.1 Overview}{subsection.29.11.5}% 2074
\BOOKMARK [3][-]{subsubsection.29.11.5.2}{29.11.5.2 Member functions}{subsection.29.11.5}% 2075
\BOOKMARK [3][-]{subsubsection.29.11.5.3}{29.11.5.3 Non-member functions}{subsection.29.11.5}% 2076
\BOOKMARK [2][-]{subsection.29.11.6}{29.11.6 Class template zoned\137traits}{section.29.11}% 2077
\BOOKMARK [2][-]{subsection.29.11.7}{29.11.7 Class template zoned\137time}{section.29.11}% 2078
\BOOKMARK [3][-]{subsubsection.29.11.7.1}{29.11.7.1 Overview}{subsection.29.11.7}% 2079
\BOOKMARK [3][-]{subsubsection.29.11.7.2}{29.11.7.2 Constructors}{subsection.29.11.7}% 2080
\BOOKMARK [3][-]{subsubsection.29.11.7.3}{29.11.7.3 Member functions}{subsection.29.11.7}% 2081
\BOOKMARK [3][-]{subsubsection.29.11.7.4}{29.11.7.4 Non-member functions}{subsection.29.11.7}% 2082
\BOOKMARK [2][-]{subsection.29.11.8}{29.11.8 Class leap\137second}{section.29.11}% 2083
\BOOKMARK [3][-]{subsubsection.29.11.8.1}{29.11.8.1 Overview}{subsection.29.11.8}% 2084
\BOOKMARK [3][-]{subsubsection.29.11.8.2}{29.11.8.2 Member functions}{subsection.29.11.8}% 2085
\BOOKMARK [3][-]{subsubsection.29.11.8.3}{29.11.8.3 Non-member functions}{subsection.29.11.8}% 2086
\BOOKMARK [2][-]{subsection.29.11.9}{29.11.9 Class time\137zone\137link}{section.29.11}% 2087
\BOOKMARK [3][-]{subsubsection.29.11.9.1}{29.11.9.1 Overview}{subsection.29.11.9}% 2088
\BOOKMARK [3][-]{subsubsection.29.11.9.2}{29.11.9.2 Member functions}{subsection.29.11.9}% 2089
\BOOKMARK [3][-]{subsubsection.29.11.9.3}{29.11.9.3 Non-member functions}{subsection.29.11.9}% 2090
\BOOKMARK [1][-]{section.29.12}{29.12 Formatting}{chapter.29}% 2091
\BOOKMARK [1][-]{section.29.13}{29.13 Parsing}{chapter.29}% 2092
\BOOKMARK [1][-]{section.29.14}{29.14 Header <ctime> synopsis}{chapter.29}% 2093
\BOOKMARK [0][-]{chapter.30}{30 Localization library}{}% 2094
\BOOKMARK [1][-]{section.30.1}{30.1 General}{chapter.30}% 2095
\BOOKMARK [1][-]{section.30.2}{30.2 Header <locale> synopsis}{chapter.30}% 2096
\BOOKMARK [1][-]{section.30.3}{30.3 Locales}{chapter.30}% 2097
\BOOKMARK [2][-]{subsection.30.3.1}{30.3.1 Class locale}{section.30.3}% 2098
\BOOKMARK [3][-]{subsubsection.30.3.1.1}{30.3.1.1 General}{subsection.30.3.1}% 2099
\BOOKMARK [3][-]{subsubsection.30.3.1.2}{30.3.1.2 Types}{subsection.30.3.1}% 2100
\BOOKMARK [4][-]{paragraph.30.3.1.2.1}{30.3.1.2.1 Type locale::category}{subsubsection.30.3.1.2}% 2101
\BOOKMARK [4][-]{paragraph.30.3.1.2.2}{30.3.1.2.2 Class locale::facet}{subsubsection.30.3.1.2}% 2102
\BOOKMARK [4][-]{paragraph.30.3.1.2.3}{30.3.1.2.3 Class locale::id}{subsubsection.30.3.1.2}% 2103
\BOOKMARK [3][-]{subsubsection.30.3.1.3}{30.3.1.3 Constructors and destructor}{subsection.30.3.1}% 2104
\BOOKMARK [3][-]{subsubsection.30.3.1.4}{30.3.1.4 Members}{subsection.30.3.1}% 2105
\BOOKMARK [3][-]{subsubsection.30.3.1.5}{30.3.1.5 Operators}{subsection.30.3.1}% 2106
\BOOKMARK [3][-]{subsubsection.30.3.1.6}{30.3.1.6 Static members}{subsection.30.3.1}% 2107
\BOOKMARK [2][-]{subsection.30.3.2}{30.3.2 locale globals}{section.30.3}% 2108
\BOOKMARK [2][-]{subsection.30.3.3}{30.3.3 Convenience interfaces}{section.30.3}% 2109
\BOOKMARK [3][-]{subsubsection.30.3.3.1}{30.3.3.1 Character classification}{subsection.30.3.3}% 2110
\BOOKMARK [3][-]{subsubsection.30.3.3.2}{30.3.3.2 Character conversions}{subsection.30.3.3}% 2111
\BOOKMARK [1][-]{section.30.4}{30.4 Standard locale categories}{chapter.30}% 2112
\BOOKMARK [2][-]{subsection.30.4.1}{30.4.1 General}{section.30.4}% 2113
\BOOKMARK [2][-]{subsection.30.4.2}{30.4.2 The ctype category}{section.30.4}% 2114
\BOOKMARK [3][-]{subsubsection.30.4.2.1}{30.4.2.1 General}{subsection.30.4.2}% 2115
\BOOKMARK [3][-]{subsubsection.30.4.2.2}{30.4.2.2 Class template ctype}{subsection.30.4.2}% 2116
\BOOKMARK [4][-]{paragraph.30.4.2.2.1}{30.4.2.2.1 General}{subsubsection.30.4.2.2}% 2117
\BOOKMARK [4][-]{paragraph.30.4.2.2.2}{30.4.2.2.2 ctype members}{subsubsection.30.4.2.2}% 2118
\BOOKMARK [4][-]{paragraph.30.4.2.2.3}{30.4.2.2.3 ctype virtual functions}{subsubsection.30.4.2.2}% 2119
\BOOKMARK [3][-]{subsubsection.30.4.2.3}{30.4.2.3 Class template ctype\137byname}{subsection.30.4.2}% 2120
\BOOKMARK [3][-]{subsubsection.30.4.2.4}{30.4.2.4 ctype<char> specialization}{subsection.30.4.2}% 2121
\BOOKMARK [4][-]{paragraph.30.4.2.4.1}{30.4.2.4.1 General}{subsubsection.30.4.2.4}% 2122
\BOOKMARK [4][-]{paragraph.30.4.2.4.2}{30.4.2.4.2 Destructor}{subsubsection.30.4.2.4}% 2123
\BOOKMARK [4][-]{paragraph.30.4.2.4.3}{30.4.2.4.3 Members}{subsubsection.30.4.2.4}% 2124
\BOOKMARK [4][-]{paragraph.30.4.2.4.4}{30.4.2.4.4 Static members}{subsubsection.30.4.2.4}% 2125
\BOOKMARK [4][-]{paragraph.30.4.2.4.5}{30.4.2.4.5 Virtual functions}{subsubsection.30.4.2.4}% 2126
\BOOKMARK [3][-]{subsubsection.30.4.2.5}{30.4.2.5 Class template codecvt}{subsection.30.4.2}% 2127
\BOOKMARK [4][-]{paragraph.30.4.2.5.1}{30.4.2.5.1 General}{subsubsection.30.4.2.5}% 2128
\BOOKMARK [4][-]{paragraph.30.4.2.5.2}{30.4.2.5.2 Members}{subsubsection.30.4.2.5}% 2129
\BOOKMARK [4][-]{paragraph.30.4.2.5.3}{30.4.2.5.3 Virtual functions}{subsubsection.30.4.2.5}% 2130
\BOOKMARK [3][-]{subsubsection.30.4.2.6}{30.4.2.6 Class template codecvt\137byname}{subsection.30.4.2}% 2131
\BOOKMARK [2][-]{subsection.30.4.3}{30.4.3 The numeric category}{section.30.4}% 2132
\BOOKMARK [3][-]{subsubsection.30.4.3.1}{30.4.3.1 General}{subsection.30.4.3}% 2133
\BOOKMARK [3][-]{subsubsection.30.4.3.2}{30.4.3.2 Class template num\137get}{subsection.30.4.3}% 2134
\BOOKMARK [4][-]{paragraph.30.4.3.2.1}{30.4.3.2.1 General}{subsubsection.30.4.3.2}% 2135
\BOOKMARK [4][-]{paragraph.30.4.3.2.2}{30.4.3.2.2 Members}{subsubsection.30.4.3.2}% 2136
\BOOKMARK [4][-]{paragraph.30.4.3.2.3}{30.4.3.2.3 Virtual functions}{subsubsection.30.4.3.2}% 2137
\BOOKMARK [3][-]{subsubsection.30.4.3.3}{30.4.3.3 Class template num\137put}{subsection.30.4.3}% 2138
\BOOKMARK [4][-]{paragraph.30.4.3.3.1}{30.4.3.3.1 General}{subsubsection.30.4.3.3}% 2139
\BOOKMARK [4][-]{paragraph.30.4.3.3.2}{30.4.3.3.2 Members}{subsubsection.30.4.3.3}% 2140
\BOOKMARK [4][-]{paragraph.30.4.3.3.3}{30.4.3.3.3 Virtual functions}{subsubsection.30.4.3.3}% 2141
\BOOKMARK [2][-]{subsection.30.4.4}{30.4.4 The numeric punctuation facet}{section.30.4}% 2142
\BOOKMARK [3][-]{subsubsection.30.4.4.1}{30.4.4.1 Class template numpunct}{subsection.30.4.4}% 2143
\BOOKMARK [4][-]{paragraph.30.4.4.1.1}{30.4.4.1.1 General}{subsubsection.30.4.4.1}% 2144
\BOOKMARK [4][-]{paragraph.30.4.4.1.2}{30.4.4.1.2 Members}{subsubsection.30.4.4.1}% 2145
\BOOKMARK [4][-]{paragraph.30.4.4.1.3}{30.4.4.1.3 Virtual functions}{subsubsection.30.4.4.1}% 2146
\BOOKMARK [3][-]{subsubsection.30.4.4.2}{30.4.4.2 Class template numpunct\137byname}{subsection.30.4.4}% 2147
\BOOKMARK [2][-]{subsection.30.4.5}{30.4.5 The collate category}{section.30.4}% 2148
\BOOKMARK [3][-]{subsubsection.30.4.5.1}{30.4.5.1 Class template collate}{subsection.30.4.5}% 2149
\BOOKMARK [4][-]{paragraph.30.4.5.1.1}{30.4.5.1.1 General}{subsubsection.30.4.5.1}% 2150
\BOOKMARK [4][-]{paragraph.30.4.5.1.2}{30.4.5.1.2 Members}{subsubsection.30.4.5.1}% 2151
\BOOKMARK [4][-]{paragraph.30.4.5.1.3}{30.4.5.1.3 Virtual functions}{subsubsection.30.4.5.1}% 2152
\BOOKMARK [3][-]{subsubsection.30.4.5.2}{30.4.5.2 Class template collate\137byname}{subsection.30.4.5}% 2153
\BOOKMARK [2][-]{subsection.30.4.6}{30.4.6 The time category}{section.30.4}% 2154
\BOOKMARK [3][-]{subsubsection.30.4.6.1}{30.4.6.1 General}{subsection.30.4.6}% 2155
\BOOKMARK [3][-]{subsubsection.30.4.6.2}{30.4.6.2 Class template time\137get}{subsection.30.4.6}% 2156
\BOOKMARK [4][-]{paragraph.30.4.6.2.1}{30.4.6.2.1 General}{subsubsection.30.4.6.2}% 2157
\BOOKMARK [4][-]{paragraph.30.4.6.2.2}{30.4.6.2.2 Members}{subsubsection.30.4.6.2}% 2158
\BOOKMARK [4][-]{paragraph.30.4.6.2.3}{30.4.6.2.3 Virtual functions}{subsubsection.30.4.6.2}% 2159
\BOOKMARK [3][-]{subsubsection.30.4.6.3}{30.4.6.3 Class template time\137get\137byname}{subsection.30.4.6}% 2160
\BOOKMARK [3][-]{subsubsection.30.4.6.4}{30.4.6.4 Class template time\137put}{subsection.30.4.6}% 2161
\BOOKMARK [4][-]{paragraph.30.4.6.4.1}{30.4.6.4.1 Members}{subsubsection.30.4.6.4}% 2162
\BOOKMARK [4][-]{paragraph.30.4.6.4.2}{30.4.6.4.2 Virtual functions}{subsubsection.30.4.6.4}% 2163
\BOOKMARK [3][-]{subsubsection.30.4.6.5}{30.4.6.5 Class template time\137put\137byname}{subsection.30.4.6}% 2164
\BOOKMARK [2][-]{subsection.30.4.7}{30.4.7 The monetary category}{section.30.4}% 2165
\BOOKMARK [3][-]{subsubsection.30.4.7.1}{30.4.7.1 General}{subsection.30.4.7}% 2166
\BOOKMARK [3][-]{subsubsection.30.4.7.2}{30.4.7.2 Class template money\137get}{subsection.30.4.7}% 2167
\BOOKMARK [4][-]{paragraph.30.4.7.2.1}{30.4.7.2.1 Members}{subsubsection.30.4.7.2}% 2168
\BOOKMARK [4][-]{paragraph.30.4.7.2.2}{30.4.7.2.2 Virtual functions}{subsubsection.30.4.7.2}% 2169
\BOOKMARK [3][-]{subsubsection.30.4.7.3}{30.4.7.3 Class template money\137put}{subsection.30.4.7}% 2170
\BOOKMARK [4][-]{paragraph.30.4.7.3.1}{30.4.7.3.1 Members}{subsubsection.30.4.7.3}% 2171
\BOOKMARK [4][-]{paragraph.30.4.7.3.2}{30.4.7.3.2 Virtual functions}{subsubsection.30.4.7.3}% 2172
\BOOKMARK [3][-]{subsubsection.30.4.7.4}{30.4.7.4 Class template moneypunct}{subsection.30.4.7}% 2173
\BOOKMARK [4][-]{paragraph.30.4.7.4.1}{30.4.7.4.1 General}{subsubsection.30.4.7.4}% 2174
\BOOKMARK [4][-]{paragraph.30.4.7.4.2}{30.4.7.4.2 Members}{subsubsection.30.4.7.4}% 2175
\BOOKMARK [4][-]{paragraph.30.4.7.4.3}{30.4.7.4.3 Virtual functions}{subsubsection.30.4.7.4}% 2176
\BOOKMARK [3][-]{subsubsection.30.4.7.5}{30.4.7.5 Class template moneypunct\137byname}{subsection.30.4.7}% 2177
\BOOKMARK [2][-]{subsection.30.4.8}{30.4.8 The message retrieval category}{section.30.4}% 2178
\BOOKMARK [3][-]{subsubsection.30.4.8.1}{30.4.8.1 General}{subsection.30.4.8}% 2179
\BOOKMARK [3][-]{subsubsection.30.4.8.2}{30.4.8.2 Class template messages}{subsection.30.4.8}% 2180
\BOOKMARK [4][-]{paragraph.30.4.8.2.1}{30.4.8.2.1 General}{subsubsection.30.4.8.2}% 2181
\BOOKMARK [4][-]{paragraph.30.4.8.2.2}{30.4.8.2.2 Members}{subsubsection.30.4.8.2}% 2182
\BOOKMARK [4][-]{paragraph.30.4.8.2.3}{30.4.8.2.3 Virtual functions}{subsubsection.30.4.8.2}% 2183
\BOOKMARK [3][-]{subsubsection.30.4.8.3}{30.4.8.3 Class template messages\137byname}{subsection.30.4.8}% 2184
\BOOKMARK [1][-]{section.30.5}{30.5 C library locales}{chapter.30}% 2185
\BOOKMARK [2][-]{subsection.30.5.1}{30.5.1 Header <clocale> synopsis}{section.30.5}% 2186
\BOOKMARK [2][-]{subsection.30.5.2}{30.5.2 Data races}{section.30.5}% 2187
\BOOKMARK [0][-]{chapter.31}{31 Input/output library}{}% 2188
\BOOKMARK [1][-]{section.31.1}{31.1 General}{chapter.31}% 2189
\BOOKMARK [1][-]{section.31.2}{31.2 Iostreams requirements}{chapter.31}% 2190
\BOOKMARK [2][-]{subsection.31.2.1}{31.2.1 Imbue limitations}{section.31.2}% 2191
\BOOKMARK [2][-]{subsection.31.2.2}{31.2.2 Types}{section.31.2}% 2192
\BOOKMARK [2][-]{subsection.31.2.3}{31.2.3 Positioning type limitations}{section.31.2}% 2193
\BOOKMARK [2][-]{subsection.31.2.4}{31.2.4 Thread safety}{section.31.2}% 2194
\BOOKMARK [1][-]{section.31.3}{31.3 Forward declarations}{chapter.31}% 2195
\BOOKMARK [2][-]{subsection.31.3.1}{31.3.1 Header <iosfwd> synopsis}{section.31.3}% 2196
\BOOKMARK [2][-]{subsection.31.3.2}{31.3.2 Overview}{section.31.3}% 2197
\BOOKMARK [1][-]{section.31.4}{31.4 Standard iostream objects}{chapter.31}% 2198
\BOOKMARK [2][-]{subsection.31.4.1}{31.4.1 Header <iostream> synopsis}{section.31.4}% 2199
\BOOKMARK [2][-]{subsection.31.4.2}{31.4.2 Overview}{section.31.4}% 2200
\BOOKMARK [2][-]{subsection.31.4.3}{31.4.3 Narrow stream objects}{section.31.4}% 2201
\BOOKMARK [2][-]{subsection.31.4.4}{31.4.4 Wide stream objects}{section.31.4}% 2202
\BOOKMARK [1][-]{section.31.5}{31.5 Iostreams base classes}{chapter.31}% 2203
\BOOKMARK [2][-]{subsection.31.5.1}{31.5.1 Header <ios> synopsis}{section.31.5}% 2204
\BOOKMARK [2][-]{subsection.31.5.2}{31.5.2 Class ios\137base}{section.31.5}% 2205
\BOOKMARK [3][-]{subsubsection.31.5.2.1}{31.5.2.1 General}{subsection.31.5.2}% 2206
\BOOKMARK [3][-]{subsubsection.31.5.2.2}{31.5.2.2 Types}{subsection.31.5.2}% 2207
\BOOKMARK [4][-]{paragraph.31.5.2.2.1}{31.5.2.2.1 Class ios\137base::failure}{subsubsection.31.5.2.2}% 2208
\BOOKMARK [4][-]{paragraph.31.5.2.2.2}{31.5.2.2.2 Type ios\137base::fmtflags}{subsubsection.31.5.2.2}% 2209
\BOOKMARK [4][-]{paragraph.31.5.2.2.3}{31.5.2.2.3 Type ios\137base::iostate}{subsubsection.31.5.2.2}% 2210
\BOOKMARK [4][-]{paragraph.31.5.2.2.4}{31.5.2.2.4 Type ios\137base::openmode}{subsubsection.31.5.2.2}% 2211
\BOOKMARK [4][-]{paragraph.31.5.2.2.5}{31.5.2.2.5 Type ios\137base::seekdir}{subsubsection.31.5.2.2}% 2212
\BOOKMARK [4][-]{paragraph.31.5.2.2.6}{31.5.2.2.6 Class ios\137base::Init}{subsubsection.31.5.2.2}% 2213
\BOOKMARK [3][-]{subsubsection.31.5.2.3}{31.5.2.3 State functions}{subsection.31.5.2}% 2214
\BOOKMARK [3][-]{subsubsection.31.5.2.4}{31.5.2.4 Functions}{subsection.31.5.2}% 2215
\BOOKMARK [3][-]{subsubsection.31.5.2.5}{31.5.2.5 Static members}{subsection.31.5.2}% 2216
\BOOKMARK [3][-]{subsubsection.31.5.2.6}{31.5.2.6 Storage functions}{subsection.31.5.2}% 2217
\BOOKMARK [3][-]{subsubsection.31.5.2.7}{31.5.2.7 Callbacks}{subsection.31.5.2}% 2218
\BOOKMARK [3][-]{subsubsection.31.5.2.8}{31.5.2.8 Constructors and destructor}{subsection.31.5.2}% 2219
\BOOKMARK [2][-]{subsection.31.5.3}{31.5.3 Class template fpos}{section.31.5}% 2220
\BOOKMARK [3][-]{subsubsection.31.5.3.1}{31.5.3.1 Members}{subsection.31.5.3}% 2221
\BOOKMARK [3][-]{subsubsection.31.5.3.2}{31.5.3.2 Requirements}{subsection.31.5.3}% 2222
\BOOKMARK [2][-]{subsection.31.5.4}{31.5.4 Class template basic\137ios}{section.31.5}% 2223
\BOOKMARK [3][-]{subsubsection.31.5.4.1}{31.5.4.1 Overview}{subsection.31.5.4}% 2224
\BOOKMARK [3][-]{subsubsection.31.5.4.2}{31.5.4.2 Constructors}{subsection.31.5.4}% 2225
\BOOKMARK [3][-]{subsubsection.31.5.4.3}{31.5.4.3 Member functions}{subsection.31.5.4}% 2226
\BOOKMARK [3][-]{subsubsection.31.5.4.4}{31.5.4.4 Flags functions}{subsection.31.5.4}% 2227
\BOOKMARK [2][-]{subsection.31.5.5}{31.5.5 ios\137base manipulators}{section.31.5}% 2228
\BOOKMARK [3][-]{subsubsection.31.5.5.1}{31.5.5.1 fmtflags manipulators}{subsection.31.5.5}% 2229
\BOOKMARK [3][-]{subsubsection.31.5.5.2}{31.5.5.2 adjustfield manipulators}{subsection.31.5.5}% 2230
\BOOKMARK [3][-]{subsubsection.31.5.5.3}{31.5.5.3 basefield manipulators}{subsection.31.5.5}% 2231
\BOOKMARK [3][-]{subsubsection.31.5.5.4}{31.5.5.4 floatfield manipulators}{subsection.31.5.5}% 2232
\BOOKMARK [2][-]{subsection.31.5.6}{31.5.6 Error reporting}{section.31.5}% 2233
\BOOKMARK [1][-]{section.31.6}{31.6 Stream buffers}{chapter.31}% 2234
\BOOKMARK [2][-]{subsection.31.6.1}{31.6.1 Header <streambuf> synopsis}{section.31.6}% 2235
\BOOKMARK [2][-]{subsection.31.6.2}{31.6.2 Stream buffer requirements}{section.31.6}% 2236
\BOOKMARK [2][-]{subsection.31.6.3}{31.6.3 Class template basic\137streambuf}{section.31.6}% 2237
\BOOKMARK [3][-]{subsubsection.31.6.3.1}{31.6.3.1 General}{subsection.31.6.3}% 2238
\BOOKMARK [3][-]{subsubsection.31.6.3.2}{31.6.3.2 Constructors}{subsection.31.6.3}% 2239
\BOOKMARK [3][-]{subsubsection.31.6.3.3}{31.6.3.3 Public member functions}{subsection.31.6.3}% 2240
\BOOKMARK [4][-]{paragraph.31.6.3.3.1}{31.6.3.3.1 Locales}{subsubsection.31.6.3.3}% 2241
\BOOKMARK [4][-]{paragraph.31.6.3.3.2}{31.6.3.3.2 Buffer management and positioning}{subsubsection.31.6.3.3}% 2242
\BOOKMARK [4][-]{paragraph.31.6.3.3.3}{31.6.3.3.3 Get area}{subsubsection.31.6.3.3}% 2243
\BOOKMARK [4][-]{paragraph.31.6.3.3.4}{31.6.3.3.4 Putback}{subsubsection.31.6.3.3}% 2244
\BOOKMARK [4][-]{paragraph.31.6.3.3.5}{31.6.3.3.5 Put area}{subsubsection.31.6.3.3}% 2245
\BOOKMARK [3][-]{subsubsection.31.6.3.4}{31.6.3.4 Protected member functions}{subsection.31.6.3}% 2246
\BOOKMARK [4][-]{paragraph.31.6.3.4.1}{31.6.3.4.1 Assignment}{subsubsection.31.6.3.4}% 2247
\BOOKMARK [4][-]{paragraph.31.6.3.4.2}{31.6.3.4.2 Get area access}{subsubsection.31.6.3.4}% 2248
\BOOKMARK [4][-]{paragraph.31.6.3.4.3}{31.6.3.4.3 Put area access}{subsubsection.31.6.3.4}% 2249
\BOOKMARK [3][-]{subsubsection.31.6.3.5}{31.6.3.5 Virtual functions}{subsection.31.6.3}% 2250
\BOOKMARK [4][-]{paragraph.31.6.3.5.1}{31.6.3.5.1 Locales}{subsubsection.31.6.3.5}% 2251
\BOOKMARK [4][-]{paragraph.31.6.3.5.2}{31.6.3.5.2 Buffer management and positioning}{subsubsection.31.6.3.5}% 2252
\BOOKMARK [4][-]{paragraph.31.6.3.5.3}{31.6.3.5.3 Get area}{subsubsection.31.6.3.5}% 2253
\BOOKMARK [4][-]{paragraph.31.6.3.5.4}{31.6.3.5.4 Putback}{subsubsection.31.6.3.5}% 2254
\BOOKMARK [4][-]{paragraph.31.6.3.5.5}{31.6.3.5.5 Put area}{subsubsection.31.6.3.5}% 2255
\BOOKMARK [1][-]{section.31.7}{31.7 Formatting and manipulators}{chapter.31}% 2256
\BOOKMARK [2][-]{subsection.31.7.1}{31.7.1 Header <istream> synopsis}{section.31.7}% 2257
\BOOKMARK [2][-]{subsection.31.7.2}{31.7.2 Header <ostream> synopsis}{section.31.7}% 2258
\BOOKMARK [2][-]{subsection.31.7.3}{31.7.3 Header <iomanip> synopsis}{section.31.7}% 2259
\BOOKMARK [2][-]{subsection.31.7.4}{31.7.4 Input streams}{section.31.7}% 2260
\BOOKMARK [3][-]{subsubsection.31.7.4.1}{31.7.4.1 General}{subsection.31.7.4}% 2261
\BOOKMARK [3][-]{subsubsection.31.7.4.2}{31.7.4.2 Class template basic\137istream}{subsection.31.7.4}% 2262
\BOOKMARK [4][-]{paragraph.31.7.4.2.1}{31.7.4.2.1 General}{subsubsection.31.7.4.2}% 2263
\BOOKMARK [4][-]{paragraph.31.7.4.2.2}{31.7.4.2.2 Constructors}{subsubsection.31.7.4.2}% 2264
\BOOKMARK [4][-]{paragraph.31.7.4.2.3}{31.7.4.2.3 Assignment and swap}{subsubsection.31.7.4.2}% 2265
\BOOKMARK [4][-]{paragraph.31.7.4.2.4}{31.7.4.2.4 Class basic\137istream::sentry}{subsubsection.31.7.4.2}% 2266
\BOOKMARK [3][-]{subsubsection.31.7.4.3}{31.7.4.3 Formatted input functions}{subsection.31.7.4}% 2267
\BOOKMARK [4][-]{paragraph.31.7.4.3.1}{31.7.4.3.1 Common requirements}{subsubsection.31.7.4.3}% 2268
\BOOKMARK [4][-]{paragraph.31.7.4.3.2}{31.7.4.3.2 Arithmetic extractors}{subsubsection.31.7.4.3}% 2269
\BOOKMARK [4][-]{paragraph.31.7.4.3.3}{31.7.4.3.3 basic\137istream::operator>>}{subsubsection.31.7.4.3}% 2270
\BOOKMARK [3][-]{subsubsection.31.7.4.4}{31.7.4.4 Unformatted input functions}{subsection.31.7.4}% 2271
\BOOKMARK [3][-]{subsubsection.31.7.4.5}{31.7.4.5 Standard basic\137istream manipulators}{subsection.31.7.4}% 2272
\BOOKMARK [3][-]{subsubsection.31.7.4.6}{31.7.4.6 Rvalue stream extraction}{subsection.31.7.4}% 2273
\BOOKMARK [3][-]{subsubsection.31.7.4.7}{31.7.4.7 Class template basic\137iostream}{subsection.31.7.4}% 2274
\BOOKMARK [4][-]{paragraph.31.7.4.7.1}{31.7.4.7.1 General}{subsubsection.31.7.4.7}% 2275
\BOOKMARK [4][-]{paragraph.31.7.4.7.2}{31.7.4.7.2 Constructors}{subsubsection.31.7.4.7}% 2276
\BOOKMARK [4][-]{paragraph.31.7.4.7.3}{31.7.4.7.3 Destructor}{subsubsection.31.7.4.7}% 2277
\BOOKMARK [4][-]{paragraph.31.7.4.7.4}{31.7.4.7.4 Assignment and swap}{subsubsection.31.7.4.7}% 2278
\BOOKMARK [2][-]{subsection.31.7.5}{31.7.5 Output streams}{section.31.7}% 2279
\BOOKMARK [3][-]{subsubsection.31.7.5.1}{31.7.5.1 General}{subsection.31.7.5}% 2280
\BOOKMARK [3][-]{subsubsection.31.7.5.2}{31.7.5.2 Class template basic\137ostream}{subsection.31.7.5}% 2281
\BOOKMARK [4][-]{paragraph.31.7.5.2.1}{31.7.5.2.1 General}{subsubsection.31.7.5.2}% 2282
\BOOKMARK [4][-]{paragraph.31.7.5.2.2}{31.7.5.2.2 Constructors}{subsubsection.31.7.5.2}% 2283
\BOOKMARK [4][-]{paragraph.31.7.5.2.3}{31.7.5.2.3 Assignment and swap}{subsubsection.31.7.5.2}% 2284
\BOOKMARK [4][-]{paragraph.31.7.5.2.4}{31.7.5.2.4 Class basic\137ostream::sentry}{subsubsection.31.7.5.2}% 2285
\BOOKMARK [4][-]{paragraph.31.7.5.2.5}{31.7.5.2.5 Seek members}{subsubsection.31.7.5.2}% 2286
\BOOKMARK [3][-]{subsubsection.31.7.5.3}{31.7.5.3 Formatted output functions}{subsection.31.7.5}% 2287
\BOOKMARK [4][-]{paragraph.31.7.5.3.1}{31.7.5.3.1 Common requirements}{subsubsection.31.7.5.3}% 2288
\BOOKMARK [4][-]{paragraph.31.7.5.3.2}{31.7.5.3.2 Arithmetic inserters}{subsubsection.31.7.5.3}% 2289
\BOOKMARK [4][-]{paragraph.31.7.5.3.3}{31.7.5.3.3 basic\137ostream::operator<<}{subsubsection.31.7.5.3}% 2290
\BOOKMARK [4][-]{paragraph.31.7.5.3.4}{31.7.5.3.4 Character inserter function templates}{subsubsection.31.7.5.3}% 2291
\BOOKMARK [3][-]{subsubsection.31.7.5.4}{31.7.5.4 Unformatted output functions}{subsection.31.7.5}% 2292
\BOOKMARK [3][-]{subsubsection.31.7.5.5}{31.7.5.5 Standard manipulators}{subsection.31.7.5}% 2293
\BOOKMARK [3][-]{subsubsection.31.7.5.6}{31.7.5.6 Rvalue stream insertion}{subsection.31.7.5}% 2294
\BOOKMARK [2][-]{subsection.31.7.6}{31.7.6 Standard manipulators}{section.31.7}% 2295
\BOOKMARK [2][-]{subsection.31.7.7}{31.7.7 Extended manipulators}{section.31.7}% 2296
\BOOKMARK [2][-]{subsection.31.7.8}{31.7.8 Quoted manipulators}{section.31.7}% 2297
\BOOKMARK [1][-]{section.31.8}{31.8 String-based streams}{chapter.31}% 2298
\BOOKMARK [2][-]{subsection.31.8.1}{31.8.1 Header <sstream> synopsis}{section.31.8}% 2299
\BOOKMARK [2][-]{subsection.31.8.2}{31.8.2 Class template basic\137stringbuf}{section.31.8}% 2300
\BOOKMARK [3][-]{subsubsection.31.8.2.1}{31.8.2.1 General}{subsection.31.8.2}% 2301
\BOOKMARK [3][-]{subsubsection.31.8.2.2}{31.8.2.2 Constructors}{subsection.31.8.2}% 2302
\BOOKMARK [3][-]{subsubsection.31.8.2.3}{31.8.2.3 Assignment and swap}{subsection.31.8.2}% 2303
\BOOKMARK [3][-]{subsubsection.31.8.2.4}{31.8.2.4 Member functions}{subsection.31.8.2}% 2304
\BOOKMARK [3][-]{subsubsection.31.8.2.5}{31.8.2.5 Overridden virtual functions}{subsection.31.8.2}% 2305
\BOOKMARK [2][-]{subsection.31.8.3}{31.8.3 Class template basic\137istringstream}{section.31.8}% 2306
\BOOKMARK [3][-]{subsubsection.31.8.3.1}{31.8.3.1 General}{subsection.31.8.3}% 2307
\BOOKMARK [3][-]{subsubsection.31.8.3.2}{31.8.3.2 Constructors}{subsection.31.8.3}% 2308
\BOOKMARK [3][-]{subsubsection.31.8.3.3}{31.8.3.3 Swap}{subsection.31.8.3}% 2309
\BOOKMARK [3][-]{subsubsection.31.8.3.4}{31.8.3.4 Member functions}{subsection.31.8.3}% 2310
\BOOKMARK [2][-]{subsection.31.8.4}{31.8.4 Class template basic\137ostringstream}{section.31.8}% 2311
\BOOKMARK [3][-]{subsubsection.31.8.4.1}{31.8.4.1 General}{subsection.31.8.4}% 2312
\BOOKMARK [3][-]{subsubsection.31.8.4.2}{31.8.4.2 Constructors}{subsection.31.8.4}% 2313
\BOOKMARK [3][-]{subsubsection.31.8.4.3}{31.8.4.3 Swap}{subsection.31.8.4}% 2314
\BOOKMARK [3][-]{subsubsection.31.8.4.4}{31.8.4.4 Member functions}{subsection.31.8.4}% 2315
\BOOKMARK [2][-]{subsection.31.8.5}{31.8.5 Class template basic\137stringstream}{section.31.8}% 2316
\BOOKMARK [3][-]{subsubsection.31.8.5.1}{31.8.5.1 General}{subsection.31.8.5}% 2317
\BOOKMARK [3][-]{subsubsection.31.8.5.2}{31.8.5.2 Constructors}{subsection.31.8.5}% 2318
\BOOKMARK [3][-]{subsubsection.31.8.5.3}{31.8.5.3 Swap}{subsection.31.8.5}% 2319
\BOOKMARK [3][-]{subsubsection.31.8.5.4}{31.8.5.4 Member functions}{subsection.31.8.5}% 2320
\BOOKMARK [1][-]{section.31.9}{31.9 Span-based streams}{chapter.31}% 2321
\BOOKMARK [2][-]{subsection.31.9.1}{31.9.1 Overview}{section.31.9}% 2322
\BOOKMARK [2][-]{subsection.31.9.2}{31.9.2 Header <spanstream> synopsis}{section.31.9}% 2323
\BOOKMARK [2][-]{subsection.31.9.3}{31.9.3 Class template basic\137spanbuf}{section.31.9}% 2324
\BOOKMARK [3][-]{subsubsection.31.9.3.1}{31.9.3.1 General}{subsection.31.9.3}% 2325
\BOOKMARK [3][-]{subsubsection.31.9.3.2}{31.9.3.2 Constructors}{subsection.31.9.3}% 2326
\BOOKMARK [3][-]{subsubsection.31.9.3.3}{31.9.3.3 Assignment and swap}{subsection.31.9.3}% 2327
\BOOKMARK [3][-]{subsubsection.31.9.3.4}{31.9.3.4 Member functions}{subsection.31.9.3}% 2328
\BOOKMARK [3][-]{subsubsection.31.9.3.5}{31.9.3.5 Overridden virtual functions}{subsection.31.9.3}% 2329
\BOOKMARK [2][-]{subsection.31.9.4}{31.9.4 Class template basic\137ispanstream}{section.31.9}% 2330
\BOOKMARK [3][-]{subsubsection.31.9.4.1}{31.9.4.1 General}{subsection.31.9.4}% 2331
\BOOKMARK [3][-]{subsubsection.31.9.4.2}{31.9.4.2 Constructors}{subsection.31.9.4}% 2332
\BOOKMARK [3][-]{subsubsection.31.9.4.3}{31.9.4.3 Swap}{subsection.31.9.4}% 2333
\BOOKMARK [3][-]{subsubsection.31.9.4.4}{31.9.4.4 Member functions}{subsection.31.9.4}% 2334
\BOOKMARK [2][-]{subsection.31.9.5}{31.9.5 Class template basic\137ospanstream}{section.31.9}% 2335
\BOOKMARK [3][-]{subsubsection.31.9.5.1}{31.9.5.1 General}{subsection.31.9.5}% 2336
\BOOKMARK [3][-]{subsubsection.31.9.5.2}{31.9.5.2 Constructors}{subsection.31.9.5}% 2337
\BOOKMARK [3][-]{subsubsection.31.9.5.3}{31.9.5.3 Swap}{subsection.31.9.5}% 2338
\BOOKMARK [3][-]{subsubsection.31.9.5.4}{31.9.5.4 Member functions}{subsection.31.9.5}% 2339
\BOOKMARK [2][-]{subsection.31.9.6}{31.9.6 Class template basic\137spanstream}{section.31.9}% 2340
\BOOKMARK [3][-]{subsubsection.31.9.6.1}{31.9.6.1 General}{subsection.31.9.6}% 2341
\BOOKMARK [3][-]{subsubsection.31.9.6.2}{31.9.6.2 Constructors}{subsection.31.9.6}% 2342
\BOOKMARK [3][-]{subsubsection.31.9.6.3}{31.9.6.3 Swap}{subsection.31.9.6}% 2343
\BOOKMARK [3][-]{subsubsection.31.9.6.4}{31.9.6.4 Member functions}{subsection.31.9.6}% 2344
\BOOKMARK [1][-]{section.31.10}{31.10 File-based streams}{chapter.31}% 2345
\BOOKMARK [2][-]{subsection.31.10.1}{31.10.1 Header <fstream> synopsis}{section.31.10}% 2346
\BOOKMARK [2][-]{subsection.31.10.2}{31.10.2 Class template basic\137filebuf}{section.31.10}% 2347
\BOOKMARK [3][-]{subsubsection.31.10.2.1}{31.10.2.1 General}{subsection.31.10.2}% 2348
\BOOKMARK [3][-]{subsubsection.31.10.2.2}{31.10.2.2 Constructors}{subsection.31.10.2}% 2349
\BOOKMARK [3][-]{subsubsection.31.10.2.3}{31.10.2.3 Assignment and swap}{subsection.31.10.2}% 2350
\BOOKMARK [3][-]{subsubsection.31.10.2.4}{31.10.2.4 Member functions}{subsection.31.10.2}% 2351
\BOOKMARK [3][-]{subsubsection.31.10.2.5}{31.10.2.5 Overridden virtual functions}{subsection.31.10.2}% 2352
\BOOKMARK [2][-]{subsection.31.10.3}{31.10.3 Class template basic\137ifstream}{section.31.10}% 2353
\BOOKMARK [3][-]{subsubsection.31.10.3.1}{31.10.3.1 General}{subsection.31.10.3}% 2354
\BOOKMARK [3][-]{subsubsection.31.10.3.2}{31.10.3.2 Constructors}{subsection.31.10.3}% 2355
\BOOKMARK [3][-]{subsubsection.31.10.3.3}{31.10.3.3 Swap}{subsection.31.10.3}% 2356
\BOOKMARK [3][-]{subsubsection.31.10.3.4}{31.10.3.4 Member functions}{subsection.31.10.3}% 2357
\BOOKMARK [2][-]{subsection.31.10.4}{31.10.4 Class template basic\137ofstream}{section.31.10}% 2358
\BOOKMARK [3][-]{subsubsection.31.10.4.1}{31.10.4.1 General}{subsection.31.10.4}% 2359
\BOOKMARK [3][-]{subsubsection.31.10.4.2}{31.10.4.2 Constructors}{subsection.31.10.4}% 2360
\BOOKMARK [3][-]{subsubsection.31.10.4.3}{31.10.4.3 Swap}{subsection.31.10.4}% 2361
\BOOKMARK [3][-]{subsubsection.31.10.4.4}{31.10.4.4 Member functions}{subsection.31.10.4}% 2362
\BOOKMARK [2][-]{subsection.31.10.5}{31.10.5 Class template basic\137fstream}{section.31.10}% 2363
\BOOKMARK [3][-]{subsubsection.31.10.5.1}{31.10.5.1 General}{subsection.31.10.5}% 2364
\BOOKMARK [3][-]{subsubsection.31.10.5.2}{31.10.5.2 Constructors}{subsection.31.10.5}% 2365
\BOOKMARK [3][-]{subsubsection.31.10.5.3}{31.10.5.3 Swap}{subsection.31.10.5}% 2366
\BOOKMARK [3][-]{subsubsection.31.10.5.4}{31.10.5.4 Member functions}{subsection.31.10.5}% 2367
\BOOKMARK [1][-]{section.31.11}{31.11 Synchronized output streams}{chapter.31}% 2368
\BOOKMARK [2][-]{subsection.31.11.1}{31.11.1 Header <syncstream> synopsis}{section.31.11}% 2369
\BOOKMARK [2][-]{subsection.31.11.2}{31.11.2 Class template basic\137syncbuf}{section.31.11}% 2370
\BOOKMARK [3][-]{subsubsection.31.11.2.1}{31.11.2.1 Overview}{subsection.31.11.2}% 2371
\BOOKMARK [3][-]{subsubsection.31.11.2.2}{31.11.2.2 Construction and destruction}{subsection.31.11.2}% 2372
\BOOKMARK [3][-]{subsubsection.31.11.2.3}{31.11.2.3 Assignment and swap}{subsection.31.11.2}% 2373
\BOOKMARK [3][-]{subsubsection.31.11.2.4}{31.11.2.4 Member functions}{subsection.31.11.2}% 2374
\BOOKMARK [3][-]{subsubsection.31.11.2.5}{31.11.2.5 Overridden virtual functions}{subsection.31.11.2}% 2375
\BOOKMARK [3][-]{subsubsection.31.11.2.6}{31.11.2.6 Specialized algorithms}{subsection.31.11.2}% 2376
\BOOKMARK [2][-]{subsection.31.11.3}{31.11.3 Class template basic\137osyncstream}{section.31.11}% 2377
\BOOKMARK [3][-]{subsubsection.31.11.3.1}{31.11.3.1 Overview}{subsection.31.11.3}% 2378
\BOOKMARK [3][-]{subsubsection.31.11.3.2}{31.11.3.2 Construction and destruction}{subsection.31.11.3}% 2379
\BOOKMARK [3][-]{subsubsection.31.11.3.3}{31.11.3.3 Member functions}{subsection.31.11.3}% 2380
\BOOKMARK [1][-]{section.31.12}{31.12 File systems}{chapter.31}% 2381
\BOOKMARK [2][-]{subsection.31.12.1}{31.12.1 General}{section.31.12}% 2382
\BOOKMARK [2][-]{subsection.31.12.2}{31.12.2 Conformance}{section.31.12}% 2383
\BOOKMARK [3][-]{subsubsection.31.12.2.1}{31.12.2.1 General}{subsection.31.12.2}% 2384
\BOOKMARK [3][-]{subsubsection.31.12.2.2}{31.12.2.2 POSIX conformance}{subsection.31.12.2}% 2385
\BOOKMARK [3][-]{subsubsection.31.12.2.3}{31.12.2.3 Operating system dependent behavior conformance}{subsection.31.12.2}% 2386
\BOOKMARK [3][-]{subsubsection.31.12.2.4}{31.12.2.4 File system race behavior}{subsection.31.12.2}% 2387
\BOOKMARK [2][-]{subsection.31.12.3}{31.12.3 Requirements}{section.31.12}% 2388
\BOOKMARK [2][-]{subsection.31.12.4}{31.12.4 Header <filesystem> synopsis}{section.31.12}% 2389
\BOOKMARK [2][-]{subsection.31.12.5}{31.12.5 Error reporting}{section.31.12}% 2390
\BOOKMARK [2][-]{subsection.31.12.6}{31.12.6 Class path}{section.31.12}% 2391
\BOOKMARK [3][-]{subsubsection.31.12.6.1}{31.12.6.1 General}{subsection.31.12.6}% 2392
\BOOKMARK [3][-]{subsubsection.31.12.6.2}{31.12.6.2 Generic pathname format}{subsection.31.12.6}% 2393
\BOOKMARK [3][-]{subsubsection.31.12.6.3}{31.12.6.3 Conversions}{subsection.31.12.6}% 2394
\BOOKMARK [4][-]{paragraph.31.12.6.3.1}{31.12.6.3.1 Argument format conversions}{subsubsection.31.12.6.3}% 2395
\BOOKMARK [4][-]{paragraph.31.12.6.3.2}{31.12.6.3.2 Type and encoding conversions}{subsubsection.31.12.6.3}% 2396
\BOOKMARK [3][-]{subsubsection.31.12.6.4}{31.12.6.4 Requirements}{subsection.31.12.6}% 2397
\BOOKMARK [3][-]{subsubsection.31.12.6.5}{31.12.6.5 Members}{subsection.31.12.6}% 2398
\BOOKMARK [4][-]{paragraph.31.12.6.5.1}{31.12.6.5.1 Constructors}{subsubsection.31.12.6.5}% 2399
\BOOKMARK [4][-]{paragraph.31.12.6.5.2}{31.12.6.5.2 Assignments}{subsubsection.31.12.6.5}% 2400
\BOOKMARK [4][-]{paragraph.31.12.6.5.3}{31.12.6.5.3 Appends}{subsubsection.31.12.6.5}% 2401
\BOOKMARK [4][-]{paragraph.31.12.6.5.4}{31.12.6.5.4 Concatenation}{subsubsection.31.12.6.5}% 2402
\BOOKMARK [4][-]{paragraph.31.12.6.5.5}{31.12.6.5.5 Modifiers}{subsubsection.31.12.6.5}% 2403
\BOOKMARK [4][-]{paragraph.31.12.6.5.6}{31.12.6.5.6 Native format observers}{subsubsection.31.12.6.5}% 2404
\BOOKMARK [4][-]{paragraph.31.12.6.5.7}{31.12.6.5.7 Generic format observers}{subsubsection.31.12.6.5}% 2405
\BOOKMARK [4][-]{paragraph.31.12.6.5.8}{31.12.6.5.8 Compare}{subsubsection.31.12.6.5}% 2406
\BOOKMARK [4][-]{paragraph.31.12.6.5.9}{31.12.6.5.9 Decomposition}{subsubsection.31.12.6.5}% 2407
\BOOKMARK [4][-]{paragraph.31.12.6.5.10}{31.12.6.5.10 Query}{subsubsection.31.12.6.5}% 2408
\BOOKMARK [4][-]{paragraph.31.12.6.5.11}{31.12.6.5.11 Generation}{subsubsection.31.12.6.5}% 2409
\BOOKMARK [3][-]{subsubsection.31.12.6.6}{31.12.6.6 Iterators}{subsection.31.12.6}% 2410
\BOOKMARK [3][-]{subsubsection.31.12.6.7}{31.12.6.7 Inserter and extractor}{subsection.31.12.6}% 2411
\BOOKMARK [3][-]{subsubsection.31.12.6.8}{31.12.6.8 Non-member functions}{subsection.31.12.6}% 2412
\BOOKMARK [3][-]{subsubsection.31.12.6.9}{31.12.6.9 Hash support}{subsection.31.12.6}% 2413
\BOOKMARK [2][-]{subsection.31.12.7}{31.12.7 Class filesystem\137error}{section.31.12}% 2414
\BOOKMARK [3][-]{subsubsection.31.12.7.1}{31.12.7.1 General}{subsection.31.12.7}% 2415
\BOOKMARK [3][-]{subsubsection.31.12.7.2}{31.12.7.2 Members}{subsection.31.12.7}% 2416
\BOOKMARK [2][-]{subsection.31.12.8}{31.12.8 Enumerations}{section.31.12}% 2417
\BOOKMARK [3][-]{subsubsection.31.12.8.1}{31.12.8.1 Enum path::format}{subsection.31.12.8}% 2418
\BOOKMARK [3][-]{subsubsection.31.12.8.2}{31.12.8.2 Enum class file\137type}{subsection.31.12.8}% 2419
\BOOKMARK [3][-]{subsubsection.31.12.8.3}{31.12.8.3 Enum class copy\137options}{subsection.31.12.8}% 2420
\BOOKMARK [3][-]{subsubsection.31.12.8.4}{31.12.8.4 Enum class perms}{subsection.31.12.8}% 2421
\BOOKMARK [3][-]{subsubsection.31.12.8.5}{31.12.8.5 Enum class perm\137options}{subsection.31.12.8}% 2422
\BOOKMARK [3][-]{subsubsection.31.12.8.6}{31.12.8.6 Enum class directory\137options}{subsection.31.12.8}% 2423
\BOOKMARK [2][-]{subsection.31.12.9}{31.12.9 Class file\137status}{section.31.12}% 2424
\BOOKMARK [3][-]{subsubsection.31.12.9.1}{31.12.9.1 General}{subsection.31.12.9}% 2425
\BOOKMARK [3][-]{subsubsection.31.12.9.2}{31.12.9.2 Constructors}{subsection.31.12.9}% 2426
\BOOKMARK [3][-]{subsubsection.31.12.9.3}{31.12.9.3 Observers}{subsection.31.12.9}% 2427
\BOOKMARK [3][-]{subsubsection.31.12.9.4}{31.12.9.4 Modifiers}{subsection.31.12.9}% 2428
\BOOKMARK [2][-]{subsection.31.12.10}{31.12.10 Class directory\137entry}{section.31.12}% 2429
\BOOKMARK [3][-]{subsubsection.31.12.10.1}{31.12.10.1 General}{subsection.31.12.10}% 2430
\BOOKMARK [3][-]{subsubsection.31.12.10.2}{31.12.10.2 Constructors}{subsection.31.12.10}% 2431
\BOOKMARK [3][-]{subsubsection.31.12.10.3}{31.12.10.3 Modifiers}{subsection.31.12.10}% 2432
\BOOKMARK [3][-]{subsubsection.31.12.10.4}{31.12.10.4 Observers}{subsection.31.12.10}% 2433
\BOOKMARK [3][-]{subsubsection.31.12.10.5}{31.12.10.5 Inserter}{subsection.31.12.10}% 2434
\BOOKMARK [2][-]{subsection.31.12.11}{31.12.11 Class directory\137iterator}{section.31.12}% 2435
\BOOKMARK [3][-]{subsubsection.31.12.11.1}{31.12.11.1 General}{subsection.31.12.11}% 2436
\BOOKMARK [3][-]{subsubsection.31.12.11.2}{31.12.11.2 Members}{subsection.31.12.11}% 2437
\BOOKMARK [3][-]{subsubsection.31.12.11.3}{31.12.11.3 Non-member functions}{subsection.31.12.11}% 2438
\BOOKMARK [2][-]{subsection.31.12.12}{31.12.12 Class recursive\137directory\137iterator}{section.31.12}% 2439
\BOOKMARK [3][-]{subsubsection.31.12.12.1}{31.12.12.1 General}{subsection.31.12.12}% 2440
\BOOKMARK [3][-]{subsubsection.31.12.12.2}{31.12.12.2 Members}{subsection.31.12.12}% 2441
\BOOKMARK [3][-]{subsubsection.31.12.12.3}{31.12.12.3 Non-member functions}{subsection.31.12.12}% 2442
\BOOKMARK [2][-]{subsection.31.12.13}{31.12.13 Filesystem operation functions}{section.31.12}% 2443
\BOOKMARK [3][-]{subsubsection.31.12.13.1}{31.12.13.1 General}{subsection.31.12.13}% 2444
\BOOKMARK [3][-]{subsubsection.31.12.13.2}{31.12.13.2 Absolute}{subsection.31.12.13}% 2445
\BOOKMARK [3][-]{subsubsection.31.12.13.3}{31.12.13.3 Canonical}{subsection.31.12.13}% 2446
\BOOKMARK [3][-]{subsubsection.31.12.13.4}{31.12.13.4 Copy}{subsection.31.12.13}% 2447
\BOOKMARK [3][-]{subsubsection.31.12.13.5}{31.12.13.5 Copy file}{subsection.31.12.13}% 2448
\BOOKMARK [3][-]{subsubsection.31.12.13.6}{31.12.13.6 Copy symlink}{subsection.31.12.13}% 2449
\BOOKMARK [3][-]{subsubsection.31.12.13.7}{31.12.13.7 Create directories}{subsection.31.12.13}% 2450
\BOOKMARK [3][-]{subsubsection.31.12.13.8}{31.12.13.8 Create directory}{subsection.31.12.13}% 2451
\BOOKMARK [3][-]{subsubsection.31.12.13.9}{31.12.13.9 Create directory symlink}{subsection.31.12.13}% 2452
\BOOKMARK [3][-]{subsubsection.31.12.13.10}{31.12.13.10 Create hard link}{subsection.31.12.13}% 2453
\BOOKMARK [3][-]{subsubsection.31.12.13.11}{31.12.13.11 Create symlink}{subsection.31.12.13}% 2454
\BOOKMARK [3][-]{subsubsection.31.12.13.12}{31.12.13.12 Current path}{subsection.31.12.13}% 2455
\BOOKMARK [3][-]{subsubsection.31.12.13.13}{31.12.13.13 Equivalent}{subsection.31.12.13}% 2456
\BOOKMARK [3][-]{subsubsection.31.12.13.14}{31.12.13.14 Exists}{subsection.31.12.13}% 2457
\BOOKMARK [3][-]{subsubsection.31.12.13.15}{31.12.13.15 File size}{subsection.31.12.13}% 2458
\BOOKMARK [3][-]{subsubsection.31.12.13.16}{31.12.13.16 Hard link count}{subsection.31.12.13}% 2459
\BOOKMARK [3][-]{subsubsection.31.12.13.17}{31.12.13.17 Is block file}{subsection.31.12.13}% 2460
\BOOKMARK [3][-]{subsubsection.31.12.13.18}{31.12.13.18 Is character file}{subsection.31.12.13}% 2461
\BOOKMARK [3][-]{subsubsection.31.12.13.19}{31.12.13.19 Is directory}{subsection.31.12.13}% 2462
\BOOKMARK [3][-]{subsubsection.31.12.13.20}{31.12.13.20 Is empty}{subsection.31.12.13}% 2463
\BOOKMARK [3][-]{subsubsection.31.12.13.21}{31.12.13.21 Is fifo}{subsection.31.12.13}% 2464
\BOOKMARK [3][-]{subsubsection.31.12.13.22}{31.12.13.22 Is other}{subsection.31.12.13}% 2465
\BOOKMARK [3][-]{subsubsection.31.12.13.23}{31.12.13.23 Is regular file}{subsection.31.12.13}% 2466
\BOOKMARK [3][-]{subsubsection.31.12.13.24}{31.12.13.24 Is socket}{subsection.31.12.13}% 2467
\BOOKMARK [3][-]{subsubsection.31.12.13.25}{31.12.13.25 Is symlink}{subsection.31.12.13}% 2468
\BOOKMARK [3][-]{subsubsection.31.12.13.26}{31.12.13.26 Last write time}{subsection.31.12.13}% 2469
\BOOKMARK [3][-]{subsubsection.31.12.13.27}{31.12.13.27 Permissions}{subsection.31.12.13}% 2470
\BOOKMARK [3][-]{subsubsection.31.12.13.28}{31.12.13.28 Proximate}{subsection.31.12.13}% 2471
\BOOKMARK [3][-]{subsubsection.31.12.13.29}{31.12.13.29 Read symlink}{subsection.31.12.13}% 2472
\BOOKMARK [3][-]{subsubsection.31.12.13.30}{31.12.13.30 Relative}{subsection.31.12.13}% 2473
\BOOKMARK [3][-]{subsubsection.31.12.13.31}{31.12.13.31 Remove}{subsection.31.12.13}% 2474
\BOOKMARK [3][-]{subsubsection.31.12.13.32}{31.12.13.32 Remove all}{subsection.31.12.13}% 2475
\BOOKMARK [3][-]{subsubsection.31.12.13.33}{31.12.13.33 Rename}{subsection.31.12.13}% 2476
\BOOKMARK [3][-]{subsubsection.31.12.13.34}{31.12.13.34 Resize file}{subsection.31.12.13}% 2477
\BOOKMARK [3][-]{subsubsection.31.12.13.35}{31.12.13.35 Space}{subsection.31.12.13}% 2478
\BOOKMARK [3][-]{subsubsection.31.12.13.36}{31.12.13.36 Status}{subsection.31.12.13}% 2479
\BOOKMARK [3][-]{subsubsection.31.12.13.37}{31.12.13.37 Status known}{subsection.31.12.13}% 2480
\BOOKMARK [3][-]{subsubsection.31.12.13.38}{31.12.13.38 Symlink status}{subsection.31.12.13}% 2481
\BOOKMARK [3][-]{subsubsection.31.12.13.39}{31.12.13.39 Temporary directory path}{subsection.31.12.13}% 2482
\BOOKMARK [3][-]{subsubsection.31.12.13.40}{31.12.13.40 Weakly canonical}{subsection.31.12.13}% 2483
\BOOKMARK [1][-]{section.31.13}{31.13 C library files}{chapter.31}% 2484
\BOOKMARK [2][-]{subsection.31.13.1}{31.13.1 Header <cstdio> synopsis}{section.31.13}% 2485
\BOOKMARK [2][-]{subsection.31.13.2}{31.13.2 Header <cinttypes> synopsis}{section.31.13}% 2486
\BOOKMARK [0][-]{chapter.32}{32 Regular expressions library}{}% 2487
\BOOKMARK [1][-]{section.32.1}{32.1 General}{chapter.32}% 2488
\BOOKMARK [1][-]{section.32.2}{32.2 Requirements}{chapter.32}% 2489
\BOOKMARK [1][-]{section.32.3}{32.3 Header <regex> synopsis}{chapter.32}% 2490
\BOOKMARK [1][-]{section.32.4}{32.4 Namespace std::regex\137constants}{chapter.32}% 2491
\BOOKMARK [2][-]{subsection.32.4.1}{32.4.1 General}{section.32.4}% 2492
\BOOKMARK [2][-]{subsection.32.4.2}{32.4.2 Bitmask type syntax\137option\137type}{section.32.4}% 2493
\BOOKMARK [2][-]{subsection.32.4.3}{32.4.3 Bitmask type match\137flag\137type}{section.32.4}% 2494
\BOOKMARK [2][-]{subsection.32.4.4}{32.4.4 Implementation-defined error\137type}{section.32.4}% 2495
\BOOKMARK [1][-]{section.32.5}{32.5 Class regex\137error}{chapter.32}% 2496
\BOOKMARK [1][-]{section.32.6}{32.6 Class template regex\137traits}{chapter.32}% 2497
\BOOKMARK [1][-]{section.32.7}{32.7 Class template basic\137regex}{chapter.32}% 2498
\BOOKMARK [2][-]{subsection.32.7.1}{32.7.1 General}{section.32.7}% 2499
\BOOKMARK [2][-]{subsection.32.7.2}{32.7.2 Constructors}{section.32.7}% 2500
\BOOKMARK [2][-]{subsection.32.7.3}{32.7.3 Assignment}{section.32.7}% 2501
\BOOKMARK [2][-]{subsection.32.7.4}{32.7.4 Constant operations}{section.32.7}% 2502
\BOOKMARK [2][-]{subsection.32.7.5}{32.7.5 Locale}{section.32.7}% 2503
\BOOKMARK [2][-]{subsection.32.7.6}{32.7.6 Swap}{section.32.7}% 2504
\BOOKMARK [2][-]{subsection.32.7.7}{32.7.7 Non-member functions}{section.32.7}% 2505
\BOOKMARK [1][-]{section.32.8}{32.8 Class template sub\137match}{chapter.32}% 2506
\BOOKMARK [2][-]{subsection.32.8.1}{32.8.1 General}{section.32.8}% 2507
\BOOKMARK [2][-]{subsection.32.8.2}{32.8.2 Members}{section.32.8}% 2508
\BOOKMARK [2][-]{subsection.32.8.3}{32.8.3 Non-member operators}{section.32.8}% 2509
\BOOKMARK [1][-]{section.32.9}{32.9 Class template match\137results}{chapter.32}% 2510
\BOOKMARK [2][-]{subsection.32.9.1}{32.9.1 General}{section.32.9}% 2511
\BOOKMARK [2][-]{subsection.32.9.2}{32.9.2 Constructors}{section.32.9}% 2512
\BOOKMARK [2][-]{subsection.32.9.3}{32.9.3 State}{section.32.9}% 2513
\BOOKMARK [2][-]{subsection.32.9.4}{32.9.4 Size}{section.32.9}% 2514
\BOOKMARK [2][-]{subsection.32.9.5}{32.9.5 Element access}{section.32.9}% 2515
\BOOKMARK [2][-]{subsection.32.9.6}{32.9.6 Formatting}{section.32.9}% 2516
\BOOKMARK [2][-]{subsection.32.9.7}{32.9.7 Allocator}{section.32.9}% 2517
\BOOKMARK [2][-]{subsection.32.9.8}{32.9.8 Swap}{section.32.9}% 2518
\BOOKMARK [2][-]{subsection.32.9.9}{32.9.9 Non-member functions}{section.32.9}% 2519
\BOOKMARK [1][-]{section.32.10}{32.10 Regular expression algorithms}{chapter.32}% 2520
\BOOKMARK [2][-]{subsection.32.10.1}{32.10.1 Exceptions}{section.32.10}% 2521
\BOOKMARK [2][-]{subsection.32.10.2}{32.10.2 regex\137match}{section.32.10}% 2522
\BOOKMARK [2][-]{subsection.32.10.3}{32.10.3 regex\137search}{section.32.10}% 2523
\BOOKMARK [2][-]{subsection.32.10.4}{32.10.4 regex\137replace}{section.32.10}% 2524
\BOOKMARK [1][-]{section.32.11}{32.11 Regular expression iterators}{chapter.32}% 2525
\BOOKMARK [2][-]{subsection.32.11.1}{32.11.1 Class template regex\137iterator}{section.32.11}% 2526
\BOOKMARK [3][-]{subsubsection.32.11.1.1}{32.11.1.1 General}{subsection.32.11.1}% 2527
\BOOKMARK [3][-]{subsubsection.32.11.1.2}{32.11.1.2 Constructors}{subsection.32.11.1}% 2528
\BOOKMARK [3][-]{subsubsection.32.11.1.3}{32.11.1.3 Comparisons}{subsection.32.11.1}% 2529
\BOOKMARK [3][-]{subsubsection.32.11.1.4}{32.11.1.4 Indirection}{subsection.32.11.1}% 2530
\BOOKMARK [3][-]{subsubsection.32.11.1.5}{32.11.1.5 Increment}{subsection.32.11.1}% 2531
\BOOKMARK [2][-]{subsection.32.11.2}{32.11.2 Class template regex\137token\137iterator}{section.32.11}% 2532
\BOOKMARK [3][-]{subsubsection.32.11.2.1}{32.11.2.1 General}{subsection.32.11.2}% 2533
\BOOKMARK [3][-]{subsubsection.32.11.2.2}{32.11.2.2 Constructors}{subsection.32.11.2}% 2534
\BOOKMARK [3][-]{subsubsection.32.11.2.3}{32.11.2.3 Comparisons}{subsection.32.11.2}% 2535
\BOOKMARK [3][-]{subsubsection.32.11.2.4}{32.11.2.4 Indirection}{subsection.32.11.2}% 2536
\BOOKMARK [3][-]{subsubsection.32.11.2.5}{32.11.2.5 Increment}{subsection.32.11.2}% 2537
\BOOKMARK [1][-]{section.32.12}{32.12 Modified ECMAScript regular expression grammar}{chapter.32}% 2538
\BOOKMARK [0][-]{chapter.33}{33 Concurrency support library}{}% 2539
\BOOKMARK [1][-]{section.33.1}{33.1 General}{chapter.33}% 2540
\BOOKMARK [1][-]{section.33.2}{33.2 Requirements}{chapter.33}% 2541
\BOOKMARK [2][-]{subsection.33.2.1}{33.2.1 Template parameter names}{section.33.2}% 2542
\BOOKMARK [2][-]{subsection.33.2.2}{33.2.2 Exceptions}{section.33.2}% 2543
\BOOKMARK [2][-]{subsection.33.2.3}{33.2.3 Native handles}{section.33.2}% 2544
\BOOKMARK [2][-]{subsection.33.2.4}{33.2.4 Timing specifications}{section.33.2}% 2545
\BOOKMARK [2][-]{subsection.33.2.5}{33.2.5 Requirements for Cpp17Lockable types}{section.33.2}% 2546
\BOOKMARK [3][-]{subsubsection.33.2.5.1}{33.2.5.1 In general}{subsection.33.2.5}% 2547
\BOOKMARK [3][-]{subsubsection.33.2.5.2}{33.2.5.2 Cpp17BasicLockable requirements}{subsection.33.2.5}% 2548
\BOOKMARK [3][-]{subsubsection.33.2.5.3}{33.2.5.3 Cpp17Lockable requirements}{subsection.33.2.5}% 2549
\BOOKMARK [3][-]{subsubsection.33.2.5.4}{33.2.5.4 Cpp17TimedLockable requirements}{subsection.33.2.5}% 2550
\BOOKMARK [3][-]{subsubsection.33.2.5.5}{33.2.5.5 Cpp17SharedLockable requirements}{subsection.33.2.5}% 2551
\BOOKMARK [3][-]{subsubsection.33.2.5.6}{33.2.5.6 Cpp17SharedTimedLockable requirements}{subsection.33.2.5}% 2552
\BOOKMARK [1][-]{section.33.3}{33.3 Stop tokens}{chapter.33}% 2553
\BOOKMARK [2][-]{subsection.33.3.1}{33.3.1 Introduction}{section.33.3}% 2554
\BOOKMARK [2][-]{subsection.33.3.2}{33.3.2 Header <stop\137token> synopsis}{section.33.3}% 2555
\BOOKMARK [2][-]{subsection.33.3.3}{33.3.3 Class stop\137token}{section.33.3}% 2556
\BOOKMARK [3][-]{subsubsection.33.3.3.1}{33.3.3.1 General}{subsection.33.3.3}% 2557
\BOOKMARK [3][-]{subsubsection.33.3.3.2}{33.3.3.2 Constructors, copy, and assignment}{subsection.33.3.3}% 2558
\BOOKMARK [3][-]{subsubsection.33.3.3.3}{33.3.3.3 Members}{subsection.33.3.3}% 2559
\BOOKMARK [3][-]{subsubsection.33.3.3.4}{33.3.3.4 Non-member functions}{subsection.33.3.3}% 2560
\BOOKMARK [2][-]{subsection.33.3.4}{33.3.4 Class stop\137source}{section.33.3}% 2561
\BOOKMARK [3][-]{subsubsection.33.3.4.1}{33.3.4.1 General}{subsection.33.3.4}% 2562
\BOOKMARK [3][-]{subsubsection.33.3.4.2}{33.3.4.2 Constructors, copy, and assignment}{subsection.33.3.4}% 2563
\BOOKMARK [3][-]{subsubsection.33.3.4.3}{33.3.4.3 Members}{subsection.33.3.4}% 2564
\BOOKMARK [3][-]{subsubsection.33.3.4.4}{33.3.4.4 Non-member functions}{subsection.33.3.4}% 2565
\BOOKMARK [2][-]{subsection.33.3.5}{33.3.5 Class template stop\137callback}{section.33.3}% 2566
\BOOKMARK [3][-]{subsubsection.33.3.5.1}{33.3.5.1 General}{subsection.33.3.5}% 2567
\BOOKMARK [3][-]{subsubsection.33.3.5.2}{33.3.5.2 Constructors and destructor}{subsection.33.3.5}% 2568
\BOOKMARK [1][-]{section.33.4}{33.4 Threads}{chapter.33}% 2569
\BOOKMARK [2][-]{subsection.33.4.1}{33.4.1 General}{section.33.4}% 2570
\BOOKMARK [2][-]{subsection.33.4.2}{33.4.2 Header <thread> synopsis}{section.33.4}% 2571
\BOOKMARK [2][-]{subsection.33.4.3}{33.4.3 Class thread}{section.33.4}% 2572
\BOOKMARK [3][-]{subsubsection.33.4.3.1}{33.4.3.1 General}{subsection.33.4.3}% 2573
\BOOKMARK [3][-]{subsubsection.33.4.3.2}{33.4.3.2 Class thread::id}{subsection.33.4.3}% 2574
\BOOKMARK [3][-]{subsubsection.33.4.3.3}{33.4.3.3 Constructors}{subsection.33.4.3}% 2575
\BOOKMARK [3][-]{subsubsection.33.4.3.4}{33.4.3.4 Destructor}{subsection.33.4.3}% 2576
\BOOKMARK [3][-]{subsubsection.33.4.3.5}{33.4.3.5 Assignment}{subsection.33.4.3}% 2577
\BOOKMARK [3][-]{subsubsection.33.4.3.6}{33.4.3.6 Members}{subsection.33.4.3}% 2578
\BOOKMARK [3][-]{subsubsection.33.4.3.7}{33.4.3.7 Static members}{subsection.33.4.3}% 2579
\BOOKMARK [3][-]{subsubsection.33.4.3.8}{33.4.3.8 Specialized algorithms}{subsection.33.4.3}% 2580
\BOOKMARK [2][-]{subsection.33.4.4}{33.4.4 Class jthread}{section.33.4}% 2581
\BOOKMARK [3][-]{subsubsection.33.4.4.1}{33.4.4.1 General}{subsection.33.4.4}% 2582
\BOOKMARK [3][-]{subsubsection.33.4.4.2}{33.4.4.2 Constructors, move, and assignment}{subsection.33.4.4}% 2583
\BOOKMARK [3][-]{subsubsection.33.4.4.3}{33.4.4.3 Members}{subsection.33.4.4}% 2584
\BOOKMARK [3][-]{subsubsection.33.4.4.4}{33.4.4.4 Stop token handling}{subsection.33.4.4}% 2585
\BOOKMARK [3][-]{subsubsection.33.4.4.5}{33.4.4.5 Specialized algorithms}{subsection.33.4.4}% 2586
\BOOKMARK [3][-]{subsubsection.33.4.4.6}{33.4.4.6 Static members}{subsection.33.4.4}% 2587
\BOOKMARK [2][-]{subsection.33.4.5}{33.4.5 Namespace this\137thread}{section.33.4}% 2588
\BOOKMARK [1][-]{section.33.5}{33.5 Atomic operations}{chapter.33}% 2589
\BOOKMARK [2][-]{subsection.33.5.1}{33.5.1 General}{section.33.5}% 2590
\BOOKMARK [2][-]{subsection.33.5.2}{33.5.2 Header <atomic> synopsis}{section.33.5}% 2591
\BOOKMARK [2][-]{subsection.33.5.3}{33.5.3 Type aliases}{section.33.5}% 2592
\BOOKMARK [2][-]{subsection.33.5.4}{33.5.4 Order and consistency}{section.33.5}% 2593
\BOOKMARK [2][-]{subsection.33.5.5}{33.5.5 Lock-free property}{section.33.5}% 2594
\BOOKMARK [2][-]{subsection.33.5.6}{33.5.6 Waiting and notifying}{section.33.5}% 2595
\BOOKMARK [2][-]{subsection.33.5.7}{33.5.7 Class template atomic\137ref}{section.33.5}% 2596
\BOOKMARK [3][-]{subsubsection.33.5.7.1}{33.5.7.1 General}{subsection.33.5.7}% 2597
\BOOKMARK [3][-]{subsubsection.33.5.7.2}{33.5.7.2 Operations}{subsection.33.5.7}% 2598
\BOOKMARK [3][-]{subsubsection.33.5.7.3}{33.5.7.3 Specializations for integral types}{subsection.33.5.7}% 2599
\BOOKMARK [3][-]{subsubsection.33.5.7.4}{33.5.7.4 Specializations for floating-point types}{subsection.33.5.7}% 2600
\BOOKMARK [3][-]{subsubsection.33.5.7.5}{33.5.7.5 Partial specialization for pointers}{subsection.33.5.7}% 2601
\BOOKMARK [3][-]{subsubsection.33.5.7.6}{33.5.7.6 Member operators common to integers and pointers to objects}{subsection.33.5.7}% 2602
\BOOKMARK [2][-]{subsection.33.5.8}{33.5.8 Class template atomic}{section.33.5}% 2603
\BOOKMARK [3][-]{subsubsection.33.5.8.1}{33.5.8.1 General}{subsection.33.5.8}% 2604
\BOOKMARK [3][-]{subsubsection.33.5.8.2}{33.5.8.2 Operations on atomic types}{subsection.33.5.8}% 2605
\BOOKMARK [3][-]{subsubsection.33.5.8.3}{33.5.8.3 Specializations for integers}{subsection.33.5.8}% 2606
\BOOKMARK [3][-]{subsubsection.33.5.8.4}{33.5.8.4 Specializations for floating-point types}{subsection.33.5.8}% 2607
\BOOKMARK [3][-]{subsubsection.33.5.8.5}{33.5.8.5 Partial specialization for pointers}{subsection.33.5.8}% 2608
\BOOKMARK [3][-]{subsubsection.33.5.8.6}{33.5.8.6 Member operators common to integers and pointers to objects}{subsection.33.5.8}% 2609
\BOOKMARK [3][-]{subsubsection.33.5.8.7}{33.5.8.7 Partial specializations for smart pointers}{subsection.33.5.8}% 2610
\BOOKMARK [4][-]{paragraph.33.5.8.7.1}{33.5.8.7.1 General}{subsubsection.33.5.8.7}% 2611
\BOOKMARK [4][-]{paragraph.33.5.8.7.2}{33.5.8.7.2 Partial specialization for shared\137ptr}{subsubsection.33.5.8.7}% 2612
\BOOKMARK [4][-]{paragraph.33.5.8.7.3}{33.5.8.7.3 Partial specialization for weak\137ptr}{subsubsection.33.5.8.7}% 2613
\BOOKMARK [2][-]{subsection.33.5.9}{33.5.9 Non-member functions}{section.33.5}% 2614
\BOOKMARK [2][-]{subsection.33.5.10}{33.5.10 Flag type and operations}{section.33.5}% 2615
\BOOKMARK [2][-]{subsection.33.5.11}{33.5.11 Fences}{section.33.5}% 2616
\BOOKMARK [2][-]{subsection.33.5.12}{33.5.12 C compatibility}{section.33.5}% 2617
\BOOKMARK [1][-]{section.33.6}{33.6 Mutual exclusion}{chapter.33}% 2618
\BOOKMARK [2][-]{subsection.33.6.1}{33.6.1 General}{section.33.6}% 2619
\BOOKMARK [2][-]{subsection.33.6.2}{33.6.2 Header <mutex> synopsis}{section.33.6}% 2620
\BOOKMARK [2][-]{subsection.33.6.3}{33.6.3 Header <shared\137mutex> synopsis}{section.33.6}% 2621
\BOOKMARK [2][-]{subsection.33.6.4}{33.6.4 Mutex requirements}{section.33.6}% 2622
\BOOKMARK [3][-]{subsubsection.33.6.4.1}{33.6.4.1 In general}{subsection.33.6.4}% 2623
\BOOKMARK [3][-]{subsubsection.33.6.4.2}{33.6.4.2 Mutex types}{subsection.33.6.4}% 2624
\BOOKMARK [4][-]{paragraph.33.6.4.2.1}{33.6.4.2.1 General}{subsubsection.33.6.4.2}% 2625
\BOOKMARK [4][-]{paragraph.33.6.4.2.2}{33.6.4.2.2 Class mutex}{subsubsection.33.6.4.2}% 2626
\BOOKMARK [4][-]{paragraph.33.6.4.2.3}{33.6.4.2.3 Class recursive\137mutex}{subsubsection.33.6.4.2}% 2627
\BOOKMARK [3][-]{subsubsection.33.6.4.3}{33.6.4.3 Timed mutex types}{subsection.33.6.4}% 2628
\BOOKMARK [4][-]{paragraph.33.6.4.3.1}{33.6.4.3.1 General}{subsubsection.33.6.4.3}% 2629
\BOOKMARK [4][-]{paragraph.33.6.4.3.2}{33.6.4.3.2 Class timed\137mutex}{subsubsection.33.6.4.3}% 2630
\BOOKMARK [4][-]{paragraph.33.6.4.3.3}{33.6.4.3.3 Class recursive\137timed\137mutex}{subsubsection.33.6.4.3}% 2631
\BOOKMARK [3][-]{subsubsection.33.6.4.4}{33.6.4.4 Shared mutex types}{subsection.33.6.4}% 2632
\BOOKMARK [4][-]{paragraph.33.6.4.4.1}{33.6.4.4.1 General}{subsubsection.33.6.4.4}% 2633
\BOOKMARK [4][-]{paragraph.33.6.4.4.2}{33.6.4.4.2 Class shared\137mutex}{subsubsection.33.6.4.4}% 2634
\BOOKMARK [3][-]{subsubsection.33.6.4.5}{33.6.4.5 Shared timed mutex types}{subsection.33.6.4}% 2635
\BOOKMARK [4][-]{paragraph.33.6.4.5.1}{33.6.4.5.1 General}{subsubsection.33.6.4.5}% 2636
\BOOKMARK [4][-]{paragraph.33.6.4.5.2}{33.6.4.5.2 Class shared\137timed\137mutex}{subsubsection.33.6.4.5}% 2637
\BOOKMARK [2][-]{subsection.33.6.5}{33.6.5 Locks}{section.33.6}% 2638
\BOOKMARK [3][-]{subsubsection.33.6.5.1}{33.6.5.1 General}{subsection.33.6.5}% 2639
\BOOKMARK [3][-]{subsubsection.33.6.5.2}{33.6.5.2 Class template lock\137guard}{subsection.33.6.5}% 2640
\BOOKMARK [3][-]{subsubsection.33.6.5.3}{33.6.5.3 Class template scoped\137lock}{subsection.33.6.5}% 2641
\BOOKMARK [3][-]{subsubsection.33.6.5.4}{33.6.5.4 Class template unique\137lock}{subsection.33.6.5}% 2642
\BOOKMARK [4][-]{paragraph.33.6.5.4.1}{33.6.5.4.1 General}{subsubsection.33.6.5.4}% 2643
\BOOKMARK [4][-]{paragraph.33.6.5.4.2}{33.6.5.4.2 Constructors, destructor, and assignment}{subsubsection.33.6.5.4}% 2644
\BOOKMARK [4][-]{paragraph.33.6.5.4.3}{33.6.5.4.3 Locking}{subsubsection.33.6.5.4}% 2645
\BOOKMARK [4][-]{paragraph.33.6.5.4.4}{33.6.5.4.4 Modifiers}{subsubsection.33.6.5.4}% 2646
\BOOKMARK [4][-]{paragraph.33.6.5.4.5}{33.6.5.4.5 Observers}{subsubsection.33.6.5.4}% 2647
\BOOKMARK [3][-]{subsubsection.33.6.5.5}{33.6.5.5 Class template shared\137lock}{subsection.33.6.5}% 2648
\BOOKMARK [4][-]{paragraph.33.6.5.5.1}{33.6.5.5.1 General}{subsubsection.33.6.5.5}% 2649
\BOOKMARK [4][-]{paragraph.33.6.5.5.2}{33.6.5.5.2 Constructors, destructor, and assignment}{subsubsection.33.6.5.5}% 2650
\BOOKMARK [4][-]{paragraph.33.6.5.5.3}{33.6.5.5.3 Locking}{subsubsection.33.6.5.5}% 2651
\BOOKMARK [4][-]{paragraph.33.6.5.5.4}{33.6.5.5.4 Modifiers}{subsubsection.33.6.5.5}% 2652
\BOOKMARK [4][-]{paragraph.33.6.5.5.5}{33.6.5.5.5 Observers}{subsubsection.33.6.5.5}% 2653
\BOOKMARK [2][-]{subsection.33.6.6}{33.6.6 Generic locking algorithms}{section.33.6}% 2654
\BOOKMARK [2][-]{subsection.33.6.7}{33.6.7 Call once}{section.33.6}% 2655
\BOOKMARK [3][-]{subsubsection.33.6.7.1}{33.6.7.1 Struct once\137flag}{subsection.33.6.7}% 2656
\BOOKMARK [3][-]{subsubsection.33.6.7.2}{33.6.7.2 Function call\137once}{subsection.33.6.7}% 2657
\BOOKMARK [1][-]{section.33.7}{33.7 Condition variables}{chapter.33}% 2658
\BOOKMARK [2][-]{subsection.33.7.1}{33.7.1 General}{section.33.7}% 2659
\BOOKMARK [2][-]{subsection.33.7.2}{33.7.2 Header <condition\137variable> synopsis}{section.33.7}% 2660
\BOOKMARK [2][-]{subsection.33.7.3}{33.7.3 Non-member functions}{section.33.7}% 2661
\BOOKMARK [2][-]{subsection.33.7.4}{33.7.4 Class condition\137variable}{section.33.7}% 2662
\BOOKMARK [2][-]{subsection.33.7.5}{33.7.5 Class condition\137variable\137any}{section.33.7}% 2663
\BOOKMARK [3][-]{subsubsection.33.7.5.1}{33.7.5.1 General}{subsection.33.7.5}% 2664
\BOOKMARK [3][-]{subsubsection.33.7.5.2}{33.7.5.2 Noninterruptible waits}{subsection.33.7.5}% 2665
\BOOKMARK [3][-]{subsubsection.33.7.5.3}{33.7.5.3 Interruptible waits}{subsection.33.7.5}% 2666
\BOOKMARK [1][-]{section.33.8}{33.8 Semaphore}{chapter.33}% 2667
\BOOKMARK [2][-]{subsection.33.8.1}{33.8.1 General}{section.33.8}% 2668
\BOOKMARK [2][-]{subsection.33.8.2}{33.8.2 Header <semaphore> synopsis}{section.33.8}% 2669
\BOOKMARK [2][-]{subsection.33.8.3}{33.8.3 Class template counting\137semaphore}{section.33.8}% 2670
\BOOKMARK [1][-]{section.33.9}{33.9 Coordination types}{chapter.33}% 2671
\BOOKMARK [2][-]{subsection.33.9.1}{33.9.1 General}{section.33.9}% 2672
\BOOKMARK [2][-]{subsection.33.9.2}{33.9.2 Latches}{section.33.9}% 2673
\BOOKMARK [3][-]{subsubsection.33.9.2.1}{33.9.2.1 General}{subsection.33.9.2}% 2674
\BOOKMARK [3][-]{subsubsection.33.9.2.2}{33.9.2.2 Header <latch> synopsis}{subsection.33.9.2}% 2675
\BOOKMARK [3][-]{subsubsection.33.9.2.3}{33.9.2.3 Class latch}{subsection.33.9.2}% 2676
\BOOKMARK [2][-]{subsection.33.9.3}{33.9.3 Barriers}{section.33.9}% 2677
\BOOKMARK [3][-]{subsubsection.33.9.3.1}{33.9.3.1 General}{subsection.33.9.3}% 2678
\BOOKMARK [3][-]{subsubsection.33.9.3.2}{33.9.3.2 Header <barrier> synopsis}{subsection.33.9.3}% 2679
\BOOKMARK [3][-]{subsubsection.33.9.3.3}{33.9.3.3 Class template barrier}{subsection.33.9.3}% 2680
\BOOKMARK [1][-]{section.33.10}{33.10 Futures}{chapter.33}% 2681
\BOOKMARK [2][-]{subsection.33.10.1}{33.10.1 Overview}{section.33.10}% 2682
\BOOKMARK [2][-]{subsection.33.10.2}{33.10.2 Header <future> synopsis}{section.33.10}% 2683
\BOOKMARK [2][-]{subsection.33.10.3}{33.10.3 Error handling}{section.33.10}% 2684
\BOOKMARK [2][-]{subsection.33.10.4}{33.10.4 Class future\137error}{section.33.10}% 2685
\BOOKMARK [2][-]{subsection.33.10.5}{33.10.5 Shared state}{section.33.10}% 2686
\BOOKMARK [2][-]{subsection.33.10.6}{33.10.6 Class template promise}{section.33.10}% 2687
\BOOKMARK [2][-]{subsection.33.10.7}{33.10.7 Class template future}{section.33.10}% 2688
\BOOKMARK [2][-]{subsection.33.10.8}{33.10.8 Class template shared\137future}{section.33.10}% 2689
\BOOKMARK [2][-]{subsection.33.10.9}{33.10.9 Function template async}{section.33.10}% 2690
\BOOKMARK [2][-]{subsection.33.10.10}{33.10.10 Class template packaged\137task}{section.33.10}% 2691
\BOOKMARK [3][-]{subsubsection.33.10.10.1}{33.10.10.1 General}{subsection.33.10.10}% 2692
\BOOKMARK [3][-]{subsubsection.33.10.10.2}{33.10.10.2 Member functions}{subsection.33.10.10}% 2693
\BOOKMARK [3][-]{subsubsection.33.10.10.3}{33.10.10.3 Globals}{subsection.33.10.10}% 2694
\BOOKMARK [0][-]{appendix.A}{A Grammar summary}{}% 2695
\BOOKMARK [1][-]{section.A.1}{A.1 General}{appendix.A}% 2696
\BOOKMARK [1][-]{section.A.2}{A.2 Keywords}{appendix.A}% 2697
\BOOKMARK [1][-]{section.A.3}{A.3 Lexical conventions}{appendix.A}% 2698
\BOOKMARK [1][-]{section.A.4}{A.4 Basics}{appendix.A}% 2699
\BOOKMARK [1][-]{section.A.5}{A.5 Expressions}{appendix.A}% 2700
\BOOKMARK [1][-]{section.A.6}{A.6 Statements}{appendix.A}% 2701
\BOOKMARK [1][-]{section.A.7}{A.7 Declarations}{appendix.A}% 2702
\BOOKMARK [1][-]{section.A.8}{A.8 Modules}{appendix.A}% 2703
\BOOKMARK [1][-]{section.A.9}{A.9 Classes}{appendix.A}% 2704
\BOOKMARK [1][-]{section.A.10}{A.10 Overloading}{appendix.A}% 2705
\BOOKMARK [1][-]{section.A.11}{A.11 Templates}{appendix.A}% 2706
\BOOKMARK [1][-]{section.A.12}{A.12 Exception handling}{appendix.A}% 2707
\BOOKMARK [1][-]{section.A.13}{A.13 Preprocessing directives}{appendix.A}% 2708
\BOOKMARK [0][-]{appendix.B}{B Implementation quantities}{}% 2709
\BOOKMARK [0][-]{appendix.C}{C Compatibility}{}% 2710
\BOOKMARK [1][-]{section.C.1}{C.1 C++ and ISO C++ 2020}{appendix.C}% 2711
\BOOKMARK [2][-]{subsection.C.1.1}{C.1.1 General}{section.C.1}% 2712
\BOOKMARK [2][-]{subsection.C.1.2}{C.1.2 Clause 5: lexical conventions}{section.C.1}% 2713
\BOOKMARK [2][-]{subsection.C.1.3}{C.1.3 Clause 7: expressions}{section.C.1}% 2714
\BOOKMARK [2][-]{subsection.C.1.4}{C.1.4 Clause 16: library introduction}{section.C.1}% 2715
\BOOKMARK [2][-]{subsection.C.1.5}{C.1.5 Clause 22: general utilities library}{section.C.1}% 2716
\BOOKMARK [2][-]{subsection.C.1.6}{C.1.6 Clause 24: containers library}{section.C.1}% 2717
\BOOKMARK [1][-]{section.C.2}{C.2 C++ and ISO C++ 2017}{appendix.C}% 2718
\BOOKMARK [2][-]{subsection.C.2.1}{C.2.1 General}{section.C.2}% 2719
\BOOKMARK [2][-]{subsection.C.2.2}{C.2.2 Clause 5: lexical conventions}{section.C.2}% 2720
\BOOKMARK [2][-]{subsection.C.2.3}{C.2.3 Clause 6: basics}{section.C.2}% 2721
\BOOKMARK [2][-]{subsection.C.2.4}{C.2.4 Clause 7: expressions}{section.C.2}% 2722
\BOOKMARK [2][-]{subsection.C.2.5}{C.2.5 Clause 9: declarations}{section.C.2}% 2723
\BOOKMARK [2][-]{subsection.C.2.6}{C.2.6 Clause 11: classes}{section.C.2}% 2724
\BOOKMARK [2][-]{subsection.C.2.7}{C.2.7 Clause 12: overloading}{section.C.2}% 2725
\BOOKMARK [2][-]{subsection.C.2.8}{C.2.8 Clause 13: templates}{section.C.2}% 2726
\BOOKMARK [2][-]{subsection.C.2.9}{C.2.9 Clause 14: exception handling}{section.C.2}% 2727
\BOOKMARK [2][-]{subsection.C.2.10}{C.2.10 Clause 16: library introduction}{section.C.2}% 2728
\BOOKMARK [2][-]{subsection.C.2.11}{C.2.11 Clause 24: containers library}{section.C.2}% 2729
\BOOKMARK [2][-]{subsection.C.2.12}{C.2.12 Clause 25: iterators library}{section.C.2}% 2730
\BOOKMARK [2][-]{subsection.C.2.13}{C.2.13 Clause 27: algorithms library}{section.C.2}% 2731
\BOOKMARK [2][-]{subsection.C.2.14}{C.2.14 Clause 31: input/output library}{section.C.2}% 2732
\BOOKMARK [2][-]{subsection.C.2.15}{C.2.15 Annex D: compatibility features}{section.C.2}% 2733
\BOOKMARK [1][-]{section.C.3}{C.3 C++ and ISO C++ 2014}{appendix.C}% 2734
\BOOKMARK [2][-]{subsection.C.3.1}{C.3.1 General}{section.C.3}% 2735
\BOOKMARK [2][-]{subsection.C.3.2}{C.3.2 Clause 5: lexical conventions}{section.C.3}% 2736
\BOOKMARK [2][-]{subsection.C.3.3}{C.3.3 Clause 7: expressions}{section.C.3}% 2737
\BOOKMARK [2][-]{subsection.C.3.4}{C.3.4 Clause 9: declarations}{section.C.3}% 2738
\BOOKMARK [2][-]{subsection.C.3.5}{C.3.5 Clause 11: classes}{section.C.3}% 2739
\BOOKMARK [2][-]{subsection.C.3.6}{C.3.6 Clause 13: templates}{section.C.3}% 2740
\BOOKMARK [2][-]{subsection.C.3.7}{C.3.7 Clause 14: exception handling}{section.C.3}% 2741
\BOOKMARK [2][-]{subsection.C.3.8}{C.3.8 Clause 16: library introduction}{section.C.3}% 2742
\BOOKMARK [2][-]{subsection.C.3.9}{C.3.9 Clause 22: general utilities library}{section.C.3}% 2743
\BOOKMARK [2][-]{subsection.C.3.10}{C.3.10 Clause 23: strings library}{section.C.3}% 2744
\BOOKMARK [2][-]{subsection.C.3.11}{C.3.11 Clause 24: containers library}{section.C.3}% 2745
\BOOKMARK [2][-]{subsection.C.3.12}{C.3.12 Annex D: compatibility features}{section.C.3}% 2746
\BOOKMARK [1][-]{section.C.4}{C.4 C++ and ISO C++ 2011}{appendix.C}% 2747
\BOOKMARK [2][-]{subsection.C.4.1}{C.4.1 General}{section.C.4}% 2748
\BOOKMARK [2][-]{subsection.C.4.2}{C.4.2 Clause 5: lexical conventions}{section.C.4}% 2749
\BOOKMARK [2][-]{subsection.C.4.3}{C.4.3 Clause 6: basics}{section.C.4}% 2750
\BOOKMARK [2][-]{subsection.C.4.4}{C.4.4 Clause 7: expressions}{section.C.4}% 2751
\BOOKMARK [2][-]{subsection.C.4.5}{C.4.5 Clause 9: declarations}{section.C.4}% 2752
\BOOKMARK [2][-]{subsection.C.4.6}{C.4.6 Clause 16: library introduction}{section.C.4}% 2753
\BOOKMARK [2][-]{subsection.C.4.7}{C.4.7 Clause 31: input/output library}{section.C.4}% 2754
\BOOKMARK [1][-]{section.C.5}{C.5 C++ and ISO C++ 2003}{appendix.C}% 2755
\BOOKMARK [2][-]{subsection.C.5.1}{C.5.1 General}{section.C.5}% 2756
\BOOKMARK [2][-]{subsection.C.5.2}{C.5.2 Clause 5: lexical conventions}{section.C.5}% 2757
\BOOKMARK [2][-]{subsection.C.5.3}{C.5.3 Clause 7: expressions}{section.C.5}% 2758
\BOOKMARK [2][-]{subsection.C.5.4}{C.5.4 Clause 9: declarations}{section.C.5}% 2759
\BOOKMARK [2][-]{subsection.C.5.5}{C.5.5 Clause 11: classes}{section.C.5}% 2760
\BOOKMARK [2][-]{subsection.C.5.6}{C.5.6 Clause 13: templates}{section.C.5}% 2761
\BOOKMARK [2][-]{subsection.C.5.7}{C.5.7 Clause 16: library introduction}{section.C.5}% 2762
\BOOKMARK [2][-]{subsection.C.5.8}{C.5.8 Clause 17: language support library}{section.C.5}% 2763
\BOOKMARK [2][-]{subsection.C.5.9}{C.5.9 Clause 19: diagnostics library}{section.C.5}% 2764
\BOOKMARK [2][-]{subsection.C.5.10}{C.5.10 Clause 22: general utilities library}{section.C.5}% 2765
\BOOKMARK [2][-]{subsection.C.5.11}{C.5.11 Clause 23: strings library}{section.C.5}% 2766
\BOOKMARK [2][-]{subsection.C.5.12}{C.5.12 Clause 24: containers library}{section.C.5}% 2767
\BOOKMARK [2][-]{subsection.C.5.13}{C.5.13 Clause 27: algorithms library}{section.C.5}% 2768
\BOOKMARK [2][-]{subsection.C.5.14}{C.5.14 Clause 28: numerics library}{section.C.5}% 2769
\BOOKMARK [2][-]{subsection.C.5.15}{C.5.15 Clause 30: localization library}{section.C.5}% 2770
\BOOKMARK [2][-]{subsection.C.5.16}{C.5.16 Clause 31: input/output library}{section.C.5}% 2771
\BOOKMARK [1][-]{section.C.6}{C.6 C++ and ISO C}{appendix.C}% 2772
\BOOKMARK [2][-]{subsection.C.6.1}{C.6.1 General}{section.C.6}% 2773
\BOOKMARK [2][-]{subsection.C.6.2}{C.6.2 Clause 5: lexical conventions}{section.C.6}% 2774
\BOOKMARK [2][-]{subsection.C.6.3}{C.6.3 Clause 6: basics}{section.C.6}% 2775
\BOOKMARK [2][-]{subsection.C.6.4}{C.6.4 Clause 7: expressions}{section.C.6}% 2776
\BOOKMARK [2][-]{subsection.C.6.5}{C.6.5 Clause 8: statements}{section.C.6}% 2777
\BOOKMARK [2][-]{subsection.C.6.6}{C.6.6 Clause 9: declarations}{section.C.6}% 2778
\BOOKMARK [2][-]{subsection.C.6.7}{C.6.7 Clause 11: classes}{section.C.6}% 2779
\BOOKMARK [2][-]{subsection.C.6.8}{C.6.8 Clause 15: preprocessing directives}{section.C.6}% 2780
\BOOKMARK [1][-]{section.C.7}{C.7 C standard library}{appendix.C}% 2781
\BOOKMARK [2][-]{subsection.C.7.1}{C.7.1 General}{section.C.7}% 2782
\BOOKMARK [2][-]{subsection.C.7.2}{C.7.2 Modifications to headers}{section.C.7}% 2783
\BOOKMARK [2][-]{subsection.C.7.3}{C.7.3 Modifications to definitions}{section.C.7}% 2784
\BOOKMARK [3][-]{subsubsection.C.7.3.1}{C.7.3.1 Types char16\137t and char32\137t}{subsection.C.7.3}% 2785
\BOOKMARK [3][-]{subsubsection.C.7.3.2}{C.7.3.2 Type wchar\137t}{subsection.C.7.3}% 2786
\BOOKMARK [3][-]{subsubsection.C.7.3.3}{C.7.3.3 Header <assert.h>}{subsection.C.7.3}% 2787
\BOOKMARK [3][-]{subsubsection.C.7.3.4}{C.7.3.4 Header <iso646.h>}{subsection.C.7.3}% 2788
\BOOKMARK [3][-]{subsubsection.C.7.3.5}{C.7.3.5 Header <stdalign.h>}{subsection.C.7.3}% 2789
\BOOKMARK [3][-]{subsubsection.C.7.3.6}{C.7.3.6 Header <stdbool.h>}{subsection.C.7.3}% 2790
\BOOKMARK [3][-]{subsubsection.C.7.3.7}{C.7.3.7 Macro NULL}{subsection.C.7.3}% 2791
\BOOKMARK [2][-]{subsection.C.7.4}{C.7.4 Modifications to declarations}{section.C.7}% 2792
\BOOKMARK [2][-]{subsection.C.7.5}{C.7.5 Modifications to behavior}{section.C.7}% 2793
\BOOKMARK [3][-]{subsubsection.C.7.5.1}{C.7.5.1 General}{subsection.C.7.5}% 2794
\BOOKMARK [3][-]{subsubsection.C.7.5.2}{C.7.5.2 Macro offsetof\(type, member-designator\)}{subsection.C.7.5}% 2795
\BOOKMARK [3][-]{subsubsection.C.7.5.3}{C.7.5.3 Memory allocation functions}{subsection.C.7.5}% 2796
\BOOKMARK [0][-]{appendix.D}{D Compatibility features}{}% 2797
\BOOKMARK [1][-]{section.D.1}{D.1 General}{appendix.D}% 2798
\BOOKMARK [1][-]{section.D.2}{D.2 Arithmetic conversion on enumerations}{appendix.D}% 2799
\BOOKMARK [1][-]{section.D.3}{D.3 Implicit capture of *this by reference}{appendix.D}% 2800
\BOOKMARK [1][-]{section.D.4}{D.4 Array comparisons}{appendix.D}% 2801
\BOOKMARK [1][-]{section.D.5}{D.5 Deprecated volatile types}{appendix.D}% 2802
\BOOKMARK [1][-]{section.D.6}{D.6 Redeclaration of static constexpr data members}{appendix.D}% 2803
\BOOKMARK [1][-]{section.D.7}{D.7 Non-local use of TU-local entities}{appendix.D}% 2804
\BOOKMARK [1][-]{section.D.8}{D.8 Implicit declaration of copy functions}{appendix.D}% 2805
\BOOKMARK [1][-]{section.D.9}{D.9 template keyword before qualified names}{appendix.D}% 2806
\BOOKMARK [1][-]{section.D.10}{D.10 Requires paragraph}{appendix.D}% 2807
\BOOKMARK [1][-]{section.D.11}{D.11 Relational operators}{appendix.D}% 2808
\BOOKMARK [1][-]{section.D.12}{D.12 char* streams}{appendix.D}% 2809
\BOOKMARK [2][-]{subsection.D.12.1}{D.12.1 Header <strstream> synopsis}{section.D.12}% 2810
\BOOKMARK [2][-]{subsection.D.12.2}{D.12.2 Class strstreambuf}{section.D.12}% 2811
\BOOKMARK [3][-]{subsubsection.D.12.2.1}{D.12.2.1 General}{subsection.D.12.2}% 2812
\BOOKMARK [3][-]{subsubsection.D.12.2.2}{D.12.2.2 strstreambuf constructors}{subsection.D.12.2}% 2813
\BOOKMARK [3][-]{subsubsection.D.12.2.3}{D.12.2.3 Member functions}{subsection.D.12.2}% 2814
\BOOKMARK [3][-]{subsubsection.D.12.2.4}{D.12.2.4 strstreambuf overridden virtual functions}{subsection.D.12.2}% 2815
\BOOKMARK [2][-]{subsection.D.12.3}{D.12.3 Class istrstream}{section.D.12}% 2816
\BOOKMARK [3][-]{subsubsection.D.12.3.1}{D.12.3.1 General}{subsection.D.12.3}% 2817
\BOOKMARK [3][-]{subsubsection.D.12.3.2}{D.12.3.2 istrstream constructors}{subsection.D.12.3}% 2818
\BOOKMARK [3][-]{subsubsection.D.12.3.3}{D.12.3.3 Member functions}{subsection.D.12.3}% 2819
\BOOKMARK [2][-]{subsection.D.12.4}{D.12.4 Class ostrstream}{section.D.12}% 2820
\BOOKMARK [3][-]{subsubsection.D.12.4.1}{D.12.4.1 General}{subsection.D.12.4}% 2821
\BOOKMARK [3][-]{subsubsection.D.12.4.2}{D.12.4.2 ostrstream constructors}{subsection.D.12.4}% 2822
\BOOKMARK [3][-]{subsubsection.D.12.4.3}{D.12.4.3 Member functions}{subsection.D.12.4}% 2823
\BOOKMARK [2][-]{subsection.D.12.5}{D.12.5 Class strstream}{section.D.12}% 2824
\BOOKMARK [3][-]{subsubsection.D.12.5.1}{D.12.5.1 General}{subsection.D.12.5}% 2825
\BOOKMARK [3][-]{subsubsection.D.12.5.2}{D.12.5.2 strstream constructors}{subsection.D.12.5}% 2826
\BOOKMARK [3][-]{subsubsection.D.12.5.3}{D.12.5.3 strstream destructor}{subsection.D.12.5}% 2827
\BOOKMARK [3][-]{subsubsection.D.12.5.4}{D.12.5.4 strstream operations}{subsection.D.12.5}% 2828
\BOOKMARK [1][-]{section.D.13}{D.13 The default allocator}{appendix.D}% 2829
\BOOKMARK [1][-]{section.D.14}{D.14 Deprecated polymorphic\137allocator member function}{appendix.D}% 2830
\BOOKMARK [1][-]{section.D.15}{D.15 Deprecated type traits}{appendix.D}% 2831
\BOOKMARK [1][-]{section.D.16}{D.16 Tuple}{appendix.D}% 2832
\BOOKMARK [1][-]{section.D.17}{D.17 Variant}{appendix.D}% 2833
\BOOKMARK [1][-]{section.D.18}{D.18 Deprecated iterator class template}{appendix.D}% 2834
\BOOKMARK [1][-]{section.D.19}{D.19 Deprecated move\137iterator access}{appendix.D}% 2835
\BOOKMARK [1][-]{section.D.20}{D.20 Deprecated shared\137ptr atomic access}{appendix.D}% 2836
\BOOKMARK [1][-]{section.D.21}{D.21 Deprecated basic\137string capacity}{appendix.D}% 2837
\BOOKMARK [1][-]{section.D.22}{D.22 Deprecated standard code conversion facets}{appendix.D}% 2838
\BOOKMARK [2][-]{subsection.D.22.1}{D.22.1 General}{section.D.22}% 2839
\BOOKMARK [2][-]{subsection.D.22.2}{D.22.2 Header <codecvt> synopsis}{section.D.22}% 2840
\BOOKMARK [2][-]{subsection.D.22.3}{D.22.3 Requirements}{section.D.22}% 2841
\BOOKMARK [1][-]{section.D.23}{D.23 Deprecated convenience conversion interfaces}{appendix.D}% 2842
\BOOKMARK [2][-]{subsection.D.23.1}{D.23.1 General}{section.D.23}% 2843
\BOOKMARK [2][-]{subsection.D.23.2}{D.23.2 Class template wstring\137convert}{section.D.23}% 2844
\BOOKMARK [2][-]{subsection.D.23.3}{D.23.3 Class template wbuffer\137convert}{section.D.23}% 2845
\BOOKMARK [1][-]{section.D.24}{D.24 Deprecated locale category facets}{appendix.D}% 2846
\BOOKMARK [1][-]{section.D.25}{D.25 Deprecated filesystem path factory functions}{appendix.D}% 2847
\BOOKMARK [1][-]{section.D.26}{D.26 Deprecated atomic operations}{appendix.D}% 2848
\BOOKMARK [2][-]{subsection.D.26.1}{D.26.1 General}{section.D.26}% 2849
\BOOKMARK [2][-]{subsection.D.26.2}{D.26.2 Volatile access}{section.D.26}% 2850
\BOOKMARK [2][-]{subsection.D.26.3}{D.26.3 Non-member functions}{section.D.26}% 2851
\BOOKMARK [2][-]{subsection.D.26.4}{D.26.4 Operations on atomic types}{section.D.26}% 2852
\BOOKMARK [2][-]{subsection.D.26.5}{D.26.5 Flag type and operations}{section.D.26}% 2853
\BOOKMARK [0][-]{appendix.E}{E Conformance with UAX \04331}{}% 2854
\BOOKMARK [1][-]{section.E.1}{E.1 General}{appendix.E}% 2855
\BOOKMARK [1][-]{section.E.2}{E.2 R1 Default identifiers}{appendix.E}% 2856
\BOOKMARK [2][-]{subsection.E.2.1}{E.2.1 General}{section.E.2}% 2857
\BOOKMARK [2][-]{subsection.E.2.2}{E.2.2 R1a Restricted format characters}{section.E.2}% 2858
\BOOKMARK [2][-]{subsection.E.2.3}{E.2.3 R1b Stable identifiers}{section.E.2}% 2859
\BOOKMARK [1][-]{section.E.3}{E.3 R2 Immutable identifiers}{appendix.E}% 2860
\BOOKMARK [1][-]{section.E.4}{E.4 R3 Pattern\137White\137Space and Pattern\137Syntax characters}{appendix.E}% 2861
\BOOKMARK [1][-]{section.E.5}{E.5 R4 Equivalent normalized identifiers}{appendix.E}% 2862
\BOOKMARK [1][-]{section.E.6}{E.6 R5 Equivalent case-insensitive identifiers}{appendix.E}% 2863
\BOOKMARK [1][-]{section.E.7}{E.7 R6 Filtered normalized identifiers}{appendix.E}% 2864
\BOOKMARK [1][-]{section.E.8}{E.8 R7 Filtered case-insensitive identifiers}{appendix.E}% 2865
\BOOKMARK [1][-]{section.E.9}{E.9 R8 Hashtag identifiers}{appendix.E}% 2866
\BOOKMARK [0][-]{appendix*.3}{Bibliography}{}% 2867
\BOOKMARK [0][-]{section*.4}{Cross references}{}% 2868
\BOOKMARK [0][-]{section*.5}{Cross references from ISO C++ 2020}{}% 2869
\BOOKMARK [0][-]{section*.6}{Index}{}% 2870
\BOOKMARK [1][-]{pdf.idx.general.Symbols.1}{Symbols}{section*.6}% 2871
\BOOKMARK [1][-]{pdf.idx.general.Numbers.1}{Numbers}{section*.6}% 2872
\BOOKMARK [1][-]{pdf.idx.general.A.1}{A}{section*.6}% 2873
\BOOKMARK [1][-]{pdf.idx.general.B.1}{B}{section*.6}% 2874
\BOOKMARK [1][-]{pdf.idx.general.C.1}{C}{section*.6}% 2875
\BOOKMARK [1][-]{pdf.idx.general.D.1}{D}{section*.6}% 2876
\BOOKMARK [1][-]{pdf.idx.general.E.1}{E}{section*.6}% 2877
\BOOKMARK [1][-]{pdf.idx.general.F.1}{F}{section*.6}% 2878
\BOOKMARK [1][-]{pdf.idx.general.G.1}{G}{section*.6}% 2879
\BOOKMARK [1][-]{pdf.idx.general.H.1}{H}{section*.6}% 2880
\BOOKMARK [1][-]{pdf.idx.general.I.1}{I}{section*.6}% 2881
\BOOKMARK [1][-]{pdf.idx.general.J.1}{J}{section*.6}% 2882
\BOOKMARK [1][-]{pdf.idx.general.K.1}{K}{section*.6}% 2883
\BOOKMARK [1][-]{pdf.idx.general.L.1}{L}{section*.6}% 2884
\BOOKMARK [1][-]{pdf.idx.general.M.1}{M}{section*.6}% 2885
\BOOKMARK [1][-]{pdf.idx.general.N.1}{N}{section*.6}% 2886
\BOOKMARK [1][-]{pdf.idx.general.O.1}{O}{section*.6}% 2887
\BOOKMARK [1][-]{pdf.idx.general.P.1}{P}{section*.6}% 2888
\BOOKMARK [1][-]{pdf.idx.general.Q.1}{Q}{section*.6}% 2889
\BOOKMARK [1][-]{pdf.idx.general.R.1}{R}{section*.6}% 2890
\BOOKMARK [1][-]{pdf.idx.general.S.1}{S}{section*.6}% 2891
\BOOKMARK [1][-]{pdf.idx.general.T.1}{T}{section*.6}% 2892
\BOOKMARK [1][-]{pdf.idx.general.U.1}{U}{section*.6}% 2893
\BOOKMARK [1][-]{pdf.idx.general.V.1}{V}{section*.6}% 2894
\BOOKMARK [1][-]{pdf.idx.general.W.1}{W}{section*.6}% 2895
\BOOKMARK [1][-]{pdf.idx.general.X.1}{X}{section*.6}% 2896
\BOOKMARK [1][-]{pdf.idx.general.Y.1}{Y}{section*.6}% 2897
\BOOKMARK [1][-]{pdf.idx.general.Z.1}{Z}{section*.6}% 2898
\BOOKMARK [0][-]{section*.35}{Index of grammar productions}{}% 2899
\BOOKMARK [0][-]{section*.36}{Index of library headers}{}% 2900
\BOOKMARK [0][-]{section*.37}{Index of library names}{}% 2901
\BOOKMARK [1][-]{pdf.idx.library.Symbols.1}{Symbols}{section*.37}% 2902
\BOOKMARK [1][-]{pdf.idx.library.Numbers.1}{Numbers}{section*.37}% 2903
\BOOKMARK [1][-]{pdf.idx.library.A.1}{A}{section*.37}% 2904
\BOOKMARK [1][-]{pdf.idx.library.B.1}{B}{section*.37}% 2905
\BOOKMARK [1][-]{pdf.idx.library.C.1}{C}{section*.37}% 2906
\BOOKMARK [1][-]{pdf.idx.library.D.1}{D}{section*.37}% 2907
\BOOKMARK [1][-]{pdf.idx.library.E.1}{E}{section*.37}% 2908
\BOOKMARK [1][-]{pdf.idx.library.F.1}{F}{section*.37}% 2909
\BOOKMARK [1][-]{pdf.idx.library.G.1}{G}{section*.37}% 2910
\BOOKMARK [1][-]{pdf.idx.library.H.1}{H}{section*.37}% 2911
\BOOKMARK [1][-]{pdf.idx.library.I.1}{I}{section*.37}% 2912
\BOOKMARK [1][-]{pdf.idx.library.J.1}{J}{section*.37}% 2913
\BOOKMARK [1][-]{pdf.idx.library.K.1}{K}{section*.37}% 2914
\BOOKMARK [1][-]{pdf.idx.library.L.1}{L}{section*.37}% 2915
\BOOKMARK [1][-]{pdf.idx.library.M.1}{M}{section*.37}% 2916
\BOOKMARK [1][-]{pdf.idx.library.N.1}{N}{section*.37}% 2917
\BOOKMARK [1][-]{pdf.idx.library.O.1}{O}{section*.37}% 2918
\BOOKMARK [1][-]{pdf.idx.library.P.1}{P}{section*.37}% 2919
\BOOKMARK [1][-]{pdf.idx.library.Q.1}{Q}{section*.37}% 2920
\BOOKMARK [1][-]{pdf.idx.library.R.1}{R}{section*.37}% 2921
\BOOKMARK [1][-]{pdf.idx.library.S.1}{S}{section*.37}% 2922
\BOOKMARK [1][-]{pdf.idx.library.T.1}{T}{section*.37}% 2923
\BOOKMARK [1][-]{pdf.idx.library.U.1}{U}{section*.37}% 2924
\BOOKMARK [1][-]{pdf.idx.library.V.1}{V}{section*.37}% 2925
\BOOKMARK [1][-]{pdf.idx.library.W.1}{W}{section*.37}% 2926
\BOOKMARK [1][-]{pdf.idx.library.X.1}{X}{section*.37}% 2927
\BOOKMARK [1][-]{pdf.idx.library.Y.1}{Y}{section*.37}% 2928
\BOOKMARK [1][-]{pdf.idx.library.Z.1}{Z}{section*.37}% 2929
\BOOKMARK [0][-]{section*.66}{Index of library concepts}{}% 2930
\BOOKMARK [0][-]{section*.67}{Index of implementation-defined behavior}{}% 2931
